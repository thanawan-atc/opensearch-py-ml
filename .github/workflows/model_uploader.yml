name: Model Auto-tracing & Uploading
on:
  # Step 1: Initiate the workflow
  workflow_dispatch:
    inputs:
      model_id:
        description: "Model ID for auto-tracing and uploading (e.g. sentence-transformers/msmarco-distilbert-base-tas-b)"
        required: true
        type: string
      model_version:
        description: "Model version number (e.g. 1.0.1)"
        required: true
        type: string
      tracing_format:
        description: "Model format for auto-tracing (torch_script/onnx)"
        required: true
        type: choice
        options:
        - "BOTH"
        - "TORCH_SCRIPT"
        - "ONNX"
      embedding_dimension:
        description: "(Optional) Embedding Dimension (Specify here if it does not exist in original config.json file, or you want to overwrite it.)"
        required: false
        type: int
      pooling_mode:
        description: "(Optional) Pooling Mode (Specify here if it does not exist in original config.json file or you want to overwrite it.)"
        required: false
        type: choice
        options:
        - ""
        - "CLS"
        - "MEAN"
        - "MAX"
        - "MEAN_SQRT_LEN"

jobs:
  # Step 2: Check if the model already exists in the model hub
  checking-out-model-hub:
    runs-on: 'ubuntu-latest'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.MODEL_UPLOADER_AWS_REGION }}
          role-to-assume: ${{ secrets.MODEL_UPLOADER_ROLE }}
          role-session-name: checking-out-model-hub
      - name: Check if TORCH_SCRIPT Model Exists
        if: github.event.inputs.tracing_format == 'TORCH_SCRIPT' || github.event.inputs.tracing_format == 'BOTH'
        run: |
          TORCH_FILE_PATH=$(python utils/model_uploader/save_model_file_path_to_env.py \
            ${{ github.event.inputs.model_id }} ${{ github.event.inputs.model_version }} TORCH_SCRIPT)
          aws s3api head-object --bucket opensearch-exp --key $TORCH_FILE_PATH > /dev/null 2>&1 || TORCH_MODEL_NOT_EXIST=true
          if [[ -z $TORCH_MODEL_NOT_EXIST ]];
          then
            echo "TORCH_SCRIPT Model already exists on model hub."
            exit 1
          fi
      - name: Check if ONNX Model Exists
        if: github.event.inputs.tracing_format == 'ONNX' || github.event.inputs.tracing_format == 'BOTH'
        run: |
          ONNX_FILE_PATH=$(python utils/model_uploader/save_model_file_path_to_env.py \
            ${{ github.event.inputs.model_id }} ${{ github.event.inputs.model_version }} ONNX)
          aws s3api head-object --bucket opensearch-exp --key $ONNX_FILE_PATH > /dev/null 2>&1 || ONNX_MODEL_NOT_EXIST=true
          if [[ -z $ONNX_MODEL_NOT_EXIST ]];
          then
            echo "TORCH_SCRIPT Model already exists on model hub."
            exit 1;
          fi
      
  # Step 5: Download the artifacts & Upload it to the S3 bucket
  model-uploading:
    needs: checking-out-model-hub
    runs-on: 'ubuntu-latest'
    permissions:
      id-token: write
      contents: read
    concurrency: ${{ github.workflow }}-concurrency
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Copy Files to the Bucket
        run: |
          aws s3 sync ./upload/ s3://opensearch-exp/ml-models/huggingface/sentence-transformers/
      - name: Update MODEL_UPLOAD_HISTORY.md
        run: |
          time=$(TZ='America/Los_Angeles' date "+%Y-%m-%d %T")
          python utils/model_uploader/update_models_upload_history_md.py \
            ${{ github.event.inputs.model_id }} \
            ${{ github.event.inputs.model_version }} \
            ${{ github.event.inputs.tracing_format }} \
            -ed ${{ github.event.inputs.embedding_dimension }} \
            -pm ${{ github.event.inputs.pooling_mode }} \
            -u ${{ github.actor }} -t ${time}
      - name: Commit Updates
        uses: stefanzweifel/git-auto-commit-action@v4
        id: commit
        with:
          commit_message: 'Update MODEL_UPLOAD_HISTORY.md (${{ github.event.inputs.model_id }})'
          commit_options: '--signoff'
          repository: ./utils/model_uploader/
          file_pattern: MODEL_UPLOAD_HISTORY.md supported_models.json
          
