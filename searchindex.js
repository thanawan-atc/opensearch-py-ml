Search.setIndex({"docnames": ["examples/demo_ml_commons_integration", "examples/demo_notebook", "examples/demo_tracing_model_torchscript_onnx", "examples/demo_transformer_model_train_save_upload_to_openSearch", "examples/index", "examples/online_retail_analysis", "index", "reference/api/DataFrame", "reference/api/DataFrame.agg", "reference/api/DataFrame.aggregate", "reference/api/DataFrame.columns", "reference/api/DataFrame.count", "reference/api/DataFrame.describe", "reference/api/DataFrame.drop", "reference/api/DataFrame.dtypes", "reference/api/DataFrame.empty", "reference/api/DataFrame.filter", "reference/api/DataFrame.get", "reference/api/DataFrame.groupby", "reference/api/DataFrame.head", "reference/api/DataFrame.hist", "reference/api/DataFrame.idxmax", "reference/api/DataFrame.idxmin", "reference/api/DataFrame.index", "reference/api/DataFrame.info", "reference/api/DataFrame.iterrows", "reference/api/DataFrame.itertuples", "reference/api/DataFrame.keys", "reference/api/DataFrame.mad", "reference/api/DataFrame.max", "reference/api/DataFrame.mean", "reference/api/DataFrame.median", "reference/api/DataFrame.min", "reference/api/DataFrame.mode", "reference/api/DataFrame.ndim", "reference/api/DataFrame.nunique", "reference/api/DataFrame.os_dtypes", "reference/api/DataFrame.os_info", "reference/api/DataFrame.os_match", "reference/api/DataFrame.os_query", "reference/api/DataFrame.quantile", "reference/api/DataFrame.query", "reference/api/DataFrame.sample", "reference/api/DataFrame.select_dtypes", "reference/api/DataFrame.shape", "reference/api/DataFrame.size", "reference/api/DataFrame.std", "reference/api/DataFrame.sum", "reference/api/DataFrame.tail", "reference/api/DataFrame.to_csv", "reference/api/DataFrame.to_html", "reference/api/DataFrame.to_numpy", "reference/api/DataFrame.to_pandas", "reference/api/DataFrame.to_string", "reference/api/DataFrame.values", "reference/api/DataFrame.var", "reference/api/Index", "reference/api/Series", "reference/api/Series.add", "reference/api/Series.describe", "reference/api/Series.div", "reference/api/Series.divide", "reference/api/Series.dtype", "reference/api/Series.dtypes", "reference/api/Series.empty", "reference/api/Series.filter", "reference/api/Series.floordiv", "reference/api/Series.head", "reference/api/Series.hist", "reference/api/Series.index", "reference/api/Series.isin", "reference/api/Series.isna", "reference/api/Series.isnull", "reference/api/Series.mad", "reference/api/Series.max", "reference/api/Series.mean", "reference/api/Series.median", "reference/api/Series.min", "reference/api/Series.mod", "reference/api/Series.mode", "reference/api/Series.mul", "reference/api/Series.multiply", "reference/api/Series.name", "reference/api/Series.ndim", "reference/api/Series.notna", "reference/api/Series.notnull", "reference/api/Series.nunique", "reference/api/Series.os_dtype", "reference/api/Series.os_dtypes", "reference/api/Series.os_info", "reference/api/Series.os_match", "reference/api/Series.pow", "reference/api/Series.quantile", "reference/api/Series.radd", "reference/api/Series.rdiv", "reference/api/Series.rdivide", "reference/api/Series.rename", "reference/api/Series.rfloordiv", "reference/api/Series.rmod", "reference/api/Series.rmul", "reference/api/Series.rmultiply", "reference/api/Series.rpow", "reference/api/Series.rsub", "reference/api/Series.rsubtract", "reference/api/Series.rtruediv", "reference/api/Series.sample", "reference/api/Series.shape", "reference/api/Series.size", "reference/api/Series.std", "reference/api/Series.sub", "reference/api/Series.subtract", "reference/api/Series.sum", "reference/api/Series.tail", "reference/api/Series.to_numpy", "reference/api/Series.to_pandas", "reference/api/Series.to_string", "reference/api/Series.truediv", "reference/api/Series.unique", "reference/api/Series.value_counts", "reference/api/Series.var", "reference/api/csv_to_opensearch", "reference/api/groupby.DataFrameGroupBy", "reference/api/groupby.DataFrameGroupBy.agg", "reference/api/groupby.DataFrameGroupBy.aggregate", "reference/api/groupby.DataFrameGroupBy.count", "reference/api/groupby.DataFrameGroupBy.mad", "reference/api/groupby.DataFrameGroupBy.max", "reference/api/groupby.DataFrameGroupBy.mean", "reference/api/groupby.DataFrameGroupBy.median", "reference/api/groupby.DataFrameGroupBy.min", "reference/api/groupby.DataFrameGroupBy.nunique", "reference/api/groupby.DataFrameGroupBy.quantile", "reference/api/groupby.DataFrameGroupBy.std", "reference/api/groupby.DataFrameGroupBy.sum", "reference/api/groupby.DataFrameGroupBy.var", "reference/api/groupby.GroupBy", "reference/api/ml_commons_delete_model_api", "reference/api/ml_commons_delete_task_api", "reference/api/ml_commons_deploy_api", "reference/api/ml_commons_execute_api", "reference/api/ml_commons_generate_embedding_api", "reference/api/ml_commons_get_model_info_api", "reference/api/ml_commons_get_task_info_api", "reference/api/ml_commons_load_api", "reference/api/ml_commons_register_api", "reference/api/ml_commons_register_pretrained_api", "reference/api/ml_commons_undeploy_model_api", "reference/api/ml_commons_unload_model_api", "reference/api/ml_commons_upload_api", "reference/api/ml_commons_upload_pretrained_api", "reference/api/opensearch_to_pandas", "reference/api/pandas_to_opensearch", "reference/api/sentence_transformer", "reference/api/sentence_transformer.load_training_data", "reference/api/sentence_transformer.make_model_config_json", "reference/api/sentence_transformer.read_queries", "reference/api/sentence_transformer.save_as_onnx", "reference/api/sentence_transformer.save_as_pt", "reference/api/sentence_transformer.set_up_accelerate_config", "reference/api/sentence_transformer.train", "reference/api/sentence_transformer.train_model", "reference/api/sentence_transformer.zip_model", "reference/dataframe", "reference/general_utility_functions", "reference/index", "reference/io", "reference/mlcommons", "reference/pre_trained_models", "reference/sentencetransformer", "reference/series"], "filenames": ["examples/demo_ml_commons_integration.ipynb", "examples/demo_notebook.ipynb", "examples/demo_tracing_model_torchscript_onnx.ipynb", "examples/demo_transformer_model_train_save_upload_to_openSearch.ipynb", "examples/index.rst", "examples/online_retail_analysis.ipynb", "index.rst", "reference/api/DataFrame.rst", "reference/api/DataFrame.agg.rst", "reference/api/DataFrame.aggregate.rst", "reference/api/DataFrame.columns.rst", "reference/api/DataFrame.count.rst", "reference/api/DataFrame.describe.rst", "reference/api/DataFrame.drop.rst", "reference/api/DataFrame.dtypes.rst", "reference/api/DataFrame.empty.rst", "reference/api/DataFrame.filter.rst", "reference/api/DataFrame.get.rst", "reference/api/DataFrame.groupby.rst", "reference/api/DataFrame.head.rst", "reference/api/DataFrame.hist.rst", "reference/api/DataFrame.idxmax.rst", "reference/api/DataFrame.idxmin.rst", "reference/api/DataFrame.index.rst", "reference/api/DataFrame.info.rst", "reference/api/DataFrame.iterrows.rst", "reference/api/DataFrame.itertuples.rst", "reference/api/DataFrame.keys.rst", "reference/api/DataFrame.mad.rst", "reference/api/DataFrame.max.rst", "reference/api/DataFrame.mean.rst", "reference/api/DataFrame.median.rst", "reference/api/DataFrame.min.rst", "reference/api/DataFrame.mode.rst", "reference/api/DataFrame.ndim.rst", "reference/api/DataFrame.nunique.rst", "reference/api/DataFrame.os_dtypes.rst", "reference/api/DataFrame.os_info.rst", "reference/api/DataFrame.os_match.rst", "reference/api/DataFrame.os_query.rst", "reference/api/DataFrame.quantile.rst", "reference/api/DataFrame.query.rst", "reference/api/DataFrame.sample.rst", "reference/api/DataFrame.select_dtypes.rst", "reference/api/DataFrame.shape.rst", "reference/api/DataFrame.size.rst", "reference/api/DataFrame.std.rst", "reference/api/DataFrame.sum.rst", "reference/api/DataFrame.tail.rst", "reference/api/DataFrame.to_csv.rst", "reference/api/DataFrame.to_html.rst", "reference/api/DataFrame.to_numpy.rst", "reference/api/DataFrame.to_pandas.rst", "reference/api/DataFrame.to_string.rst", "reference/api/DataFrame.values.rst", "reference/api/DataFrame.var.rst", "reference/api/Index.rst", "reference/api/Series.rst", "reference/api/Series.add.rst", "reference/api/Series.describe.rst", "reference/api/Series.div.rst", "reference/api/Series.divide.rst", "reference/api/Series.dtype.rst", "reference/api/Series.dtypes.rst", "reference/api/Series.empty.rst", "reference/api/Series.filter.rst", "reference/api/Series.floordiv.rst", "reference/api/Series.head.rst", "reference/api/Series.hist.rst", "reference/api/Series.index.rst", "reference/api/Series.isin.rst", "reference/api/Series.isna.rst", "reference/api/Series.isnull.rst", "reference/api/Series.mad.rst", "reference/api/Series.max.rst", "reference/api/Series.mean.rst", "reference/api/Series.median.rst", "reference/api/Series.min.rst", "reference/api/Series.mod.rst", "reference/api/Series.mode.rst", "reference/api/Series.mul.rst", "reference/api/Series.multiply.rst", "reference/api/Series.name.rst", "reference/api/Series.ndim.rst", "reference/api/Series.notna.rst", "reference/api/Series.notnull.rst", "reference/api/Series.nunique.rst", "reference/api/Series.os_dtype.rst", "reference/api/Series.os_dtypes.rst", "reference/api/Series.os_info.rst", "reference/api/Series.os_match.rst", "reference/api/Series.pow.rst", "reference/api/Series.quantile.rst", "reference/api/Series.radd.rst", "reference/api/Series.rdiv.rst", "reference/api/Series.rdivide.rst", "reference/api/Series.rename.rst", "reference/api/Series.rfloordiv.rst", "reference/api/Series.rmod.rst", "reference/api/Series.rmul.rst", "reference/api/Series.rmultiply.rst", "reference/api/Series.rpow.rst", "reference/api/Series.rsub.rst", "reference/api/Series.rsubtract.rst", "reference/api/Series.rtruediv.rst", "reference/api/Series.sample.rst", "reference/api/Series.shape.rst", "reference/api/Series.size.rst", "reference/api/Series.std.rst", "reference/api/Series.sub.rst", "reference/api/Series.subtract.rst", "reference/api/Series.sum.rst", "reference/api/Series.tail.rst", "reference/api/Series.to_numpy.rst", "reference/api/Series.to_pandas.rst", "reference/api/Series.to_string.rst", "reference/api/Series.truediv.rst", "reference/api/Series.unique.rst", "reference/api/Series.value_counts.rst", "reference/api/Series.var.rst", "reference/api/csv_to_opensearch.rst", "reference/api/groupby.DataFrameGroupBy.rst", "reference/api/groupby.DataFrameGroupBy.agg.rst", "reference/api/groupby.DataFrameGroupBy.aggregate.rst", "reference/api/groupby.DataFrameGroupBy.count.rst", "reference/api/groupby.DataFrameGroupBy.mad.rst", "reference/api/groupby.DataFrameGroupBy.max.rst", "reference/api/groupby.DataFrameGroupBy.mean.rst", "reference/api/groupby.DataFrameGroupBy.median.rst", "reference/api/groupby.DataFrameGroupBy.min.rst", "reference/api/groupby.DataFrameGroupBy.nunique.rst", "reference/api/groupby.DataFrameGroupBy.quantile.rst", "reference/api/groupby.DataFrameGroupBy.std.rst", "reference/api/groupby.DataFrameGroupBy.sum.rst", "reference/api/groupby.DataFrameGroupBy.var.rst", "reference/api/groupby.GroupBy.rst", "reference/api/ml_commons_delete_model_api.rst", "reference/api/ml_commons_delete_task_api.rst", "reference/api/ml_commons_deploy_api.rst", "reference/api/ml_commons_execute_api.rst", "reference/api/ml_commons_generate_embedding_api.rst", "reference/api/ml_commons_get_model_info_api.rst", "reference/api/ml_commons_get_task_info_api.rst", "reference/api/ml_commons_load_api.rst", "reference/api/ml_commons_register_api.rst", "reference/api/ml_commons_register_pretrained_api.rst", "reference/api/ml_commons_undeploy_model_api.rst", "reference/api/ml_commons_unload_model_api.rst", "reference/api/ml_commons_upload_api.rst", "reference/api/ml_commons_upload_pretrained_api.rst", "reference/api/opensearch_to_pandas.rst", "reference/api/pandas_to_opensearch.rst", "reference/api/sentence_transformer.rst", "reference/api/sentence_transformer.load_training_data.rst", "reference/api/sentence_transformer.make_model_config_json.rst", "reference/api/sentence_transformer.read_queries.rst", "reference/api/sentence_transformer.save_as_onnx.rst", "reference/api/sentence_transformer.save_as_pt.rst", "reference/api/sentence_transformer.set_up_accelerate_config.rst", "reference/api/sentence_transformer.train.rst", "reference/api/sentence_transformer.train_model.rst", "reference/api/sentence_transformer.zip_model.rst", "reference/dataframe.rst", "reference/general_utility_functions.rst", "reference/index.rst", "reference/io.rst", "reference/mlcommons.rst", "reference/pre_trained_models.rst", "reference/sentencetransformer.rst", "reference/series.rst"], "titles": ["Demo Notebook for MLCommons Integration", "Demo Notebook for Dataframe", "Demo Notebook to trace Sentence Transformers model", "Demo Notebook for Sentence Transformer Model Training, Saving and Uploading to OpenSearch", "Examples", "Demo Notebook for Online Retail Analysis", "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch", "DataFrame", "DataFrame.agg", "DataFrame.aggregate", "DataFrame.columns", "DataFrame.count", "DataFrame.describe", "DataFrame.drop", "DataFrame.dtypes", "DataFrame.empty", "DataFrame.filter", "DataFrame.get", "DataFrame.groupby", "DataFrame.head", "DataFrame.hist", "DataFrame.idxmax", "DataFrame.idxmin", "DataFrame.index", "DataFrame.info", "DataFrame.iterrows", "DataFrame.itertuples", "DataFrame.keys", "DataFrame.mad", "DataFrame.max", "DataFrame.mean", "DataFrame.median", "DataFrame.min", "DataFrame.mode", "DataFrame.ndim", "DataFrame.nunique", "DataFrame.os_dtypes", "DataFrame.os_info", "DataFrame.os_match", "DataFrame.os_query", "DataFrame.quantile", "DataFrame.query", "DataFrame.sample", "DataFrame.select_dtypes", "DataFrame.shape", "DataFrame.size", "DataFrame.std", "DataFrame.sum", "DataFrame.tail", "DataFrame.to_csv", "DataFrame.to_html", "DataFrame.to_numpy", "DataFrame.to_pandas", "DataFrame.to_string", "DataFrame.values", "DataFrame.var", "opensearch_py_ml.Index", "Series", "Series.add", "Series.describe", "Series.div", "Series.divide", "Series.dtype", "Series.dtypes", "Series.empty", "Series.filter", "Series.floordiv", "Series.head", "Series.hist", "Series.index", "Series.isin", "Series.isna", "Series.isnull", "Series.mad", "Series.max", "Series.mean", "Series.median", "Series.min", "Series.mod", "Series.mode", "Series.mul", "Series.multiply", "Series.name", "Series.ndim", "Series.notna", "Series.notnull", "Series.nunique", "Series.os_dtype", "Series.os_dtypes", "Series.os_info", "Series.os_match", "Series.pow", "Series.quantile", "Series.radd", "Series.rdiv", "Series.rdivide", "Series.rename", "Series.rfloordiv", "Series.rmod", "Series.rmul", "Series.rmultiply", "Series.rpow", "Series.rsub", "Series.rsubtract", "Series.rtruediv", "Series.sample", "Series.shape", "Series.size", "Series.std", "Series.sub", "Series.subtract", "Series.sum", "Series.tail", "Series.to_numpy", "Series.to_pandas", "Series.to_string", "Series.truediv", "Series.unique", "Series.value_counts", "Series.var", "csv_to_opensearch", "groupby.DataFrameGroupBy", "groupby.DataFrameGroupBy.agg", "groupby.DataFrameGroupBy.aggregate", "groupby.DataFrameGroupBy.count", "groupby.DataFrameGroupBy.mad", "groupby.DataFrameGroupBy.max", "groupby.DataFrameGroupBy.mean", "groupby.DataFrameGroupBy.median", "groupby.DataFrameGroupBy.min", "groupby.DataFrameGroupBy.nunique", "groupby.DataFrameGroupBy.quantile", "groupby.DataFrameGroupBy.std", "groupby.DataFrameGroupBy.sum", "groupby.DataFrameGroupBy.var", "groupby.GroupBy", "Delete Model", "Delete Task", "Deploy Model", "Execute", "Generate Embedding", "Get Model Info", "Get Task Info", "Load Model", "Register Model", "Register Pretrained Model", "Undeploy Model", "Unload Model", "Upload Model", "Upload Pretrained Model", "opensearch_to_pandas", "pandas_to_opensearch", "Sentence Transformer", "SentenceTransformerModel.load_training_data", "SentenceTransformerModel.make_model_config_json", "SentenceTransformerModel.read_queries", "SentenceTransformerModel.save_as_onnx", "SentenceTransformerModel.save_as_pt", "SentenceTransformerModel.set_up_accelerate_config", "SentenceTransformerModel.train", "SentenceTransformerModel.train_model", "SentenceTransformerModel.zip_model", "DataFrame", "General Utility Functions", "API Reference", "Input/Output", "MLCommons Support", "Pre-trained models", "Sentence Transformer", "Series"], "terms": {"thi": [0, 1, 2, 5, 7, 11, 16, 19, 24, 35, 37, 38, 45, 48, 50, 51, 53, 54, 56, 57, 65, 90, 96, 107, 113, 115, 118, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 164], "provid": [0, 2, 3, 12, 59], "walkthrough": [0, 2], "guidanc": [0, 2], "user": [0, 2, 3, 13, 35, 38, 41, 152, 154, 155, 158, 159, 167], "invok": 0, "api": [0, 2, 3, 6, 7, 23, 57, 69, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "ml": [0, 1, 2, 3, 5, 11, 26, 117, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 164], "instal": [0, 2, 3], "requir": [0, 1, 2, 3, 38, 51, 54, 56, 113, 150, 153, 154, 155, 157, 158, 159, 160, 167], "opensearch_py_ml": [0, 2, 3, 5, 7, 16, 18, 19, 23, 24, 25, 26, 37, 38, 39, 41, 42, 43, 48, 51, 52, 57, 58, 60, 61, 65, 66, 69, 71, 72, 78, 80, 81, 84, 85, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 113, 116, 117, 118, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "sentence_transformer_model": [0, 2, 3], "opensearchpi": [0, 1, 2, 3, 5, 57, 120], "py": [0, 1, 2, 3, 5, 26, 117, 164], "through": [0, 2, 3, 6], "pypi": [0, 2, 3, 6], "pip": [0, 2, 3, 6], "deprec": [0, 143, 147, 148, 149], "configur": [0, 3, 7, 152], "scheme": 0, "distutil": 0, "config": [0, 2, 3, 154, 158, 164, 167], "i": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 19, 20, 24, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 51, 54, 55, 56, 57, 59, 64, 65, 71, 72, 84, 85, 96, 113, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 143, 144, 145, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160], "longer": 0, "work": [0, 3, 8, 9, 38, 90, 152], "futur": 0, "If": [0, 1, 3, 6, 8, 9, 13, 15, 18, 26, 38, 39, 44, 51, 54, 57, 90, 113, 144, 145, 148, 149, 154, 156, 157, 159, 160, 161], "you": [0, 2, 3, 5, 6, 39, 143, 147, 148, 149], "ar": [0, 2, 3, 5, 8, 9, 11, 13, 14, 16, 18, 20, 21, 22, 29, 30, 31, 32, 38, 40, 44, 46, 47, 55, 57, 63, 65, 74, 75, 76, 77, 90, 111, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 154, 158, 162, 164], "us": [0, 2, 3, 5, 6, 7, 8, 9, 11, 18, 19, 35, 38, 39, 40, 42, 48, 56, 68, 90, 92, 120, 122, 123, 131, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 158, 159, 160, 161, 162, 167], "homebrew": 0, "linuxbrew": [0, 2], "python": [0, 2, 6, 57], "pleas": [0, 2, 3], "see": [0, 2, 5, 20, 24, 27, 68], "discuss": 0, "http": [0, 1, 2, 3, 5, 139, 144, 145, 148, 149], "github": [0, 2], "com": [0, 1, 2, 3, 5], "core": [0, 1, 7, 51, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151], "issu": [0, 3, 6, 11], "76621": 0, "collect": [0, 3, 70], "14": [0, 1, 2, 5, 7, 33, 37, 79, 98, 126, 127, 150], "py2": 0, "py3": 0, "none": [0, 1, 2, 3, 5, 7, 8, 9, 13, 16, 17, 18, 20, 24, 25, 26, 29, 30, 31, 32, 37, 38, 40, 42, 43, 46, 47, 49, 50, 51, 53, 55, 56, 57, 65, 68, 73, 74, 75, 76, 77, 90, 105, 108, 111, 113, 115, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161], "ani": [0, 2, 17, 26, 38, 50, 90, 92], "whl": 0, "9": [0, 1, 2, 3, 8, 9, 33, 39, 79, 97, 120], "kb": 0, "alreadi": [0, 3, 120, 151], "satisfi": 0, "wrapt": 0, "lt": [0, 1, 3], "gt": [0, 1, 3, 5, 37], "10": [0, 1, 2, 3, 5, 7, 18, 20, 33, 37, 39, 68, 79, 99, 100, 118, 120, 124, 128, 130, 150, 159, 160], "usr": 0, "lib": [0, 2], "python3": [0, 2], "site": [0, 2], "13": [0, 1, 2, 5, 7, 18, 90, 97, 120, 128, 150], "successfulli": [0, 2, 3], "notic": 0, "A": [0, 3, 7, 37, 38, 41, 57, 117, 144, 148, 151], "new": [0, 6, 13, 33, 96, 120, 151], "releas": [0, 3], "avail": [0, 3, 5, 158], "23": [0, 1, 2, 5, 29, 31, 33, 40, 79, 92, 126, 127, 128], "To": [0, 2, 3, 5, 160], "updat": [0, 2, 44], "run": [0, 3, 5, 142, 152, 158, 159], "m": [0, 3, 6], "upgrad": 0, "warn": [0, 1, 2, 3, 5], "filterwarn": [0, 1, 2, 3, 5], "ignor": [0, 1, 2, 3, 5, 8, 9, 12, 13, 38, 59, 90, 122, 123, 151], "categori": [0, 2, 3, 35, 38, 90], "deprecationwarn": [0, 2, 3], "messag": [0, 2, 3, 120, 144, 148], "unverifi": [0, 2, 3], "request": [0, 2, 3, 13, 21, 22, 151], "cluster_url": [0, 1, 2, 3, 5], "localhost": [0, 1, 2, 3, 5], "9200": [0, 1, 2, 3, 5], "def": [0, 1, 2, 3, 5], "get_os_cli": [0, 1, 2, 3, 5], "usernam": [0, 1, 2, 3, 5], "admin": [0, 1, 2, 3, 5], "password": [0, 1, 2, 3, 5], "param": [0, 1, 2, 3, 5, 159], "url": [0, 1, 2, 3, 5, 160], "like": [0, 1, 2, 5, 16, 39, 40, 57, 65, 92, 131, 139], "te": [0, 1, 2, 3, 5], "netwo": [0, 1, 2, 3, 5], "1s12ba42br23v": [0, 1, 2, 3, 5], "ff1736fa7db98ff2": [0, 1, 2, 3, 5], "elb": [0, 1, 2, 3, 5], "u": [0, 1, 2, 3, 5, 18, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "west": [0, 1, 2, 3, 5], "amazonaw": [0, 1, 2, 3, 5], "443": [0, 1, 2, 3, 5], "return": [0, 1, 2, 3, 5, 33, 51, 54, 62, 64, 79, 87, 113, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 160, 161], "host": [0, 1, 2, 3, 5], "http_auth": [0, 1, 2, 3, 5], "verify_cert": [0, 1, 2, 3, 5], "fals": [0, 1, 2, 3, 5, 7, 8, 9, 13, 15, 18, 20, 25, 26, 28, 29, 30, 31, 32, 33, 37, 38, 40, 46, 47, 50, 52, 53, 55, 64, 90, 114, 115, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 142, 144, 148, 150, 151, 152, 154, 155, 158, 159, 160, 161], "connect": [0, 1, 2, 3, 5], "http_urllib3": [0, 2], "199": [0, 2, 58, 60, 61, 66, 78, 80, 81, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 109, 110, 116], "userwarn": [0, 2], "ssl": [0, 2], "insecur": [0, 2], "we": [0, 2, 3, 5, 6, 8, 9, 20, 26, 35, 50, 53, 115, 118, 142, 144, 145, 148, 149, 159, 160, 167], "can": [0, 2, 3, 5, 6, 7, 11, 20, 26, 35, 38, 50, 53, 56, 57, 115, 118, 139, 143, 144, 145, 147, 148, 149, 150, 152, 158, 160, 167], "machin": [0, 3, 158, 159], "learn": [0, 3, 159, 160], "register_model": [0, 2, 144, 148, 166], "In": [0, 2, 3, 6, 50, 51, 53, 54, 56, 113, 115, 167], "show": [0, 1, 2, 3, 5, 68, 150], "how": [0, 5, 118, 120, 151, 158], "8": [0, 1, 2, 3, 5, 8, 9, 33, 47, 79, 120, 151], "regist": [0, 141, 148, 149, 164], "need": [0, 2, 3, 39], "have": [0, 3, 5, 11, 160, 167], "group": [0, 18, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 145], "first": [0, 2, 3, 5, 6, 19, 21, 22, 26, 58, 117, 120, 144, 145, 148, 149], "id": [0, 2, 3, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 156, 157], "For": [0, 3, 11, 13, 20, 56, 96, 150, 159], "look": [0, 2, 6], "doc": [0, 2, 139, 144, 145, 148, 149], "project": [0, 2, 11], "common": [0, 2, 3, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "blob": [0, 2], "x": [0, 2, 3, 7, 13, 18, 19, 25, 26, 37, 38, 39, 48, 51, 90, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 150, 151], "model_access_control": 0, "md": [0, 2], "our": [0, 2, 3, 5], "follow": [0, 2, 3, 26, 50, 53, 115, 152], "exampl": [0, 2, 3, 5, 6, 144, 148, 153, 154, 157, 159], "creat": [0, 1, 2, 3, 5, 11, 24, 57, 120, 144, 145, 148, 149, 150, 151, 153], "introduc": [0, 3], "pre": [0, 3, 20, 152, 154], "train": [0, 6, 139, 152, 153, 154, 160, 161, 164], "org": [0, 3, 139, 144, 145, 148, 149], "latest": [0, 144, 145, 148, 149], "plugin": [0, 2, 138, 139, 143, 144, 145, 148, 149], "pretrain": [0, 152, 164], "One": 0, "thing": 0, "rememb": [0, 2], "don": [0, 2, 33, 59, 167], "t": [0, 2, 3, 5, 33, 38, 56, 59, 90, 167], "node": [0, 3, 146, 147], "might": [0, 2, 3], "throw": 0, "except": [0, 1, 50, 53, 115, 155, 159], "case": [0, 2, 56], "main": [0, 1, 19], "build": 0, "gradl": 0, "l46": 0, "ml_common": [0, 2, 3, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "mlcommoncli": [0, 2, 3, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "ml_client": [0, 2, 3], "30": [0, 1, 5, 18, 39, 92, 129], "model_id": [0, 2, 136, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 156, 157, 159, 160, 161], "register_pretrained_model": [0, 145, 149, 166], "model_nam": [0, 145, 149, 154, 156, 157, 161], "huggingfac": [0, 2, 3, 152, 156, 157, 159], "transform": [0, 4, 6, 156, 157, 159, 160, 164, 167], "all": [0, 3, 5, 8, 9, 20, 29, 30, 31, 32, 33, 38, 40, 46, 47, 55, 90, 111, 117, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 144, 146, 147, 148, 150, 154, 158, 160, 164, 167], "minilm": [0, 3, 144, 148, 167], "l12": [0, 167], "v2": [0, 3, 144, 148, 167], "model_vers": [0, 145, 149], "model_format": [0, 2, 144, 145, 148, 149, 154], "torch_script": [0, 2, 144, 145, 148, 149, 154], "model_group_id": [0, 144, 145], "d4hfsygbfp6ijxccqpwi": 0, "deploy_model": [0, 138, 143, 144, 145, 166], "wait_until_deploi": [0, 138, 144, 145], "wa": [0, 2, 3, 5, 96, 146, 147], "7af5sygbzqn0fchifav4": 0, "also": [0, 3, 5, 56], "own": 0, "system": [0, 2], "But": 0, "do": [0, 2, 13, 35, 56, 118, 139, 151, 154], "coupl": 0, "allow_registering_model_via_url": 0, "allow_registering_model_via_local_fil": 0, "By": [0, 16, 26, 34, 38, 56, 65, 83, 150], "default": [0, 7, 8, 9, 16, 17, 18, 19, 21, 22, 25, 26, 29, 30, 31, 32, 33, 38, 40, 42, 46, 47, 48, 55, 56, 65, 79, 90, 92, 118, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161], "both": [0, 2, 12, 59], "valu": [0, 2, 3, 5, 8, 9, 12, 13, 17, 18, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 40, 46, 47, 49, 51, 55, 56, 59, 71, 72, 73, 74, 75, 76, 77, 79, 84, 85, 86, 92, 108, 111, 113, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 151, 152, 158, 159, 161, 162], "true": [0, 1, 2, 3, 5, 7, 8, 9, 13, 15, 16, 18, 20, 25, 26, 28, 29, 30, 31, 32, 33, 37, 38, 40, 46, 47, 49, 50, 53, 55, 64, 65, 68, 90, 115, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 143, 144, 145, 148, 149, 150, 151, 152, 155, 159], "demonstr": [0, 1, 3, 5], "zip": [0, 2, 3, 144, 148, 155, 156, 157, 159, 161], "raw": 0, "algorithm": [0, 139, 162], "src": 0, "test": [0, 1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 51, 55, 57, 58, 59, 60, 61, 63, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151], "resourc": 0, "engin": [0, 120], "text_embed": 0, "l6": [0, 3, 144, 148, 167], "v2_torchscript_sent": 0, "contain": [0, 3, 5, 7, 17, 18, 42, 43, 57, 117, 150, 155, 159], "torchscript": [0, 167], "pt": [0, 2, 3, 156, 157, 159, 160, 161], "extens": [0, 156, 157], "token": [0, 2, 3, 156, 157, 159, 160, 161], "json": [0, 2, 3, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 154, 156, 157, 161], "refer": [0, 2, 3, 6, 12, 57, 59, 139, 144, 145, 148, 149], "previou": [0, 152], "defin": [0, 146, 147], "inform": [0, 5, 12, 24, 59, 136, 137, 141, 142], "field": [0, 5, 7, 10, 11, 19, 23, 25, 26, 27, 35, 38, 48, 56, 57, 69, 90, 96, 118, 151, 154], "model_path": [0, 2, 3, 144, 148, 161], "volum": [0, 3], "workplac": [0, 3], "upload_cont": [0, 3], "transformers_al": 0, "model_config_path": [0, 3, 144, 148], "v2_torchscript": 0, "content": [0, 2, 3, 16, 56, 65, 154], "name": [0, 1, 2, 3, 5, 8, 9, 10, 16, 17, 25, 26, 27, 40, 57, 58, 59, 60, 61, 65, 66, 78, 79, 80, 81, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 113, 115, 116, 118, 120, 139, 140, 144, 145, 148, 149, 151, 152, 154, 156, 157, 159, 160, 161, 169], "version": [0, 2, 3, 6, 143, 144, 145, 147, 148, 149, 154, 167], "model_config": [0, 2, 3, 144, 148], "model_typ": [0, 2, 144, 148, 154], "bert": [0, 3, 144, 148], "embedding_dimens": [0, 2, 144, 148, 154], "384": [0, 144, 148], "framework_typ": [0, 2, 144, 148], "sentence_transform": [0, 2, 3, 144, 148], "model_id_file_system": 0, "isverbos": [0, 2, 3, 144, 148], "total": [0, 1, 2, 3, 5, 24, 96, 120], "number": [0, 1, 2, 3, 11, 19, 20, 33, 42, 43, 44, 45, 48, 79, 86, 106, 107, 118, 120, 151, 154, 158, 159, 160], "chunk": [0, 2, 3, 144, 145, 148, 149], "sha1": [0, 2, 3], "3ead6e8725322ff54ef9137c453132046098d7e6494945283b8fc980c9123675": 0, "meta": [0, 2, 3], "data": [0, 2, 6, 7, 8, 9, 12, 14, 19, 20, 24, 25, 26, 36, 38, 48, 49, 50, 56, 59, 62, 63, 87, 88, 90, 120, 122, 123, 140, 151, 153, 160, 164], "4oh9sygbfp6ijxcclpx2": 0, "39": [0, 1, 2, 3, 5, 33, 79, 92, 126, 127], "statu": [0, 2, 3, 138, 143], "deploi": [0, 2, 142, 143, 144, 145, 148, 149, 164], "last": [0, 2, 5, 48], "7kffsygbzqn0fchi8ku0": 0, "now": [0, 2, 3, 5, 120], "memori": [0, 1, 2, 3, 6, 7, 24, 51, 54, 56, 113, 150, 160], "15": [0, 1, 2, 3, 5, 33, 37, 40, 79, 127], "load_model_output": 0, "print": [0, 1, 2, 3, 5, 24, 25, 26, 37, 51, 113, 144, 148, 154, 158, 160, 161], "task_typ": 0, "function_nam": 0, "state": [0, 3, 5, 120], "fail": [0, 1, 120, 151], "worker_nod": 0, "qknlom65qciu1awa4frqha": 0, "bj0oviwhtjueju2mubvria": 0, "create_tim": 0, "1686603192569": 0, "last_update_tim": 0, "1686603193467": 0, "error": [0, 3, 13, 38, 90, 120], "34": [0, 1, 5, 33, 79, 109, 110], "duplic": [0, 56], "is_async": 0, "when": [0, 3, 5, 8, 9, 38, 50, 53, 90, 115, 142, 151, 152], "j9uroiubqb81fwki_xqu": 0, "output": [0, 2, 6, 12, 53, 59, 150, 152, 155, 164], "detail": [0, 2, 12, 24, 59, 115, 136, 137, 141, 142], "31": [0, 1, 5, 7, 18, 126, 129], "task_info": 0, "get_task_info": [0, 142, 166], "knuaoiubqb81fwkimhoo": 0, "jturoiubqb81fwkil3qa": 0, "load_model": [0, 143, 148, 149, 166], "complet": 0, "56rnfebpsg6p8zzli59zpg": 0, "lncik04uqx": 0, "cw3bc14wna": 0, "1673436764200": 0, "1673436768619": 0, "With": [0, 3, 26], "pull": 0, "about": [0, 2, 3, 5, 24, 38, 90, 136, 137, 141, 142], "metadata": [0, 144, 148], "16": [0, 1, 2, 5, 40, 120, 127, 128], "model_info": 0, "get_model_info": [0, 141, 166], "model_st": 0, "model_content_size_in_byt": 0, "134568911": 0, "model_content_hash_valu": 0, "f8012a4e6b5da1f556221a12160d080157039f077ab85a5f6b467a47247aad49": 0, "all_config": [0, 154], "_name_or_path": 0, "microsoft": 0, "h384": 0, "uncas": 0, "attention_probs_dropout_prob": 0, "gradient_checkpoint": 0, "hidden_act": 0, "gelu": 0, "hidden_dropout_prob": 0, "hidden_s": 0, "initializer_rang": 0, "02": [0, 1, 7, 8, 9, 18, 29, 33, 37, 40, 79, 92, 126, 127], "intermediate_s": 0, "1536": 0, "layer_norm_ep": 0, "1e": [0, 2], "12": [0, 1, 2, 5, 29, 33, 79, 92, 120, 126, 150], "max_position_embed": 0, "512": [0, 3, 160], "num_attention_head": 0, "num_hidden_lay": 0, "pad_token_id": 0, "position_embedding_typ": 0, "absolut": [0, 73, 125, 128], "transformers_vers": 0, "type_vocab_s": 0, "use_cach": 0, "vocab_s": 0, "30522": 0, "created_tim": 0, "1686603034649": 0, "last_updated_tim": 0, "1686603197066": 0, "last_registered_tim": 0, "1686603047287": 0, "last_deployed_tim": 0, "total_chunk": 0, "planning_worker_node_count": 0, "current_worker_node_count": 0, "planning_worker_nod": 0, "deploy_to_all_nod": 0, "list": [0, 1, 2, 5, 7, 8, 9, 11, 16, 18, 37, 38, 40, 65, 92, 118, 120, 121, 122, 123, 131, 140, 146, 147, 151, 153, 157, 159, 160, 167], "17": [0, 1, 2, 5, 7, 18, 126, 127, 128, 129, 150], "input_sent": [0, 2], "sentence1": 0, "sentence2": 0, "embedding_output": 0, "generate_embed": [0, 2, 140, 166], "inference_result": [0, 2, 140], "sentence_embed": 0, "data_typ": [0, 140], "float32": 0, "shape": [0, 2, 12, 41, 59, 140, 162, 169], "070045985": 0, "094030164": 0, "029469099": 0, "006335383": 0, "037177853": 0, "0034696271": 0, "06973787": 0, "041374803": 0, "05277958": 0, "019993568": 0, "049499072": 0, "0443014": 0, "05095634": 0, "09186084": 0, "039252527": 0, "028518854": 0, "018059185": 0, "097130835": 0, "03480089": 0, "044088792": 0, "025124501": 0, "06829837": 0, "021070546": 0, "073358126": 0, "016342998": 0, "016885245": 0, "0073821708": 0, "06980089": 0, "019172797": 0, "12756695": 0, "0028336751": 0, "076620854": 0, "010953987": 0, "04055977": 0, "047134332": 0, "029655162": 0, "025424464": 0, "023706172": 0, "015665784": 0, "00028456873": 0, "022526933": 0, "073676914": 0, "055472963": 0, "01868282": 0, "039403405": 0, "024852037": 0, "04160002": 0, "0012200676": 0, "012104933": 0, "051197134": 0, "074466705": 0, "055452745": 0, "0074861553": 0, "019089255": 0, "030097326": 0, "026060734": 0, "052988756": 0, "067124605": 0, "025931405": 0, "026440043": 0, "006570677": 0, "055886537": 0, "053474635": 0, "007984726": 0, "08091788": 0, "03664718": 0, "03190376": 0, "073973835": 0, "00654548": 0, "03476009": 0, "009686864": 0, "016051935": 0, "047839254": 0, "0035186426": 0, "659327e": 0, "05": [0, 1, 2, 7, 18, 126, 129, 133, 150, 159, 160], "03731518": 0, "005097011": 0, "0046331016": 0, "04831959": 0, "037194345": 0, "018304912": 0, "06406546": 0, "007127483": 0, "0036731786": 0, "037867643": 0, "0525798": 0, "022754213": 0, "009397554": 0, "0788709": 0, "04558914": 0, "026581936": 0, "07401967": 0, "0022031788": 0, "027502475": 0, "04612981": 0, "02867453": 0, "02812278": 0, "06055298": 0, "046777442": 0, "19889696": 0, "026731564": 0, "007961404": 0, "064086854": 0, "03999534": 0, "065743305": 0, "01038975": 0, "031175181": 0, "0015405513": 0, "04053732": 0, "0026587155": 0, "0201725": 0, "083728634": 0, "005884634": 0, "032710858": 0, "0015733105": 0, "09610316": 0, "002357033": 0, "05984074": 0, "16500355": 0, "036792327": 0, "12291777": 0, "001806536": 0, "043636028": 0, "04189108": 0, "009408711": 0, "08278277": 0, "12746945": 0, "016939184": 0, "012635965": 0, "146165": 0, "051131286": 0, "0033628952": 0, "022748712": 0, "022569735": 0, "037459757": 0, "018744115": 0, "006217754": 0, "084697165": 0, "006795305": 0, "054143608": 0, "057388783": 0, "047126126": 0, "016142208": 0, "04754377": 0, "062171612": 0, "012241133": 0, "08141003": 0, "01191984": 0, "016868386": 0, "013309095": 0, "0659549": 0, "02784064": 0, "013731603": 0, "05787209": 0, "026792012": 0, "018663717": 0, "050591003": 0, "02040348": 0, "047714904": 0, "016063442": 0, "10401469": 0, "13376768": 0, "030586442": 0, "0010340372": 0, "070359856": 0, "013292282": 0, "015457728": 0, "048926532": 0, "011410942": 0, "052058127": 0, "18224765": 0, "0035982048": 0, "02246424": 0, "0030590945": 0, "019338036": 0, "00026652194": 0, "022335682": 0, "07469184": 0, "02382239": 0, "01046695": 0, "03009087": 0, "006465016": 0, "051522683": 0, "019980922": 0, "03548732": 0, "010370418": 0, "08818134": 0, "028292583": 0, "074272536": 0, "08402995": 0, "035817318": 0, "018850267": 0, "031453982": 0, "06855093": 0, "014118732": 0, "07007131": 0, "008944237": 0, "01816519": 0, "07784689": 0, "07069612": 0, "012862535": 0, "015138116": 0, "03347607": 0, "0068311035": 0, "002638591": 0, "036386125": 0, "03143706": 0, "08959042": 0, "053561244": 0, "08690694": 0, "014790011": 0, "055373162": 0, "11275848": 0, "038676344": 0, "01777759": 0, "0624037": 0, "08309957": 0, "058959704": 0, "02146699": 0, "0052596424": 0, "03967568": 0, "07005087": 0, "0535649": 0, "1060871e": 0, "32": [0, 1, 3, 5, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 159, 160], "0013608177": 0, "106175095": 0, "05951191": 0, "0037961602": 0, "013185205": 0, "046274826": 0, "10418064": 0, "0012341454": 0, "0131508345": 0, "018092377": 0, "0054246127": 0, "014041023": 0, "036791388": 0, "016286977": 0, "09607988": 0, "015155129": 0, "023281448": 0, "0831054": 0, "00065585395": 0, "0002872294": 0, "049073815": 0, "050753243": 0, "0048564766": 0, "08584035": 0, "049346138": 0, "010288568": 0, "08767223": 0, "0668006": 0, "02730152": 0, "06031797": 0, "08574493": 0, "0017309934": 0, "004164226": 0, "13996643": 0, "0064810724": 0, "06346753": 0, "106137946": 0, "06602096": 0, "007606502": 0, "034102228": 0, "015871577": 0, "034030348": 0, "06620869": 0, "061993707": 0, "016627932": 0, "001730041": 0, "025229787": 0, "0031807858": 0, "04901121": 0, "00089508446": 0, "039892998": 0, "0016668648": 0, "012777798": 0, "015382705": 0, "016362779": 0, "02404705": 0, "021434382": 0, "09117077": 0, "05373932": 0, "018560624": 0, "023284905": 0, "0031982018": 0, "0031510415": 0, "10734427": 0, "06998923": 0, "0027732637": 0, "0530556": 0, "023547022": 0, "025985928": 0, "035036553": 0, "058912452": 0, "029204743": 0, "008312955": 0, "056485176": 0, "014061077": 0, "04225055": 0, "08007323": 0, "0091617135": 0, "018469298": 0, "04556874": 0, "015968537": 0, "014121485": 0, "0036195326": 0, "027108386": 0, "03586916": 0, "01750429": 0, "10870282": 0, "0083625065": 0, "014823508": 0, "04874035": 0, "010967432": 0, "018752282": 0, "046599686": 0, "05806444": 0, "029174872": 0, "6263226e": 0, "33": [0, 1, 5, 7, 90, 126, 127, 150], "03030781": 0, "06679235": 0, "0005264349": 0, "045648444": 0, "10910713": 0, "016406672": 0, "006509885": 0, "16902378": 0, "011055921": 0, "036133043": 0, "050960954": 0, "028546343": 0, "07644701": 0, "08252433": 0, "041281033": 0, "0342127": 0, "001389836": 0, "0062635387": 0, "04514362": 0, "01706786": 0, "07922916": 0, "022634191": 0, "06849333": 0, "007873758": 0, "030855168": 0, "036613345": 0, "01543812": 0, "041089304": 0, "05730519": 0, "06317529": 0, "08143371": 0, "07131982": 0, "037264705": 0, "058889233": 0, "049804617": 0, "034103516": 0, "06648858": 0, "014449709": 0, "022788258": 0, "03571679": 0, "03570635": 0, "046074998": 0, "0053664967": 0, "024858603": 0, "025428161": 0, "010590862": 0, "040552795": 0, "06513859": 0, "0003934997": 0, "056372937": 0, "05148246": 0, "011264148": 0, "06645999": 0, "026652971": 0, "07176414": 0, "035537906": 0, "03287273": 0, "0017281885": 0, "079337545": 0, "049712148": 0, "06649142": 0, "06070372": 0, "012733799": 0, "0060011027": 0, "07083514": 0, "098972656": 0, "023528868": 0, "015548298": 0, "03414622": 0, "024773195": 0, "060273148": 0, "028832981": 0, "09044978": 0, "029630601": 0, "044647824": 0, "020695554": 0, "0451399": 0, "105178855": 0, "03574795": 0, "022011578": 0, "02242477": 0, "06875169": 0, "041503854": 0, "046235904": 0, "025888842": 0, "058203552": 0, "0317196": 0, "064302124": 0, "030310726": 0, "027002888": 0, "0028196487": 0, "044340227": 0, "032432694": 0, "11670581": 0, "014379569": 0, "06432164": 0, "011770892": 0, "032793347": 0, "04387399": 0, "038692925": 0, "013582388": 0, "026226582": 0, "0076006465": 0, "027217122": 0, "034419663": 0, "08012475": 0, "05472637": 0, "0074604633": 0, "047486894": 0, "025225092": 0, "037482392": 0, "0020973443": 0, "0042126533": 0, "057536595": 0, "08447187": 0, "043337554": 0, "014264286": 0, "023134142": 0, "029479904": 0, "03363044": 0, "05907903": 0, "06964192": 0, "035337694": 0, "022371998": 0, "021929951": 0, "062269177": 0, "030993886": 0, "0076106074": 0, "07694969": 0, "017912427": 0, "044359725": 0, "056732178": 0, "015525767": 0, "032636724": 0, "009579165": 0, "018426858": 0, "054791622": 0, "008909622": 0, "0063452916": 0, "0313364": 0, "005820822": 0, "008221157": 0, "058385953": 0, "047120888": 0, "0052236924": 0, "06515579": 0, "0010107595": 0, "020413563": 0, "041749377": 0, "044107597": 0, "008662938": 0, "011051114": 0, "08871864": 0, "04507809": 0, "036184292": 0, "07195325": 0, "009203214": 0, "023508972": 0, "028275426": 0, "028231027": 0, "003911504": 0, "070118375": 0, "058573272": 0, "20727791": 0, "048356153": 0, "0018830848": 0, "066115424": 0, "022906033": 0, "061623204": 0, "021237886": 0, "018174624": 0, "0050362684": 0, "023906242": 0, "002387967": 0, "035721593": 0, "10048729": 0, "007958879": 0, "044000257": 0, "0103866365": 0, "09361922": 0, "011654698": 0, "06738684": 0, "1736049": 0, "03254977": 0, "13699506": 0, "0092994645": 0, "04818335": 0, "050219133": 0, "005542939": 0, "10294832": 0, "10766475": 0, "015173319": 0, "013554773": 0, "13501169": 0, "045765": 0, "021902261": 0, "033359535": 0, "028230267": 0, "04085567": 0, "0077474224": 0, "036401946": 0, "092795655": 0, "00096511975": 0, "059694305": 0, "035620503": 0, "037294034": 0, "0015283289": 0, "034953": 0, "04880616": 0, "0059092464": 0, "060103483": 0, "008989362": 0, "022295682": 0, "022184573": 0, "04979118": 0, "049196165": 0, "03790123": 0, "053590335": 0, "0077016405": 0, "003188551": 0, "056628674": 0, "027927972": 0, "060124118": 0, "025649551": 0, "09657911": 0, "1299167": 0, "032081775": 0, "0060925665": 0, "06273658": 0, "025575282": 0, "0069705267": 0, "050369203": 0, "025092889": 0, "019692965": 0, "17965682": 0, "006651051": 0, "024963867": 0, "018071478": 0, "016473701": 0, "00877558": 0, "04949933": 0, "07836956": 0, "03252581": 0, "007377615": 0, "03200573": 0, "011032086": 0, "028064458": 0, "01763287": 0, "026994107": 0, "00808559": 0, "070627235": 0, "034461614": 0, "05010755": 0, "09331023": 0, "049584378": 0, "021610672": 0, "027137306": 0, "071931034": 0, "013025755": 0, "07407564": 0, "020584432": 0, "01143555": 0, "10216391": 0, "06688468": 0, "019413434": 0, "0076031247": 0, "03699172": 0, "03037342": 0, "0014173934": 0, "033982094": 0, "028674062": 0, "080678664": 0, "037503026": 0, "08438446": 0, "00107288": 0, "057899155": 0, "113598086": 0, "018308517": 0, "011551393": 0, "07234887": 0, "09252413": 0, "049695067": 0, "014780652": 0, "0075675673": 0, "044519123": 0, "061334103": 0, "0589534": 0, "414513e": 0, "009771945": 0, "12160786": 0, "03935934": 0, "010013683": 0, "008984462": 0, "048829008": 0, "092219844": 0, "0024215193": 0, "008333239": 0, "03851628": 0, "012913554": 0, "032042034": 0, "04166485": 0, "00095339265": 0, "10857277": 0, "024132853": 0, "021791779": 0, "10197005": 0, "009454616": 0, "02655147": 0, "05246785": 0, "06066869": 0, "01103198": 0, "08555522": 0, "04832902": 0, "015530094": 0, "081544966": 0, "07317735": 0, "024714837": 0, "054873053": 0, "07664425": 0, "00995868": 0, "0126262475": 0, "12942667": 0, "020951333": 0, "071839534": 0, "112829536": 0, "05635948": 0, "00964097": 0, "0416308": 0, "037358228": 0, "029693559": 0, "06289643": 0, "05327226": 0, "012749386": 0, "009228852": 0, "019423483": 0, "004775946": 0, "036169004": 0, "012142309": 0, "019225916": 0, "9336504e": 0, "026529595": 0, "012205288": 0, "017824031": 0, "015235648": 0, "018118307": 0, "08875225": 0, "03372443": 0, "020540647": 0, "0050654826": 0, "001371073": 0, "0008696483": 0, "11509085": 0, "067525595": 0, "0014781682": 0, "05162725": 0, "024478963": 0, "02746541": 0, "04733127": 0, "071528465": 0, "033279188": 0, "007459125": 0, "058763813": 0, "04050985": 0, "023988923": 0, "0877261": 0, "0031558173": 0, "020018995": 0, "041812886": 0, "0050884373": 0, "01390084": 0, "02811135": 0, "021810783": 0, "013438191": 0, "007385128": 0, "100511186": 0, "0144268125": 0, "0046929154": 0, "039197326": 0, "002359752": 0, "015907316": 0, "035865612": 0, "071099125": 0, "01309764": 0, "376516e": 0, "022041496": 0, "06963562": 0, "022240836": 0, "03717517": 0, "09121255": 0, "009112608": 0, "014528304": 0, "15407158": 0, "005560728": 0, "024977768": 0, "052556068": 0, "014630092": 0, "08889645": 0, "09537802": 0, "03995325": 0, "04229064": 0, "024341475": 0, "009678618": 0, "048159223": 0, "036069203": 0, "059143994": 0, "00944305": 0, "062726334": 0, "0018664591": 0, "004131935": 0, "03928479": 0, "014626856": 0, "025103925": 0, "05313026": 0, "054437604": 0, "07312243": 0, "059003882": 0, "038209524": 0, "085269175": 0, "06061704": 0, "042276274": 0, "061298754": 0, "016126659": 0, "03648384": 0, "0263596": 0, "020908905": 0, "048757087": 0, "0046108705": 0, "035508107": 0, "028468246": 0, "009864904": 0, "034235284": 0, "07204": 0, "0005532754": 0, "05454473": 0, "04248278": 0, "014105863": 0, "081947": 0, "040557176": 0, "06266554": 0, "040847275": 0, "028606374": 0, "025837993": 0, "07722129": 0, "039314467": 0, "049470015": 0, "05854979": 0, "03244549": 0, "02478489": 0, "after": [0, 2, 3, 57, 151, 152], "want": [0, 2, 142, 167], "unload_model": [0, 147, 166], "method": [0, 1, 2, 5, 20, 24, 35, 52, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 164], "take": [0, 2, 3, 38, 90, 156, 157, 160], "two": [0, 2, 7], "input": [0, 1, 2, 3, 6, 68, 153, 160, 164], "which": [0, 2, 3, 5, 6, 8, 9, 16, 29, 30, 31, 32, 33, 38, 40, 46, 47, 55, 56, 65, 90, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 146, 147, 167], "node_id": [0, 146, 147], "where": [0, 3, 6, 7, 29, 30, 31, 32, 40, 46, 47, 55, 125, 126, 127, 128, 129, 130, 132, 133, 134, 154, 156, 157], "18": [0, 1, 2, 5, 7, 33, 60, 61, 66, 79, 116, 127, 128, 150], "undeploy_model_respons": 0, "undeploy_model": [0, 146, 147, 166], "stat": [0, 164], "undeploi": [0, 147, 164], "lnxy8amltpecpvbsitoywg": 0, "not_found": 0, "u6y1_kirrjuubcu89tdiwg": 0, "index": [0, 7, 8, 9, 10, 13, 16, 19, 21, 22, 24, 25, 26, 27, 36, 37, 41, 42, 48, 49, 50, 51, 53, 54, 57, 65, 88, 96, 113, 115, 120, 150, 151, 164], "19": [0, 1, 2, 5, 18, 30, 33, 79, 98, 128, 129, 133], "delete_model_respons": 0, "delete_model": [0, 136, 166], "_index": [0, 120], "_id": [0, 1, 5, 7, 23, 37, 56, 69, 120, 151], "_version": 0, "11": [0, 1, 2, 3, 5, 7, 29, 33, 37, 38, 79, 120, 126, 127, 128, 150], "result": [0, 1, 2, 3, 5, 24, 41, 59, 140, 154], "_shard": [0, 120], "success": [0, 120], "_seq_no": 0, "24": [0, 1, 2, 5, 18, 33, 79, 129], "_primary_term": 0, "2": [1, 5, 7, 8, 9, 11, 13, 17, 18, 19, 24, 25, 26, 28, 30, 33, 34, 39, 40, 48, 51, 57, 58, 60, 61, 66, 78, 79, 80, 81, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 113, 116, 120, 125, 127, 128, 130, 131, 132, 133, 139, 143, 147, 148, 149, 150, 151], "load_ext": [1, 5], "autoreload": [1, 5], "3": [1, 5, 7, 13, 17, 18, 19, 20, 25, 26, 31, 33, 39, 40, 47, 51, 55, 57, 58, 60, 61, 66, 68, 78, 79, 80, 81, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 113, 116, 120, 124, 125, 128, 130, 131, 132, 133, 134, 150, 151, 159], "stop": [1, 5], "opensearch": [1, 4, 5, 7, 10, 11, 14, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 44, 49, 50, 51, 54, 56, 57, 63, 69, 87, 88, 90, 96, 106, 113, 117, 118, 120, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 164, 167], "from": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 55, 57, 58, 59, 60, 61, 63, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 146, 147, 150, 151, 152, 154, 155, 156, 157], "yell": [1, 5], "everi": [1, 2, 3, 5, 56, 140, 150, 152, 167], "time": [1, 2, 3, 5, 6, 45, 107, 152], "made": [1, 3, 5], "4": [1, 5, 7, 8, 9, 13, 17, 18, 25, 26, 33, 37, 38, 40, 51, 57, 58, 60, 61, 66, 78, 79, 80, 81, 86, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 113, 116, 120, 126, 127, 128, 129, 131, 133, 134, 140, 150, 151, 159], "support": [1, 3, 5, 6, 8, 9, 12, 13, 29, 30, 32, 47, 59, 74, 75, 76, 77, 96, 111, 120, 139, 145, 149, 164], "pd": [1, 3, 5, 10, 117, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 151, 153], "numpi": [1, 2, 3, 5, 6, 51, 54, 113], "np": [1, 2, 3, 5, 8, 9, 20, 43, 101], "matplotlib": [1, 3, 5, 68], "pyplot": [1, 5, 68], "plt": [1, 5, 20, 68], "oml": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 51, 54, 55, 57, 58, 59, 60, 61, 63, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151], "standard": [1, 2, 5, 28, 46, 108, 132], "set": [1, 5, 12, 26, 38, 50, 53, 59, 90, 115, 155, 158, 159], "consist": [1, 3, 5, 59], "conftest": [1, 5], "5": [1, 5, 7, 13, 19, 25, 26, 33, 37, 39, 40, 48, 51, 58, 60, 61, 66, 67, 68, 78, 79, 80, 81, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 112, 113, 116, 120, 125, 130, 131, 150, 159, 160], "cluster": [1, 2, 5, 136, 137, 138, 141, 142, 143, 144, 145, 148, 149, 150, 156, 157, 161], "6": [1, 2, 3, 5, 13, 18, 29, 33, 35, 38, 55, 79, 97, 120, 122, 123, 126, 131, 133], "an": [1, 2, 5, 7, 11, 16, 26, 37, 38, 39, 45, 48, 50, 53, 56, 57, 65, 71, 72, 84, 85, 90, 107, 115, 120, 150, 151, 164], "flight": [1, 7, 8, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 36, 37, 40, 41, 43, 46, 47, 48, 51, 55, 57, 59, 63, 68, 69, 73, 74, 75, 76, 77, 86, 88, 92, 96, 108, 111, 113, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150], "7": [1, 2, 3, 5, 33, 38, 79, 120, 130, 133, 139, 143, 147, 148, 149], "oml_flight": [1, 18, 21, 22, 40, 92, 131], "type": [1, 5, 12, 13, 14, 17, 19, 24, 35, 36, 38, 48, 51, 59, 63, 87, 88, 113, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "same": [1, 2, 3, 17, 29, 30, 31, 32, 40, 46, 47, 55, 125, 126, 127, 128, 129, 130, 132, 133, 134], "pd_flight": 1, "opensearch_to_panda": [1, 51, 54, 113, 151, 163], "frame": [1, 5, 51, 150, 151], "avgticketpric": [1, 7, 8, 9, 10, 12, 14, 18, 21, 22, 25, 26, 28, 29, 30, 31, 32, 36, 40, 43, 46, 47, 51, 55, 59, 63, 73, 74, 75, 76, 77, 88, 108, 111, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150], "cancel": [1, 7, 10, 18, 25, 26, 28, 29, 30, 31, 32, 43, 46, 47, 55, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150], "carrier": [1, 10, 17, 23, 51, 57, 69, 86, 96, 113, 118], "dest": [1, 10, 19, 43, 48], "destairportid": [1, 10, 37], "destcitynam": [1, 10], "destcountri": [1, 8, 9, 10, 18, 28, 29, 30, 31, 32, 46, 47, 55, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "destloc": [1, 10], "destregion": [1, 10], "destweath": [1, 10], "distancekilomet": [1, 8, 9, 10], "distancemil": [1, 10], "flightdelai": [1, 10], "flightdelaymin": [1, 10, 12, 21, 22, 37, 40, 41, 131], "flightdelaytyp": [1, 10], "flightnum": [1, 10], "flighttimehour": [1, 10], "flighttimemin": [1, 10, 68], "origin": [1, 10, 14, 19, 36, 48, 63, 88], "originairportid": [1, 10, 37], "origincitynam": [1, 10], "origincountri": [1, 10], "originloc": [1, 10], "originregion": [1, 10], "originweath": [1, 10, 68], "dayofweek": [1, 7, 10, 14, 18, 21, 22, 28, 29, 30, 31, 32, 36, 40, 43, 46, 47, 55, 63, 88, 92, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150], "timestamp": [1, 7, 8, 9, 10, 14, 18, 21, 22, 28, 29, 30, 31, 32, 33, 36, 37, 40, 43, 46, 47, 55, 63, 88, 92, 125, 126, 127, 128, 129, 131, 134, 150, 151], "object": [1, 5, 10, 12, 13, 14, 17, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 36, 37, 43, 45, 46, 47, 48, 51, 55, 57, 58, 59, 62, 63, 79, 88, 96, 107, 113, 136, 137, 138, 140, 141, 142, 143, 146, 147, 151, 152, 164], "float64": [1, 5, 8, 9, 14, 28, 29, 30, 31, 32, 40, 43, 46, 47, 55, 58, 59, 60, 61, 63, 66, 78, 80, 81, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 116, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 151], "bool": [1, 5, 8, 9, 15, 18, 24, 26, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 43, 46, 47, 52, 55, 71, 72, 73, 74, 75, 76, 77, 84, 85, 90, 108, 111, 114, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 138, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 158, 159, 160, 161], "int64": [1, 5, 11, 14, 35, 37, 43, 58, 60, 61, 63, 66, 78, 80, 81, 91, 101, 109, 110, 116, 118, 151], "datetime64": [1, 14, 37, 43, 63, 79, 92, 151], "n": [1, 5, 11, 14, 19, 37, 42, 43, 48, 63, 67, 79, 92, 105, 112, 151], "length": [1, 2, 3, 5, 17, 57, 96, 115, 120, 159, 160], "27": [1, 2, 5, 7, 18, 41, 92, 120, 126, 128, 129, 150], "includ": [1, 3, 5, 20, 24, 37, 43, 120, 151, 154], "841": [1, 7, 25, 26, 51, 150], "265642": [1, 7, 25, 26, 51, 150], "16492": 1, "326654": 1, "1030": 1, "770416": 1, "882": [1, 7, 25, 26, 51, 150], "982662": [1, 7, 25, 26, 51, 150], "8823": 1, "400140": 1, "464": [1, 5], "389481": 1, "190": [1, 7, 25, 26, 51, 150], "636904": [1, 7, 25, 26, 51, 150], "000000": [1, 5, 12, 18, 28, 29, 31, 32, 40, 59], "181": [1, 7, 25, 26, 51, 150], "694216": [1, 7, 25, 26, 51, 150], "555": 1, "737767": 1, "222": 1, "749059": 1, "730": [1, 7, 25, 26, 51, 150], "041778": [1, 7, 25, 26, 51, 150], "13358": 1, "244200": 1, "785": 1, "779071": 1, "13054": [1, 17, 48, 57, 96], "1080": 1, "446279": 1, "8058": 1, "581753": 1, "402": 1, "929088": 1, "13055": [1, 17, 48, 57, 96], "646": [1, 127], "612941": 1, "7088": 1, "598322": 1, "644": 1, "418029": 1, "13056": [1, 17, 48, 57, 96], "997": 1, "751876": 1, "10920": 1, "652972": 1, "937": 1, "540811": 1, "13057": [1, 17, 48, 57, 96], "1102": 1, "814465": 1, "18748": 1, "859647": 1, "1697": 1, "404971": 1, "13058": [1, 17, 48, 57, 96], "858": 1, "144337": 1, "16809": 1, "141923": 1, "1610": 1, "761827": 1, "13059": [1, 12, 17, 41, 57, 59, 96, 150], "row": [1, 5, 7, 13, 16, 18, 19, 25, 26, 33, 37, 38, 39, 42, 44, 45, 48, 51, 65, 79, 90, 106, 107, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 150, 151], "20": [1, 2, 5, 30, 33, 37, 40, 79, 92, 126, 128], "note": [1, 3, 12, 23, 35, 59, 69, 117, 118, 150], "doe": [1, 3, 16, 65, 96, 120, 151], "mirror": [1, 7], "21": [1, 2, 5, 30, 31, 33, 40, 79, 92, 120, 126, 127, 128], "13049": 1, "13050": 1, "13051": 1, "13052": 1, "13053": 1, "22": [1, 2, 5, 33, 39, 79, 92, 126, 127, 128], "nbval_ignore_output": [1, 5], "0x1131744c0": 1, "os_index_field": [1, 5, 7, 23, 37, 56, 57, 69], "25": [1, 2, 5, 18, 20, 37, 39, 68, 120], "arrai": [1, 20, 40, 51, 92, 113, 131], "2656419677076": [1, 26, 51], "kibana": [1, 17, 51, 57, 96, 113, 118], "airlin": [1, 17, 51, 57, 96, 113, 118], "sunni": [1, 68, 157], "2018": [1, 7, 8, 9, 18, 29, 30, 31, 32, 37, 40, 92, 126, 127, 128, 129, 150], "01": [1, 3, 5, 7, 8, 9, 18, 30, 31, 32, 37, 40, 92, 120, 126, 127, 128, 129, 150], "00": [1, 5, 7, 8, 9, 18, 32, 33, 37, 79, 92, 126, 129, 150], "9826615595518": [1, 26, 51], "logstash": [1, 17, 51, 57, 96, 113, 118], "airwai": [1, 17, 51, 57, 96, 113, 118], "clear": 1, "6369038508356": [1, 26, 51], "rain": 1, "7518761454494": 1, "04": [1, 18, 33, 40, 47, 79, 92, 126, 127, 128, 129, 133], "09": [1, 18, 33, 37, 40, 79, 92, 126, 128, 129], "8144645388556": 1, "jetbeat": [1, 17, 57, 96, 118], "hail": 1, "08": [1, 5, 18, 33, 37, 79, 126, 129], "28": [1, 5, 7, 120, 127, 150], "1443369038839": 1, "54": [1, 31, 58, 90, 92, 93, 127, 133], "26": [1, 2, 5, 60, 61, 66, 116, 120], "try": [1, 35], "attributeerror": 1, "e": [1, 3, 7, 8, 9, 11, 118, 120, 139, 151, 156, 157], "would": [1, 2, 3, 51, 54, 113], "scan": [1, 51, 54, 113], "scroll": [1, 51, 54, 113], "entir": [1, 5, 50, 51, 53, 54, 113, 115, 150], "": [1, 2, 3, 5, 6, 7, 8, 9, 12, 20, 23, 38, 40, 43, 51, 54, 59, 69, 73, 74, 75, 76, 77, 86, 90, 92, 108, 111, 113, 119, 131, 138, 143, 144, 145, 148, 149, 152], "explicitli": [1, 50, 53, 115], "suffici": 1, "call": [1, 2, 3, 8, 9, 20, 51, 54, 96, 113, 120, 151], "ed": 1, "ed_df": 1, "29": [1, 5, 126, 150], "42": [1, 5, 127, 128, 133], "41": [1, 37, 120], "57": [1, 40, 92, 128], "35": [1, 5, 18, 102, 103, 128], "frankfurt": [1, 19], "am": [1, 19, 37], "airport": [1, 19, 48], "cape": [1, 19], "town": [1, 19], "intern": [1, 2, 19, 37, 48, 120], "venic": [1, 19], "marco": [1, 3, 19], "polo": [1, 19], "napl": 1, "licenciado": [1, 48], "benito": [1, 48], "juarez": [1, 48], "pisa": [1, 48], "winnipeg": [1, 48], "jame": [1, 48], "armstrong": [1, 48], "richardson": [1, 48], "internat": 1, "itami": [1, 48], "adelaid": [1, 48], "current": [1, 3, 7, 8, 9, 12, 18, 29, 30, 32, 39, 47, 56, 59, 74, 75, 76, 77, 111, 120, 152, 155, 159, 161], "36": [1, 5, 7, 18, 33, 58, 60, 61, 66, 78, 79, 80, 81, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 109, 110, 116, 150], "typeerror": 1, "unhash": 1, "37": [1, 18, 58, 93, 150], "900": 1, "960": 1, "869736": 1, "975": 1, "812632": 1, "38": [1, 5, 33, 58, 79, 129, 133], "311": 1, "946": 1, "358410": 1, "51": [1, 7, 40, 109, 110, 129], "651": 1, "383864": 1, "03": [1, 2, 8, 9, 18, 47, 126, 133], "950": [1, 5], "907": 1, "836523": 1, "12820": 1, "909": 1, "973606": 1, "12906": 1, "983": 1, "429244": 1, "06": [1, 5, 7, 8, 9, 18, 31, 33, 47, 79, 126, 127, 129, 133], "58": [1, 33, 79, 127], "12918": 1, "1136": 1, "678150": 1, "12919": 1, "1105": 1, "211803": 1, "13013": 1, "1055": 1, "350213": 1, "68": [1, 120], "qualifi": 1, "aggreg": [1, 8, 11, 35, 56, 118, 122, 162], "std": [1, 5, 8, 9, 12, 28, 59, 162, 169], "261629e": [1, 8, 9], "07": [1, 5, 6, 8, 9, 120, 127], "204365e": [1, 8, 9, 47], "000000e": [1, 8, 9], "000205e": [1, 8, 9], "578438e": 1, "663969e": 1, "onli": [1, 3, 5, 8, 9, 11, 12, 35, 43, 59, 96, 118, 139], "numer": [1, 5, 12, 28, 29, 30, 31, 32, 33, 35, 46, 47, 55, 59, 74, 75, 76, 77, 111, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "43": [1, 40, 150], "578614e": [1, 8, 9], "664071e": [1, 8, 9], "44": [1, 18, 33, 79, 128, 129], "45": [1, 5, 30, 38, 44, 120, 126, 129, 133], "46": [1, 5, 33, 35, 40, 79, 124, 128, 130], "628": [1, 12, 30, 59, 75], "253689": [1, 12, 30, 59], "7092": 1, "142455": 1, "511": 1, "127842": 1, "835975": [1, 30], "266": [1, 8, 9, 12, 46, 59, 90, 108], "396861": 1, "4578": [1, 8, 9], "438497": 1, "334": 1, "753952": 1, "939439": 1, "100": [1, 5, 8, 9, 12, 18, 32, 59, 77, 98, 122, 123, 129], "020528": 1, "409": 1, "893816": 1, "2459": 1, "705673": 1, "252": 1, "333192": 1, "50": [1, 5, 29, 40, 92, 128], "640": [1, 31, 40, 76], "556668": 1, "7610": 1, "330866": 1, "503": 1, "045170": 1, "75": [1, 5, 40, 92, 120], "842": [1, 40], "185470": 1, "9736": 1, "637600": 1, "720": 1, "416036": 1, "1199": [1, 12, 18, 29, 59, 74, 122, 123, 126], "729053": 1, "19881": 1, "482315": 1, "1902": 1, "902032": 1, "mai": [1, 120, 151, 162], "vari": [1, 12, 59], "due": 1, "47": [1, 12, 18, 120, 127, 129], "128494": [1, 30], "407061": [1, 46], "334664": [1, 46], "766770": 1, "939513": [1, 46], "020531": [1, 12, 18, 32, 59, 122, 123, 129], "410": 1, "008918": 1, "251": [1, 18, 132], "938710": 1, "387285": [1, 40], "148975": 1, "213490": [1, 40], "505705": 1, "729004": [1, 12, 18, 29, 59, 122, 123, 126], "901978": 1, "48": [1, 92, 127, 128], "class": [1, 7, 24, 50, 51, 56, 57, 113, 121, 150, 151, 152, 157, 164], "entri": [1, 24], "non": [1, 11, 24, 29, 30, 32, 38, 47, 74, 75, 76, 77, 84, 85, 90, 111], "null": [1, 21, 22, 24], "usag": [1, 20, 24, 68], "mb": 1, "49": 1, "64": [1, 120], "000": [1, 3, 5, 128], "byte": [1, 36, 88], "storag": [1, 24], "714": 1, "numeric_onli": [1, 8, 9, 18, 28, 29, 30, 31, 32, 33, 40, 46, 47, 55, 73, 74, 75, 76, 77, 108, 111, 119, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134], "12353": 1, "780369": 1, "360": [1, 12, 37], "715034": 1, "482422": 1, "780273": 1, "52": [1, 37, 102, 103], "53": [1, 33, 37, 58, 60, 61, 66, 78, 79, 80, 81, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 109, 110, 116, 128], "4406": 1, "853013": 1, "251168": 1, "335171": [1, 12], "518797": 1, "55": [1, 5, 39, 40, 58, 127], "142457": 1, "853010": 1, "56": [1, 120, 127, 128], "678000e": [1, 47], "754909e": 1, "280000e": 1, "181500e": 1, "112470e": 1, "674818e": 1, "703500e": [1, 47], "nuniqu": [1, 5, 124, 162, 169], "156": 1, "59": [1, 92, 126], "60": [1, 37, 41, 50, 53, 115], "drop": [1, 18, 162], "se": [1, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "bd": 1, "IT": 1, "ch": 1, "zh": 1, "ru": [1, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "amu": 1, "dc": 1, "61": [1, 120], "62": [1, 120], "hist": [1, 5, 162, 169], "figsiz": [1, 5, 20, 68], "63": [1, 18], "oml_flights2": 1, "65": [1, 3, 5], "os_info": [1, 5, 162, 169], "os_index_pattern": [1, 5, 7, 37, 57], "is_source_field": [1, 5, 37], "map": [1, 2, 5, 14, 35, 37, 44, 57, 63, 120, 151], "capabl": [1, 5, 6, 37], "os_field_nam": [1, 5, 37], "is_sourc": [1, 5, 37], "os_dtyp": [1, 5, 37, 162, 169], "os_date_format": [1, 5, 37], "pd_dtype": [1, 5, 37], "is_search": [1, 5, 37], "is_aggregat": [1, 5, 37], "is_script": [1, 5, 37], "aggregatable_os_field_nam": [1, 5, 37], "date": [1, 6, 36, 37, 88], "strict_date_hour_minute_second": [1, 37], "keyword": [1, 5, 8, 9, 11, 35, 36, 37, 38, 88, 90, 118, 151], "integ": [1, 3, 37, 66, 97], "oper": [1, 8, 9, 13, 18, 37, 56, 58, 60, 61, 66, 78, 80, 81, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 116, 144, 145, 148, 149, 164], "task": [1, 2, 3, 5, 37, 164], "boolean_filt": [1, 5, 37], "must": [1, 5, 7, 8, 9, 37, 39, 44, 56], "term": [1, 5, 37, 118, 159], "rang": [1, 5, 37, 56], "sort_field": [1, 5, 37], "_doc": [1, 5, 25, 26, 37], "size": [1, 3, 5, 7, 37, 120, 159, 160, 162, 169], "sort_param": [1, 5, 37], "desc": [1, 5, 37], "_sourc": [1, 5, 37, 120], "bodi": [1, 5, 37, 38, 90], "post_process": [1, 5, 37], "sort_index": [1, 5, 25, 26, 37], "custom": [2, 3, 26, 120, 152, 159, 160, 161], "just": 2, "differ": [2, 3, 5, 56, 117, 152], "option": [2, 3, 7, 38, 42, 90, 120, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164], "wai": 2, "here": [2, 3, 5], "The": [2, 3, 7, 10, 12, 14, 16, 19, 21, 22, 25, 26, 28, 36, 46, 48, 55, 56, 57, 59, 63, 65, 88, 139, 145, 149, 150, 152, 154, 155, 156, 157], "compar": [2, 23, 69], "o": [2, 57, 120, 151], "sy": 2, "path": [2, 3, 144, 148, 152, 154, 155, 156, 157, 159, 161], "append": [2, 3, 120, 151], "abspath": 2, "join": 2, "futurewarn": 2, "tracerwarn": 2, "torch": [2, 3, 157, 160, 167], "tensor": 2, "ml_model": [2, 3, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "sentencetransformermodel": [2, 3, 152, 168], "mlcommon": [2, 3, 4, 6, 164], "later": [2, 3, 5], "home": [2, 156, 157], "opt": 2, "tqdm": [2, 3], "auto": 2, "tqdmwarn": 2, "iprogress": 2, "found": [2, 3, 17, 154], "jupyt": 2, "ipywidget": 2, "readthedoc": 2, "io": [2, 164], "en": 2, "stabl": 2, "user_instal": 2, "html": [2, 50], "autonotebook": 2, "notebook_tqdm": 2, "get": [2, 3, 158, 162, 164], "save_as_pt": [2, 168], "file": [2, 3, 5, 49, 120, 144, 148, 152, 154, 155, 156, 157, 159, 160, 161, 164, 167], "your": [2, 3, 5, 6, 19, 48], "filesystem": 2, "document": [2, 3, 6, 11, 42, 56, 159, 160], "msmarco": [2, 152, 154, 156, 157, 160, 167], "distilbert": [2, 152, 154, 156, 157, 160, 167], "base": [2, 3, 11, 19, 43, 48, 57, 152, 154, 156, 157, 158, 160, 167], "ta": [2, 152, 154, 156, 157, 160, 167], "b": [2, 3, 120, 151, 152, 154, 156, 157, 160, 167], "exaampl": 2, "co": [2, 3, 167], "given": [2, 3, 17, 38, 40, 90, 92, 117, 131, 140, 146, 147, 154], "string": [2, 5, 8, 9, 38, 90, 115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161], "more": [2, 3, 5, 8, 9, 12, 38, 59, 90, 144, 148, 154, 158, 160, 161], "direct": 2, "dummi": 2, "check": [2, 5, 38, 90, 154, 158], "pre_trained_model": 2, "folder_path": [2, 3, 152], "overwrit": [2, 3, 151, 152, 155, 159], "small": [2, 3], "add": [2, 11, 12, 41, 59, 93, 96, 156, 157, 169], "multipl": [2, 11, 33, 38, 79, 80, 81, 99, 100, 144, 148], "modeling_distilbert": 2, "223": 2, "constant": 2, "safe": 2, "function": [2, 6, 8, 9, 19, 38, 48, 90, 122, 123, 152, 164], "out": [2, 3, 24, 118], "variabl": [2, 3], "other": [2, 70, 90, 158], "caus": [2, 120, 151], "incorrect": [2, 24, 39], "mask": [2, 71, 72, 84, 85], "finfo": 2, "score": [2, 3], "dtype": [2, 5, 10, 11, 17, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 40, 43, 46, 47, 51, 55, 57, 58, 59, 60, 61, 66, 78, 79, 80, 81, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 113, 115, 116, 118, 120, 125, 126, 127, 128, 129, 130, 132, 133, 134, 151, 162, 169], "min": [2, 5, 8, 9, 12, 18, 59, 122, 123, 162, 169], "help": [2, 3], "descript": [2, 12, 59, 152, 160, 161, 164], "port": 2, "It": [2, 3, 5, 19, 48], "paragraph": 2, "768": [2, 154], "dimension": [2, 7, 44, 106], "dens": 2, "vector": [2, 5], "space": [2, 3], "optim": [2, 3], "semant": [2, 3, 160], "search": [2, 3, 16, 37, 38, 65, 90, 118, 120, 156, 157, 160, 161], "so": [2, 3, 56, 57, 144, 145, 148, 149, 151, 162], "correspond": [2, 3, 167], "folder": [2, 3, 152, 154, 155, 159], "model_serving_framework": 2, "text_embedding_model_exampl": 2, "ml_commons_register_api": 2, "relat": [2, 3, 120, 142], "integr": 2, "demo_ml_commons_integr": 2, "model_config_path_torch": 2, "8c178f990a03dd66921f48da40ed81d7d4d3fc170e1bb56e1f365209e9f25027": 2, "entccykb1rb1pqnoffjp": 2, "upload": [2, 4, 6, 144, 145, 156, 157, 161, 164, 167], "save_as_onnx": [2, 168], "onxx": 2, "model_path_onnx": 2, "opset": 2, "load": [2, 56, 150, 153, 164], "pipelin": 2, "framework": [2, 144, 148], "pytorch": [2, 3], "cu117": 2, "input_id": 2, "batch": [2, 3, 159, 160], "sequenc": [2, 3, 16, 38, 65], "attention_mask": 2, "output_0": 2, "ensur": 2, "correct": [2, 39], "order": [2, 5, 19, 38, 48, 90, 117, 120, 160], "head_mask": 2, "present": 2, "pooling_mod": [2, 154], "cl": 2, "normalize_result": [2, 154], "model_config_path_onnx": 2, "311aea6defb713d46f692c18207aa7e993d19122d2331a8086445a74ac2ab031": 2, "fhtdcykb1rb1pqnos_li": 2, "second": 2, "embedding_output_torch": 2, "data_torch": 2, "embedding_output_onnx": 2, "data_onnx": 2, "signific": [2, 150], "between": [2, 3, 6, 40, 92, 117, 131], "assert_allclos": 2, "rtol": 2, "atol": 2, "techniqu": 3, "obtain": 3, "deep": 3, "built": 3, "veri": [3, 23, 56, 69], "power": [3, 6, 91, 101], "been": 3, "shown": 3, "improv": 3, "art": 3, "sever": [3, 8, 9], "disciplin": 3, "howev": [3, 11, 20, 160], "thei": [3, 11, 59, 117, 167], "lot": [3, 24, 56], "label": [3, 7, 8, 9, 10, 13, 16, 65, 164], "Such": 3, "often": 3, "hard": 3, "larg": [3, 6, 150], "languag": 3, "circumv": 3, "focu": 3, "retriev": 3, "corpu": 3, "perform": [3, 18], "long": [3, 5, 151], "dataset": [3, 6, 12, 39, 59], "pair": [3, 25, 26], "relev": 3, "absenc": 3, "sqg": [3, 155], "ha": [3, 19, 23, 33, 35, 48, 56, 69, 79, 139, 140, 145, 149], "human": 3, "thu": 3, "fact": [3, 159], "find": [3, 159, 160, 161], "beat": 3, "sinc": [3, 5, 143, 147, 148, 149, 159], "specif": [3, 38, 118], "end": 3, "guid": [3, 41], "comput": [3, 40, 92, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 158, 159, 164], "intens": 3, "recommend": [3, 6, 152, 155, 159], "gpu": [3, 158, 159, 160], "ec2": 3, "p3": 3, "8xlarg": 3, "16xlarg": 3, "script": [3, 157, 160, 167], "proper": 3, "environ": [3, 158, 159], "termin": 3, "haven": 3, "uncom": 3, "line": 3, "execut": [3, 164], "urllib": 3, "urlretriev": 3, "artifact": 3, "amazon": 3, "gpt": 3, "gpt2_xl_sqg": 3, "0": [3, 6, 7, 8, 9, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 30, 31, 32, 33, 35, 38, 40, 46, 51, 55, 57, 58, 60, 61, 65, 66, 68, 78, 79, 80, 81, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 113, 116, 120, 122, 123, 125, 127, 129, 131, 132, 133, 134, 143, 147, 148, 149, 150, 151, 159, 160, 167], "httpmessag": 3, "0x10bdbe940": 3, "acceler": [3, 159], "detoxifi": 3, "boto3": 3, "load_dataset": 3, "gc": 3, "cuda": 3, "empty_cach": 3, "myselect": 3, "max": [3, 5, 8, 9, 12, 18, 59, 122, 123, 159, 160, 162, 169], "is_select": 3, "passage_text": 3, "argmax": 3, "There": 3, "three": 3, "local": [3, 5, 139], "jsonl": 3, "index_nam": [3, 50, 53], "purpos": [3, 159], "ms_marco": 3, "v1": [3, 167], "df": [3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 55, 58, 59, 60, 61, 63, 66, 68, 69, 78, 80, 81, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 116, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "from_dict": 3, "valid": [3, 120], "appli": [3, 8, 9, 16, 20, 38, 39, 65], "lambda": 3, "axi": [3, 8, 9, 13, 16, 21, 22, 42, 65], "displai": 3, "full": [3, 24, 38, 90], "column": [3, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 59, 63, 65, 88, 90, 96, 106, 107, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151, 162], "set_opt": 3, "max_column": 3, "expand_frame_repr": 3, "max_colwidth": 3, "real": 3, "pretend": 3, "each": [3, 11, 14, 26, 28, 29, 30, 31, 32, 35, 36, 40, 46, 47, 55, 63, 71, 72, 84, 85, 88, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "sample_passag": 3, "ss": 3, "three_step_queri": 3, "generate_synthetic_queri": 3, "num_machin": [3, 158, 159], "tokenize_data": 3, "tokenizer_max_length": 3, "300": 3, "total_queri": 3, "numseq": 3, "num_gpu": [3, 159, 160], "toxic_cutoff": 3, "tokens_to_word_ratio": 3, "action": 3, "being": [3, 5, 26, 154, 156, 157], "abov": 3, "cell": [3, 11], "elabor": 3, "them": [3, 160], "form": 3, "consum": 3, "amount": 3, "xl": 3, "gpt2": 3, "special": 3, "startoftext": 3, "qry": 3, "begin": [3, 5], "respect": [3, 5], "process": [3, 158], "pass": [3, 5, 8, 9, 38, 90], "subsequ": 3, "5b": 3, "paramet": [3, 5, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 160, 161], "ask": [3, 5], "question": [3, 5], "publicli": 3, "onc": 3, "start": 3, "ideal": [3, 20], "lead": 3, "around": 3, "less": 3, "divisor": 3, "float": [3, 36, 40, 42, 60, 61, 73, 74, 75, 76, 77, 88, 92, 105, 108, 111, 116, 119, 131, 159, 160], "switch": [3, 6], "v": 3, "word": [3, 159, 160], "truncat": [3, 160], "dure": 3, "phase": 3, "most": [3, 160], "split": [3, 24], "one": [3, 5, 8, 9], "200": [3, 58, 90, 93], "ratio": 3, "667": 3, "wikipedia": 3, "domain": 3, "could": [3, 96], "know": 3, "singl": [3, 8, 9, 11, 20, 38, 92], "instanc": [3, 96], "least": 3, "progress": [3, 150, 159, 160], "bar": 3, "per": 3, "empir": 3, "better": 3, "diminish": 3, "infer": [3, 49, 120], "increas": [3, 160], "remov": [3, 13, 26, 29, 30, 31, 32, 40, 46, 47, 55, 120, 125, 126, 127, 128, 129, 130, 132, 133, 134, 151], "inappropri": 3, "reject": 3, "toxic": 3, "greater": 3, "than": [3, 7, 35, 56, 118], "final": 3, "along": 3, "directori": [3, 152, 155, 159], "restart": 3, "kernel": 3, "rerun": 3, "give": [3, 5, 24, 152, 164], "initi": [3, 152], "custom_model": 3, "model_fil": [3, 152], "read_queri": [3, 168], "read_path": [3, 155, 159], "clean_synthetic_queri": 3, "initit": 3, "export": [3, 164], "plese": 3, "visit": 3, "synthest": 3, "clean": [3, 155, 159], "cach": [3, 44], "befor": [3, 120, 142, 151], "free": 3, "output_model_nam": [3, 159, 160], "test2_model": 3, "zip_file_nam": [3, 156, 157, 159, 161], "num_epoch": [3, 159, 160], "verbos": [3, 24, 120, 154, 158, 159, 160, 161], "some": [3, 5], "point": [3, 39], "maxim": 3, "dot": [3, 167], "product": [3, 5, 33], "while": [3, 160], "minim": 3, "irrelev": 3, "known": 3, "contrast": 3, "implement": [3, 29, 30, 32, 35, 47, 50, 51, 53, 54, 74, 75, 76, 77, 111, 113, 115, 118], "neg": 3, "symmetr": 3, "loss": 3, "mention": 3, "below": [3, 12, 59], "util": [3, 6, 52, 164], "send": 3, "randomli": [3, 42], "select": [3, 19, 43, 48, 164], "q": [3, 40, 92, 131], "p": 3, "within": [3, 38, 39, 117, 155], "similarli": 3, "express": [3, 16, 21, 22, 41, 65], "c": [3, 151], "sum_": 3, "log": [3, 5, 154, 158, 160, 161], "left": [3, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104], "frac": [3, 42, 105], "exp": 3, "q_i": 3, "cdot": 3, "p_i": 3, "j": 3, "p_j": 3, "right": [3, 19, 48, 58, 60, 61, 66, 78, 80, 81, 91, 109, 110, 116], "beyond": [3, 160], "shorter": [3, 160], "adjust": 3, "therefor": 3, "allow": [3, 5, 6], "bigger": 3, "percentil": [3, 12, 59, 159, 160], "argument": [3, 7, 8, 9, 12, 29, 30, 32, 35, 38, 41, 47, 59, 74, 75, 76, 77, 90, 111, 115, 118], "devic": 3, "larger": 3, "unfortun": 3, "short": 3, "feel": 3, "experi": 3, "adamw": 3, "epoch": [3, 159, 160], "rate": [3, 159, 160], "2e": [3, 159, 160], "schedul": 3, "linear": 3, "warmup": 3, "describ": [3, 5, 162, 169], "commons_model_config": [3, 154], "make_model_config_json": [3, 168], "pars": [3, 154], "son": 3, "arguument": 3, "chang": [3, 57, 96], "format": [3, 144, 148, 154, 156, 157, 159, 160, 167], "upload_model": [3, 148, 166], "prepar": [3, 156, 157, 161], "61fd5a1425960681da49d084dca0e52fd0fabcc0f2e1c4d57c4e20e193bde483": 3, "lgfg9iubto3f8n5r8nm6": 3, "onlin": [4, 6], "retail": [4, 6], "analysi": [4, 6], "sentenc": [4, 6, 140, 156, 157, 159, 160, 164, 167], "save": [4, 6, 152, 154, 156, 157, 159, 160], "datafram": [5, 56, 58, 59, 60, 61, 63, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151, 153, 155, 164], "panda": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 83, 84, 85, 86, 88, 92, 96, 107, 108, 111, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151, 155, 164], "let": 5, "read": [5, 6, 38, 90, 120, 150, 151, 154, 155, 159], "csv": [5, 49, 120], "popul": [5, 41, 151], "csv_to_opensearch": [5, 165], "gz": 5, "os_client": [5, 7, 57, 120, 151], "os_dest_index": [5, 120, 151], "es_if_exist": 5, "replac": [5, 120, 151], "os_dropna": [5, 120, 151], "es_refresh": 5, "compress": [5, 49, 120], "gzip": 5, "index_col": [5, 120], "next": 5, "instanti": 5, "choos": [5, 152], "subset": [5, 7, 16, 43, 65], "didn": 5, "access": [5, 6, 56], "countri": 5, "customerid": 5, "invoiced": 5, "invoiceno": 5, "quantiti": [5, 96], "stockcod": 5, "unitpric": 5, "offer": 5, "info": [5, 16, 65, 145, 149, 162, 164], "underli": [5, 7, 62, 87, 96, 164], "doubl": 5, "understand": 5, "attribut": [5, 164], "much": 5, "unit": 5, "kingdom": 5, "17850": 5, "85123a": 5, "71053": 5, "count": [5, 8, 9, 12, 20, 24, 33, 37, 59, 118, 162], "14998": 5, "17419": 5, "21773": 5, "14999": 5, "22149": 5, "specifi": [5, 8, 9, 13, 16, 38, 42, 65, 90, 118], "2010": 5, "filter": [5, 19, 21, 22, 33, 38, 39, 40, 42, 48, 90, 131, 162, 169], "under": [5, 39, 152], "hood": 5, "queri": [5, 11, 37, 38, 39, 44, 56, 90, 106, 152, 155, 159, 162], "construct": [5, 7], "directli": [5, 20, 139, 156, 157], "germani": 5, "1109": 5, "12662": 5, "22809": 5, "95": [5, 159, 160], "1110": 5, "84347": 5, "1111": 5, "84945": 5, "85": 5, "1112": 5, "22242": 5, "1113": 5, "22244": 5, "isin": [5, 169], "84406b": 5, "84029g": 5, "84029e": 5, "combin": [5, 8, 9, 90, 122, 123], "further": [5, 144, 145, 148, 149], "90": 5, "translat": [5, 159], "answer": 5, "mani": [5, 118, 158], "what": [5, 6, 12, 25, 26, 59], "sum": [5, 8, 9, 162, 169], "111960": 5, "me": 5, "mean": [5, 8, 9, 12, 18, 59, 162, 169], "qunat": 5, "unit_pric": 5, "agg": [5, 9, 18, 162], "61548": 5, "490000": [5, 60, 61, 116], "103233": 5, "2880": 5, "990000": [5, 60, 61, 116], "9360": 5, "10729": 5, "15000": 5, "15590": 5, "776680": 5, "464000": 5, "1764": 5, "189592": 5, "930116": 5, "106214": 5, "12347": 5, "14222": 5, "689466": 5, "250000": 5, "15668": 5, "019608": 5, "510000": 5, "17218": 5, "806604": 5, "472000": 5, "212788": 5, "18239": 5, "histogram": [5, 20, 68], "bin": [5, 20, 68], "13748": 5, "22086": 5, "83": [5, 120], "15291": 5, "21733": 5, "96": [5, 12, 90], "14688": 5, "21212": 5, "102": [5, 18, 122, 123, 129], "85071b": 5, "176": [5, 58], "16029": 5, "85099c": 5, "14784": 5, "15061": 5, "22423": 5, "14785": 5, "22075": 5, "14788": 5, "17038": 5, "14974": 5, "14739": 5, "21704": 5, "72": 5, "14980": 5, "22178": 5, "258": 5, "concaten": [5, 161], "kingdom85123a": 5, "kingdom71053": 5, "kingdom84406b": 5, "kingdom84029g": 5, "kingdom84029": 5, "14995": 5, "kingdom72349b": 5, "14996": 5, "kingdom72741": 5, "14997": 5, "kingdom22762": 5, "kingdom21773": 5, "kingdom22149": 5, "jul": 6, "2023": 6, "1": [6, 7, 8, 9, 13, 16, 17, 19, 20, 21, 22, 24, 25, 26, 29, 33, 35, 39, 40, 42, 46, 47, 51, 57, 58, 60, 61, 65, 66, 78, 79, 80, 81, 83, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 113, 116, 120, 125, 127, 128, 131, 132, 133, 144, 148, 150, 151, 154, 158, 159, 167], "link": [6, 41, 96], "sourc": [6, 7, 9, 11, 13, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 33, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 56, 57, 59, 65, 67, 70, 71, 73, 74, 75, 76, 77, 79, 84, 86, 89, 90, 92, 96, 105, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150], "repositori": 6, "idea": 6, "client": [6, 7, 57, 120, 151], "explor": 6, "analyz": [6, 12, 38, 59, 90], "familiar": 6, "compat": [6, 43], "possibl": [6, 7, 29, 30, 31, 32, 35, 40, 46, 47, 55, 125, 126, 127, 128, 129, 130, 132, 133, 134], "packag": 6, "exist": [6, 11, 13, 56, 84, 85, 120, 151, 154], "structur": [6, 7, 150], "make": [6, 20], "easi": 6, "scikit": 6, "equival": [6, 13], "gener": [6, 12, 35, 42, 59, 118, 152, 154, 155, 159, 164], "resid": 6, "store": [6, 7, 144, 145, 148, 149, 152, 155, 159], "via": [6, 14, 20, 38, 63], "re": [6, 16, 65, 117], "seri": [6, 8, 9, 11, 12, 14, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 35, 36, 38, 45, 46, 47, 55, 120, 151, 164], "demo": 6, "notebook": [6, 50], "model": [6, 140, 142, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164], "licens": 6, "contribut": 6, "code": [6, 24, 120], "conduct": 6, "str": [7, 8, 9, 16, 18, 25, 26, 37, 38, 41, 49, 56, 57, 65, 89, 90, 96, 115, 120, 121, 122, 123, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "_query_compil": [7, 57], "querycompil": [7, 56, 57, 121], "mutabl": 7, "potenti": 7, "heterogen": 7, "tabular": [7, 53], "ax": [7, 20, 68], "referenc": [7, 23, 69, 150, 151], "indic": [7, 71, 72, 84, 85, 120, 142, 150], "rather": [7, 35, 118], "pattern": [7, 57], "wildcard": [7, 57], "g": [7, 8, 9, 11, 151, 156, 157], "pandas_api_doc": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 62, 63, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 83, 84, 85, 86, 92, 96, 107, 108, 111, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "import": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 51, 55, 57, 58, 59, 60, 61, 63, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151], "opensearch_test_cli": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 51, 55, 57, 58, 59, 60, 61, 63, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151], "head": [7, 25, 26, 39, 51, 58, 60, 61, 66, 78, 80, 81, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 113, 116, 150, 162, 169], "todo": [7, 11, 12, 29, 30, 32, 35, 41, 47, 56, 59, 74, 75, 76, 77, 111, 118, 120], "index_field": 7, "01t00": 7, "772": 7, "100846": 7, "159": 7, "990962": 7, "800": 7, "217104": 7, "803": 7, "015200": 7, "func": [8, 9, 122, 123], "int": [8, 9, 16, 19, 21, 22, 24, 33, 34, 38, 40, 42, 45, 48, 65, 67, 73, 74, 75, 76, 77, 79, 83, 86, 90, 92, 105, 107, 108, 111, 112, 118, 119, 131, 151, 154, 158, 159, 160], "arg": [8, 9], "kwarg": [8, 9, 38, 90], "over": [8, 9, 21, 22, 25, 26, 38], "dict": [8, 9, 120, 139, 151, 154], "either": [8, 9, 16, 65, 155, 159], "klass": [8, 9], "accept": [8, 9, 18, 122, 123], "mad": [8, 9, 162, 169], "median": [8, 9, 73, 125, 162, 169], "mode": [8, 9, 49, 152, 154, 162, 169], "quantil": [8, 9, 162, 169], "rank": [8, 9], "sem": [8, 9], "skew": [8, 9], "var": [8, 9, 108, 162, 169], "datatyp": [8, 9, 29, 30, 31, 32, 33, 40, 46, 47, 55, 120, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134], "nan": [8, 9, 12, 28, 29, 30, 31, 32, 33, 40, 46, 47, 50, 53, 55, 59, 115, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134], "nat": [8, 9, 28, 29, 30, 31, 32, 33, 40, 46, 47, 55, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134], "posit": [8, 9, 19, 48], "scalar": [8, 9], "astyp": [8, 9], "8204364": [8, 9, 111], "92616288": [8, 9], "assert": [10, 23, 69], "isinst": [10, 23, 69], "na": [11, 18, 21, 22, 71, 72, 84, 85], "against": [11, 38], "ineffici": [11, 56], "altern": [11, 13], "approach": 11, "value_count": [11, 169], "aggregat": [11, 35, 118], "text": [11, 35, 38, 90, 118, 151], "tag": 11, "addit": [11, 12, 38, 41, 58, 59, 90, 93], "featur": 11, "summari": [11, 12, 24, 37, 59], "ecommerc": [11, 13, 24, 33, 35, 38, 39, 44, 58, 60, 61, 66, 78, 79, 80, 81, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 116], "customer_first_nam": [11, 13, 24, 35, 39, 58], "geoip": [11, 24, 33, 39], "city_nam": [11, 24, 33, 39], "4675": [11, 13, 24, 44, 106], "4094": [11, 24], "statist": [12, 59], "summar": [12, 59], "central": [12, 59], "tendenc": [12, 59], "dispers": [12, 59], "distribut": [12, 59, 159], "exclud": [12, 21, 22, 43, 59], "well": [12, 59], "mix": [12, 59], "depend": [12, 38, 59, 90], "386661": [12, 59], "743006": 12, "level": 13, "inplac": 13, "rais": [13, 38, 90, 120, 151, 155, 159], "whether": [13, 71, 72, 84, 85, 138, 143, 144, 145, 148, 149, 154], "multiindex": 13, "suppress": 13, "caller": 13, "email": 13, "eddi": [13, 38, 58], "underwood": 13, "famili": 13, "zzz": 13, "mari": [13, 39, 58], "bailei": 13, "gwen": [13, 58], "butler": 13, "dian": [13, 58], "chandler": 13, "weber": 13, "4670": 13, "lambert": 13, "4671": [13, 38], "jim": [13, 38], "gilbert": 13, "4672": [13, 38], "yahya": [13, 38], "rivera": 13, "4673": 13, "hampton": 13, "4674": [13, 24, 38], "jackson": [13, 38], "hopkin": 13, "goodwin": 13, "oliv": [13, 38], "rio": 13, "_os_dtype_to_pd_dtyp": [14, 63], "__doc__": [14, 63], "determin": [15, 64, 118], "item": [16, 17, 42, 65, 140], "regex": [16, 65], "accord": [16, 65], "routin": [16, 65], "its": [16, 65, 156, 157, 161], "keep": [16, 65], "regular": [16, 26, 65], "enforc": [16, 65], "mutual": [16, 65], "exclus": [16, 65], "kei": [17, 18, 138, 143, 159, 162], "ex": 17, "dropna": [18, 20, 33, 120, 121, 151], "dataframegroupbi": [18, 162], "togeth": 18, "ae": [18, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "110": [18, 120, 122, 123, 129], "799911": [18, 122, 123, 129], "1126": [18, 122, 123, 126], "148682": [18, 122, 123, 126], "132": 18, "443756": 18, "817": [18, 131], "931030": 18, "125": [18, 122, 123, 129], "589394": [18, 122, 123, 129], "642822": [18, 122, 123, 126], "389603": 18, "1172": 18, "382568": 18, "AT": [18, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "1181": [18, 122, 123, 126], "835815": [18, 122, 123, 126], "tr": [18, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "307": 18, "915649": 18, "145966": [18, 122, 123, 129], "153069": 18, "1192": 18, "429932": 18, "za": [18, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "002663": [18, 122, 123, 129], "1196": [18, 122, 123, 126], "186157": [18, 122, 123, 126], "121": [18, 120], "280296": 18, "1175": 18, "709961": 18, "643": [18, 127], "956793": 18, "717949": 18, "388": 18, "828809": 18, "571429": 18, "673": 18, "551677": 18, "746154": 18, "682": 18, "197241": 18, "733333": 18, "647": 18, "158290": 18, "819936": 18, "598": 18, "063146": 18, "752014": 18, "579": [18, 131], "799066": 18, "767068": 18, "636": 18, "998605": 18, "738589": 18, "677": 18, "794078": 18, "928571": 18, "sort": [19, 25, 26, 48, 56, 117, 118, 160], "quickli": [19, 48], "sydnei": 19, "kingsford": 19, "smith": 19, "grid": [20, 68], "xlabels": [20, 68], "xrot": [20, 68], "ylabels": [20, 68], "yrot": [20, 68], "sharex": 20, "sharei": 20, "layout": 20, "kwd": [20, 68], "deriv": [20, 68, 120], "plot": [20, 68, 159, 160, 164], "_core": [20, 68], "hist_fram": [20, 68], "d": [20, 151], "weight": 20, "col": 20, "select_dtyp": [20, 162], "occurr": [21, 22, 39, 118], "maximum": [21, 29, 74], "oml_df": [21, 22, 33, 40, 51, 54, 131, 150, 151], "1843": 21, "109": 21, "1988": 21, "minimum": [22, 32, 77], "5454": 22, "limit": [23, 69, 160], "buf": [24, 50, 53, 115], "stringio": 24, "max_col": [24, 50, 53], "memory_usag": 24, "show_count": 24, "concis": 24, "copi": 24, "difficult": 24, "appropri": 24, "sparsedatafram": 24, "iter": [25, 26, 120, 164], "tupl": [25, 26, 44, 106, 120, 151], "itertupl": [25, 162], "namedtupl": [25, 26], "element": [26, 45, 58, 60, 61, 66, 71, 72, 78, 80, 81, 84, 85, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 116], "possibli": 26, "iterrow": [26, 162], "69421554118": [26, 51], "041778346198": [26, 51], "yield": 26, "deviat": [28, 46, 73, 108, 125, 128, 132], "213": [28, 73], "35497": 28, "00000": 28, "473011": 28, "484": 28, "remaind": [29, 30, 32, 35, 47, 74, 75, 76, 77, 111, 118], "preserv": [29, 30, 31, 32, 40, 46, 47, 55, 125, 126, 127, 128, 129, 130, 132, 133, 134], "73": [29, 80, 81], "254": [30, 120], "83598": 30, "564438232": 30, "363": 31, "624776611": 31, "362667": 31, "387": 31, "021": 32, "os_siz": [33, 79, 118], "calcul": [33, 40, 79, 92, 131], "consid": 33, "oml_ecommerc": [33, 79], "total_quant": [33, 58, 60, 61, 66, 78, 80, 81, 91, 96, 101, 106, 109, 110, 116], "customer_birth_d": [33, 35], "day_of_week": [33, 79], "taxful_total_pric": [33, 58, 60, 61, 66, 78, 80, 81, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 109, 110, 116], "york": 33, "thursdai": [33, 79], "98": [33, 58, 60, 61, 66, 78, 80, 81, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 109, 110, 116], "tax_amount": 33, "order_d": [33, 79], "2016": [33, 79], "definit": [34, 83], "cardin": [35, 162], "ignore_abov": 35, "256": [35, 132], "currenc": [35, 38], "debug": 37, "compil": 37, "tail": [37, 162, 169], "12608": 37, "cyeg": 37, "120": 37, "12720": 37, "40": [37, 60, 61, 66, 116, 127, 128], "bhm": 37, "255": [37, 124, 130, 132], "12725": 37, "atl": 37, "12823": 37, "ngo": 37, "12907": 37, "lim": 37, "225": 37, "match_phras": [38, 90], "must_not_match": 38, "multi_match_typ": 38, "match_only_text_field": [38, 90], "fuzzi": [38, 90], "match": [38, 90, 151], "multi_match": 38, "otherwis": [38, 45, 64, 107], "instead": [38, 90, 143, 147, 148, 149], "account": [38, 90, 120], "boolean": [38, 41, 90, 142, 144, 148], "NOT": 38, "prevent": [38, 90], "aren": [38, 90], "properli": [38, 90], "men": [38, 90], "cloth": [38, 90], "eur": 38, "accessori": [38, 90], "shoe": [38, 90], "abd": 38, "4663": 38, "samir": 38, "4667": 38, "sultan": 38, "women": [38, 90], "2310": 38, "dsl": 39, "dictionari": [39, 139, 159], "geo": 39, "distanc": 39, "_": 39, "locat": [39, 152], "geo_dist": 39, "1km": 39, "dubai": 39, "rabbia": 39, "al": 39, "robbi": 39, "nest": 39, "361": 40, "040768": 40, "296587520": 40, "637076736": 40, "658119680": 40, "expr": 41, "pandas_user_guid": 41, "2730": 41, "random_st": [42, 105], "fraction": 42, "cannot": 42, "seed": 42, "random": 42, "datetim": 43, "repres": [44, 45, 106, 107], "len": [44, 106], "407": 46, "93951": 46, "20436e": 47, "1678": 47, "37035": 47, "xi": 48, "xianyang": 48, "zurich": 48, "ukrainka": 48, "air": [48, 118], "ministro": 48, "pistarini": 48, "washington": 48, "dull": 48, "path_or_buf": 49, "sep": [49, 120], "na_rep": [49, 50, 53, 115], "float_format": [49, 50, 53, 115], "header": [49, 50, 53, 115, 120], "index_label": 49, "w": 49, "encod": [49, 120], "quot": [49, 120], "quotechar": [49, 120], "line_termin": 49, "chunksiz": [49, 120, 151], "tupleize_col": 49, "date_format": 49, "doublequot": [49, 120], "escapechar": [49, 120], "decim": [49, 50, 53, 120], "write": 49, "comma": [49, 120], "separ": [49, 120], "col_spac": [50, 53], "formatt": [50, 53], "sparsifi": [50, 53], "justifi": [50, 53], "max_row": [50, 53, 115], "show_dimens": [50, 53], "bold_row": 50, "escap": 50, "border": 50, "table_id": 50, "render_link": 50, "render": [50, 53, 115], "tabl": 50, "scenario": [50, 53, 115], "avoid": [50, 53, 115], "accident": [50, 53, 115], "dump": [50, 53, 115], "overridden": [50, 53, 115], "Not": [51, 54, 113], "represent": [51, 54, 113, 115], "involv": [51, 54, 113], "bewar": [51, 54, 113], "pd_df": [51, 150, 151], "f": [51, 113, 151], "ntype": [51, 113], "show_progress": [52, 114, 150], "convert": [52, 120, 150, 151, 156, 157], "line_width": 53, "consol": 53, "friendli": 53, "to_numpi": [54, 162, 169], "varianc": [55, 119, 134], "70964": [55, 119], "570234": 55, "111987": 55, "761279": 55, "76128": 55, "query_compil": [56, 121], "behaviour": 56, "slice": 56, "docvalu": 56, "discourag": 56, "advis": 56, "anoth": [56, 160], "doc_valu": 56, "enabl": [56, 155, 159], "proxi": 57, "delet": [57, 120, 151, 164], "rebuilt": 57, "inconsist": 57, "occur": 57, "wise": [58, 60, 61, 66, 78, 80, 81, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 116], "binari": [58, 60, 61, 66, 78, 80, 81, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 116, 164], "174": [58, 60, 61, 66, 78, 80, 81, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 109, 110, 116], "80": [58, 60, 61, 66, 78, 80, 81, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 109, 110, 116], "980000": [58, 78, 93, 102, 103, 109, 110], "979996": [58, 78, 93, 102, 103, 109, 110], "175": [58, 93], "81": [58, 93], "980003": [58, 78, 93, 102, 103, 109, 110], "201": 58, "82": 58, "customer_last_nam": 58, "eddieunderwood": 58, "marybailei": 58, "gwenbutl": 58, "dianechandl": 58, "eddieweb": 58, "divis": [60, 61, 66, 94, 95, 97, 104, 116], "truediv": [60, 61, 169], "99": [60, 61, 66, 116, 120], "989998": [60, 61, 116], "87": [60, 61, 66, 116], "489998": [60, 61, 116], "490002": [60, 61, 116], "draw": 68, "noqa": 68, "f401": 68, "alpha": 68, "densiti": 68, "booleanfilt": [70, 71, 72, 84, 85], "detect": [71, 72, 84, 85], "miss": [71, 72, 84, 85, 120, 151], "isna": [72, 169], "modulo": [78, 98], "959999": [80, 81], "107": [80, 81, 120], "399": [80, 81], "959991": [80, 81], "349": [80, 81], "161": [80, 81, 120], "960007": [80, 81], "mul": [81, 99, 100, 169], "notna": [85, 169], "uniqu": [86, 136, 137, 138, 140, 141, 142, 143, 146, 147, 169], "queryfilt": 90, "221": [90, 125], "234": 90, "93": 90, "239": 90, "273": 90, "214": 90, "exponenti": [91, 101], "1367": 91, "520366": 91, "2913": 91, "840351": 91, "39991": 91, "998691": 91, "30617": 91, "998905": 91, "6557": 91, "760944": 91, "289159912": 92, "031627441": 92, "256136963": 92, "844534180": 92, "div": [94, 95, 104, 169], "027042": [94, 95, 104], "018525": [94, 95, 104], "005001": [94, 95, 104], "005715": [94, 95, 104], "012349": [94, 95, 104], "new_nam": 96, "symbol": 96, "floordiv": [97, 169], "500": [97, 98, 128], "mod": [98, 169], "260006": 98, "180004": 98, "040009": 98, "150": 98, "119980": 98, "369": [99, 100], "799995": [99, 100], "539": [99, 100], "1999": [99, 100], "799957": [99, 100], "1749": [99, 100], "809": [99, 100], "800034": [99, 100], "pow": [101, 169], "int_": 101, "subtract": [102, 103, 109, 169], "sub": [102, 103, 110, 169], "198": [102, 103], "173": [102, 103], "79": [102, 103], "197": [109, 110, 120], "172": [109, 110], "78": [109, 110, 120], "oml_seri": 113, "oml_": 113, "pd_": 113, "min_row": 115, "behavior": 117, "slightli": 117, "seen": 117, "bucket": 118, "automat": 118, "descend": 118, "should": [118, 159], "overal": 118, "os_api_doc": 118, "3331": [118, 120], "3274": 118, "3234": 118, "3220": 118, "etl": [120, 150, 151, 163], "filepath_or_buff": 120, "os_if_exist": [120, 151], "os_refresh": [120, 151], "os_type_overrid": [120, 151], "delimit": 120, "usecol": 120, "prefix": 120, "true_valu": 120, "false_valu": 120, "skipinitialspac": 120, "skiprow": 120, "skipfoot": 120, "nrow": 120, "na_valu": 120, "keep_default_na": 120, "na_filt": 120, "skip_blank_lin": 120, "parse_d": 120, "infer_datetime_format": 120, "keep_date_col": 120, "date_pars": 120, "dayfirst": 120, "cache_d": 120, "thousand": 120, "linetermin": 120, "comment": 120, "dialect": 120, "warn_bad_lin": 120, "error_bad_lin": 120, "on_bad_lin": 120, "delim_whitespac": 120, "low_memori": 120, "memory_map": 120, "float_precis": 120, "modifi": [120, 151], "behav": [120, 151], "valueerror": [120, 151], "insert": [120, 151], "bulk": [120, 151], "es_typ": 120, "overrid": [120, 151], "read_csv": 120, "churn": 120, "osclient": 120, "area": 120, "phone": 120, "plan": 120, "voic": 120, "mail": 120, "vmail": 120, "dai": 120, "minut": 120, "charg": 120, "ev": 120, "night": 120, "intl": 120, "servic": 120, "k": 120, "128": 120, "415": 120, "382": 120, "4657": 120, "ye": 120, "265": 120, "244": [120, 132], "91": 120, "oh": 120, "371": 120, "7191": 120, "123": 120, "195": [120, 125], "103": 120, "137": 120, "104": 120, "162": 120, "84": 120, "408": 120, "89": 120, "86": 120, "196": 120, "186": 120, "3328": 120, "192": [120, 125], "279": [120, 132], "3329": 120, "191": 120, "3330": 120, "510": 120, "184": 120, "139": 120, "3332": 120, "74": 120, "77": 120, "241": 120, "3333": 120, "took": 120, "timed_out": 120, "skip": [120, 154], "hit": 120, "eq": 120, "max_scor": 120, "_score": 120, "retain": 120, "hold": 121, "au": [122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "294312": [122, 123, 129], "1197": [122, 123, 126], "632690": [122, 123, 126], "ca": [122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134], "557251": [122, 123, 129], "1198": [122, 123, 126], "852539": [122, 123, 126], "101": [122, 123, 129], "004005": [122, 123, 129], "742310": [122, 123, 126], "877190": [122, 123, 129], "621582": [122, 123, 126], "142": [122, 123, 129], "876465": [122, 123, 129], "855": [122, 123, 126], "935547": [122, 123, 126], "305": [124, 130], "377": [124, 130], "416": [124, 130], "944": [124, 130], "739": [124, 130], "1987": [124, 130], "283": [124, 130], "233": 125, "697174": 125, "189": 125, "250061": 125, "823669": 125, "202": 125, "539764": 125, "203": 125, "344696": 125, "206": 125, "431702": 125, "178": 125, "658447": 125, "863434": 125, "228": 125, "461365": 125, "162842": 125, "605": 127, "132970": 127, "152174": 127, "695652": 127, "891304443": 127, "674": 127, "827252": 127, "147541": 127, "744262": 127, "593442627": 127, "650530": 127, "175066": 127, "872679": 127, "469496094": 127, "669": 127, "558832": 127, "129808": 127, "843750": 127, "199519287": 127, "648": 127, "747109": 127, "134534": 127, "951271": 127, "165254150": 127, "662": 127, "994963": 127, "131258": 127, "832206": 127, "534506104": 127, "660": 127, "612988": 127, "149020": 127, "682353": 127, "447058838": 127, "485": 127, "253247": 127, "100000": 127, "900000": 127, "000000000": 127, "595": 127, "774391": 127, "125315": 127, "753900": 127, "456970215": 127, "053057": 127, "148410": 127, "766784": 127, "141342773": 127, "585": 128, "720490": 128, "678": 128, "447433": 128, "659": 128, "715592": 128, "689": 128, "241348": 128, "663": 128, "516057": 128, "670": 128, "714956": 128, "680": 128, "111084": 128, "441": 128, "681122": 128, "600": 128, "591525": 128, "633": 128, "935425": 128, "572": 131, "290384": 131, "578": 131, "140564": 131, "567": 131, "980560": 131, "582": 131, "618713": 131, "590": 131, "170986": 131, "811890": 131, "574": 131, "131340": 131, "852264": 131, "591": 131, "533699": 131, "877014": 131, "791": 131, "622625": 131, "793": 131, "362946": 131, "378523": 131, "766": 131, "855530": 131, "319": 131, "925979": 131, "325": 131, "704562": 131, "327": 131, "311007": 131, "336": 131, "839572": 131, "332": 131, "323011": 131, "314": 131, "472537": 131, "652659": 131, "298": 131, "483032": 131, "290205": 131, "024850": 131, "362137": 131, "568": 131, "323944": 131, "489746": 131, "523": 131, "890680": 131, "875500": 132, "367171": 132, "020634": 132, "903626": 132, "355811": 132, "949901": 132, "883342": 132, "381035": 132, "026411": 132, "585377": 132, "336902": 132, "961486": 132, "261": 132, "263054": 132, "341587": 132, "921980": 132, "259": 132, "696213": 132, "338140": 132, "964815": 132, "232": 132, "504297": 132, "357510": 132, "991340": 132, "267": 132, "827572": 132, "333333": 132, "191454": 132, "272": 132, "774819": 132, "331242": 132, "939469": 132, "505568": 132, "356766": 132, "948258": 132, "783612e": 133, "124": 133, "058223e": 133, "837": 133, "437872e": 133, "66": 133, "1083": 133, "785365e": 133, "1183": 133, "124173e": 133, "127": 133, "2786": 133, "899533e": 133, "97": 133, "2093": 133, "684563e": 133, "684": 133, "852532e": 133, "183804e": 133, "249": 133, "5472": 133, "819840e": 133, "783": 133, "75789": 134, "979090": 134, "130443": 134, "950549": 134, "59683": 134, "055316": 134, "125979": 134, "783429": 134, "65726": 134, "669676": 134, "144610": 134, "090013": 134, "65088": 134, "483446": 134, "113094": 134, "833562": 134, "68149": 134, "950516": 134, "116496": 134, "688139": 134, "67305": 134, "277617": 134, "114107": 134, "852666": 134, "53740": 134, "570338": 134, "127062": 134, "942132": 134, "61245": 134, "521047": 134, "094868": 134, "100420": 134, "74349": 134, "939410": 134, "109638": 134, "758700": 134, "62920": 134, "072901": 134, "126608": 134, "775609": 134, "self": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "delete_task": [137, 166], "task_id": [137, 138, 142, 143], "wait": [138, 142, 143, 144, 145, 148, 149], "until": [138, 142, 143, 144, 145, 148, 149], "algorithm_nam": 139, "input_json": 139, "predict": 139, "anomali": 139, "metric": 139, "correl": 139, "respons": 139, "_predict": 140, "nlp": [140, 146, 147], "properti": 140, "wait_until_task_don": 142, "done": 142, "wait_until_load": [143, 148, 149], "break": [144, 148], "filepath": [144, 148], "expect": [144, 148, 152, 158, 159, 161], "serv": [144, 148, 152], "onnx": [145, 149, 156, 167], "_undeploi": [146, 147], "upload_pretrained_model": [149, 166], "signfic": 150, "stdout": 150, "10000": 150, "2020": 150, "572395": 150, "309031": 150, "pandas_to_opensearch": [150, 163], "os_verify_mapping_compat": 151, "thread_count": 151, "use_pandas_index_for_os_id": 151, "mainli": 151, "destin": 151, "refresh": 151, "field_nam": 151, "es_data_typ": 151, "verifi": 151, "schema": 151, "thread": 151, "destination_index": 151, "141": 151, "foo": 151, "20190102": 151, "h": 151, "if_exist": 151, "sync": 151, "readabl": 151, "__init__": [152, 168], "download": [152, 156, 157, 160], "hug": [152, 154], "face": [152, 154], "design": 152, "query_df": 153, "version_numb": 154, "embed": [154, 164], "dimens": 154, "pool": 154, "normal": 154, "2_normal": 154, "synthet": [155, 159], "unzip": [155, 159], "synthetic_queri": [155, 159], "empti": [155, 159, 162, 169], "up": [155, 159], "save_json_folder_path": [156, 157], "model_output_path": [156, 157], "open": [156, 157, 161], "sample_model": [156, 157], "save_pre_trained_model_json": [156, 157], "default_folder_path": [156, 157], "constructor": [156, 157, 164], "trace": [156, 157, 167], "todai": 157, "compute_environ": [158, 159], "num_process": 158, "accler": 158, "local_machin": [158, 159], "cpu": 158, "learning_r": [159, 160], "batch_siz": [159, 160], "fine": [159, 167], "tune": [159, 167], "pickl": 159, "probabl": 159, "passag": [159, 160], "q1": 159, "p1": 159, "pa1": 159, "launch": 159, "measur": 159, "multipli": [159, 169], "approxim": [159, 162], "english": 159, "vocabulari": 159, "roughli": 159, "rtype": 159, "train_exampl": 160, "certain": 160, "max_length": 160, "middl": 160, "corpora": 160, "ndim": [162, 169], "sampl": [162, 169], "accur": 162, "hyperloglog": 162, "exact": 162, "idxmax": 162, "idxmin": 162, "os_match": [162, 169], "os_queri": 162, "to_csv": 162, "to_html": 162, "to_str": [162, 169], "to_panda": [162, 169], "page": 164, "overview": 164, "public": 164, "expos": 164, "namespac": 164, "applic": 164, "groupbi": 164, "window": 164, "reindex": 164, "manipul": 164, "serial": 164, "convers": 164, "flat": 164, "unload": 164, "step": 164, "few": 167, "distilroberta": 167, "mpnet": 167, "multi": 167, "qa": 167, "paraphras": 167, "l3": 167, "multilingu": 167, "load_training_data": 168, "set_up_accelerate_config": 168, "train_model": 168, "zip_model": 168, "divid": 169, "radd": 169, "rsub": 169, "rsubtract": 169, "rmul": 169, "rmultipli": 169, "rdiv": 169, "rdivid": 169, "rtruediv": 169, "rfloordiv": 169, "rmod": 169, "rpow": 169, "renam": 169, "isnul": 169, "notnul": 169}, "objects": {"": [[6, 0, 0, "-", "opensearch_py_ml"]], "opensearch_py_ml": [[7, 1, 1, "", "DataFrame"], [56, 1, 1, "", "Index"], [57, 1, 1, "", "Series"]], "opensearch_py_ml.DataFrame": [[8, 2, 1, "", "agg"], [9, 2, 1, "", "aggregate"], [10, 3, 1, "", "columns"], [11, 2, 1, "", "count"], [12, 2, 1, "", "describe"], [13, 2, 1, "", "drop"], [14, 3, 1, "", "dtypes"], [15, 3, 1, "", "empty"], [16, 2, 1, "", "filter"], [17, 2, 1, "", "get"], [18, 2, 1, "", "groupby"], [19, 2, 1, "", "head"], [20, 2, 1, "", "hist"], [21, 2, 1, "", "idxmax"], [22, 2, 1, "", "idxmin"], [23, 3, 1, "", "index"], [24, 2, 1, "", "info"], [25, 2, 1, "", "iterrows"], [26, 2, 1, "", "itertuples"], [27, 2, 1, "", "keys"], [28, 2, 1, "", "mad"], [29, 2, 1, "", "max"], [30, 2, 1, "", "mean"], [31, 2, 1, "", "median"], [32, 2, 1, "", "min"], [33, 2, 1, "", "mode"], [34, 3, 1, "", "ndim"], [35, 2, 1, "", "nunique"], [36, 3, 1, "", "os_dtypes"], [37, 2, 1, "", "os_info"], [38, 2, 1, "", "os_match"], [39, 2, 1, "", "os_query"], [40, 2, 1, "", "quantile"], [41, 2, 1, "", "query"], [42, 2, 1, "", "sample"], [43, 2, 1, "", "select_dtypes"], [44, 3, 1, "", "shape"], [45, 3, 1, "", "size"], [46, 2, 1, "", "std"], [47, 2, 1, "", "sum"], [48, 2, 1, "", "tail"], [49, 2, 1, "", "to_csv"], [50, 2, 1, "", "to_html"], [51, 2, 1, "", "to_numpy"], [52, 2, 1, "", "to_pandas"], [53, 2, 1, "", "to_string"], [54, 3, 1, "", "values"], [55, 2, 1, "", "var"]], "opensearch_py_ml.Series": [[58, 2, 1, "", "add"], [59, 2, 1, "", "describe"], [60, 2, 1, "", "div"], [61, 2, 1, "", "divide"], [62, 3, 1, "", "dtype"], [63, 3, 1, "", "dtypes"], [64, 3, 1, "", "empty"], [65, 2, 1, "", "filter"], [66, 2, 1, "", "floordiv"], [67, 2, 1, "", "head"], [68, 2, 1, "", "hist"], [69, 3, 1, "", "index"], [70, 2, 1, "", "isin"], [71, 2, 1, "", "isna"], [72, 2, 1, "", "isnull"], [73, 2, 1, "", "mad"], [74, 2, 1, "", "max"], [75, 2, 1, "", "mean"], [76, 2, 1, "", "median"], [77, 2, 1, "", "min"], [78, 2, 1, "", "mod"], [79, 2, 1, "", "mode"], [80, 2, 1, "", "mul"], [81, 2, 1, "", "multiply"], [82, 3, 1, "", "name"], [83, 3, 1, "", "ndim"], [84, 2, 1, "", "notna"], [85, 2, 1, "", "notnull"], [86, 2, 1, "", "nunique"], [87, 3, 1, "", "os_dtype"], [88, 3, 1, "", "os_dtypes"], [89, 2, 1, "", "os_info"], [90, 2, 1, "", "os_match"], [91, 2, 1, "", "pow"], [92, 2, 1, "", "quantile"], [93, 2, 1, "", "radd"], [94, 2, 1, "", "rdiv"], [95, 2, 1, "", "rdivide"], [96, 2, 1, "", "rename"], [97, 2, 1, "", "rfloordiv"], [98, 2, 1, "", "rmod"], [99, 2, 1, "", "rmul"], [100, 2, 1, "", "rmultiply"], [101, 2, 1, "", "rpow"], [102, 2, 1, "", "rsub"], [103, 2, 1, "", "rsubtract"], [104, 2, 1, "", "rtruediv"], [105, 2, 1, "", "sample"], [106, 3, 1, "", "shape"], [107, 3, 1, "", "size"], [108, 2, 1, "", "std"], [109, 2, 1, "", "sub"], [110, 2, 1, "", "subtract"], [111, 2, 1, "", "sum"], [112, 2, 1, "", "tail"], [113, 2, 1, "", "to_numpy"], [114, 2, 1, "", "to_pandas"], [115, 2, 1, "", "to_string"], [116, 2, 1, "", "truediv"], [117, 2, 1, "", "unique"], [118, 2, 1, "", "value_counts"], [119, 2, 1, "", "var"]], "opensearch_py_ml.etl": [[120, 4, 1, "", "csv_to_opensearch"], [150, 2, 1, "", "opensearch_to_pandas"], [151, 2, 1, "", "pandas_to_opensearch"]], "opensearch_py_ml.groupby": [[121, 1, 1, "", "DataFrameGroupBy"]], "opensearch_py_ml.groupby.DataFrameGroupBy": [[122, 2, 1, "", "agg"], [123, 2, 1, "", "aggregate"], [124, 2, 1, "", "count"], [125, 2, 1, "", "mad"], [126, 2, 1, "", "max"], [127, 2, 1, "", "mean"], [128, 2, 1, "", "median"], [129, 2, 1, "", "min"], [130, 2, 1, "", "nunique"], [131, 2, 1, "", "quantile"], [132, 2, 1, "", "std"], [133, 2, 1, "", "sum"], [134, 2, 1, "", "var"]], "opensearch_py_ml.ml_commons.MLCommonClient": [[136, 4, 1, "", "delete_model"], [137, 4, 1, "", "delete_task"], [138, 4, 1, "", "deploy_model"], [139, 4, 1, "", "execute"], [140, 4, 1, "", "generate_embedding"], [141, 4, 1, "", "get_model_info"], [142, 4, 1, "", "get_task_info"], [143, 4, 1, "", "load_model"], [144, 4, 1, "", "register_model"], [145, 4, 1, "", "register_pretrained_model"], [146, 4, 1, "", "undeploy_model"], [147, 4, 1, "", "unload_model"], [148, 4, 1, "", "upload_model"], [149, 4, 1, "", "upload_pretrained_model"]], "opensearch_py_ml.ml_models.SentenceTransformerModel": [[152, 4, 1, "", "__init__"], [153, 4, 1, "", "load_training_data"], [154, 4, 1, "", "make_model_config_json"], [155, 4, 1, "", "read_queries"], [156, 4, 1, "", "save_as_onnx"], [157, 4, 1, "", "save_as_pt"], [158, 4, 1, "", "set_up_accelerate_config"], [159, 4, 1, "", "train"], [160, 4, 1, "", "train_model"], [161, 4, 1, "", "zip_model"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"demo": [0, 1, 2, 3, 4, 5], "notebook": [0, 1, 2, 3, 4, 5], "mlcommon": [0, 166], "integr": [0, 4], "download": [0, 1, 2, 3, 5], "step": [0, 1, 2, 3, 5, 168], "0": [0, 1, 2, 5], "import": [0, 1, 2, 3, 5], "packag": [0, 2, 3], "set": [0, 2, 3], "up": [0, 2, 3], "client": [0, 1, 2, 3, 5], "1": [0, 1, 2, 3, 5], "upload": [0, 3, 148, 149, 166], "nlp": 0, "model": [0, 2, 3, 4, 136, 138, 141, 143, 144, 145, 146, 147, 148, 149, 166, 167, 168], "from": 0, "local": 0, "file": [0, 165], "opensearch": [0, 2, 3, 6, 162, 163, 169], "cluster": [0, 3], "2": [0, 2, 3], "load": [0, 3, 143, 166], "3": [0, 2, 3], "get": [0, 1, 5, 6, 17, 141, 142, 166], "task": [0, 137, 142, 166], "4": [0, 2, 3], "5": [0, 2, 3], "gener": [0, 2, 3, 140, 163, 166], "sentenc": [0, 2, 3, 152, 168], "embed": [0, 2, 140, 166], "6": 0, "unload": [0, 147, 166], "7": 0, "delet": [0, 136, 137, 166], "datafram": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 162], "setup": [1, 5], "compar": 1, "similar": 1, "differ": 1, "between": 1, "panda": [1, 3, 4, 163], "v": 1, "opensearch_py_ml": [1, 56], "attribut": [1, 162, 169], "underli": [1, 162, 169], "data": [1, 3, 4, 5, 162, 169], "column": [1, 5, 10], "dtype": [1, 14, 62, 63], "select_dtyp": [1, 43], "empti": [1, 15, 64], "shape": [1, 44, 106], "index": [1, 5, 23, 56, 69, 162, 169], "valu": [1, 54], "iter": [1, 162, 169], "head": [1, 5, 19, 67], "tail": [1, 5, 48, 112], "kei": [1, 27], "queri": [1, 3, 41], "boolean": [1, 5], "function": [1, 3, 162, 163, 169], "applic": [1, 162], "groupbi": [1, 18, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 162], "window": [1, 162], "agg": [1, 8, 122], "comput": [1, 162, 169], "descript": [1, 5, 162, 169], "stat": [1, 162, 169], "count": [1, 11, 124], "describ": [1, 12, 59], "info": [1, 24, 141, 142, 166], "max": [1, 29, 74, 126], "min": [1, 32, 77, 129], "mean": [1, 30, 75, 127], "sum": [1, 47, 111, 133], "trace": [2, 4], "transform": [2, 3, 152, 168], "save": [2, 3], "torchscript": 2, "format": 2, "regist": [2, 144, 145, 166], "onnx": 2, "train": [3, 4, 159, 167, 168], "introduct": 3, "synthet": 3, "defin": 3, "helper": 3, "passag": 3, "convert": 3, "list": 3, "string": 3, "instanti": 3, "an": 3, "object": 3, "class": 3, "synthetic_query_gener": 3, "thi": 3, "i": 3, "how": 3, "sampl": [3, 42, 105], "look": 3, "like": [3, 4], "read": 3, "fine": 3, "tune": 3, "hug": 3, "face": 3, "exampl": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 51, 55, 57, 58, 59, 60, 61, 63, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151], "explor": 4, "ml": [4, 6], "common": 4, "plugin": 4, "onlin": 5, "retail": 5, "analysi": 5, "start": [5, 6], "select": [5, 162, 169], "aggreg": [5, 9, 123], "statist": 5, "arithmet": 5, "oper": [5, 169], "py": 6, "machin": 6, "learn": 6, "back": 6, "instal": 6, "paramet": [7, 8, 9, 13, 16, 17, 18, 19, 21, 22, 25, 26, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 46, 47, 48, 55, 57, 58, 60, 61, 65, 66, 78, 79, 80, 81, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109, 110, 116, 118, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151, 159], "see": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 62, 63, 65, 69, 71, 72, 73, 74, 75, 76, 77, 79, 83, 84, 85, 86, 92, 96, 107, 108, 111, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151], "also": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 62, 63, 65, 69, 71, 72, 73, 74, 75, 76, 77, 79, 83, 84, 85, 86, 92, 96, 107, 108, 111, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151], "return": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 58, 59, 60, 61, 63, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 150, 151, 159], "drop": 13, "filter": [16, 65], "note": [16, 20, 24, 44, 57, 65, 68, 106, 120], "hist": [20, 68], "idxmax": 21, "idxmin": 22, "iterrow": 25, "yield": 25, "itertupl": 26, "mad": [28, 73, 125], "median": [31, 76, 128], "mode": [33, 79], "ndim": [34, 83], "nuniqu": [35, 86, 130], "os_dtyp": [36, 87, 88], "os_info": [37, 89], "os_match": [38, 90], "os_queri": 39, "quantil": [40, 92, 131], "size": [45, 107], "std": [46, 108, 132], "to_csv": 49, "to_html": 50, "to_numpi": [51, 113], "to_panda": [52, 114], "to_str": [53, 115], "var": [55, 119, 134], "seri": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 169], "add": 58, "div": 60, "divid": 61, "floordiv": 66, "isin": 70, "isna": 71, "isnul": 72, "mod": 78, "mul": 80, "multipli": 81, "name": 82, "notna": 84, "notnul": 85, "pow": 91, "radd": 93, "rdiv": 94, "rdivid": 95, "renam": 96, "rfloordiv": 97, "rmod": 98, "rmul": 99, "rmultipli": 100, "rpow": 101, "rsub": 102, "rsubtract": 103, "rtruediv": 104, "sub": 109, "subtract": 110, "truediv": 116, "uniqu": 117, "value_count": 118, "csv_to_opensearch": 120, "other": 120, "dataframegroupbi": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "deploi": [138, 166], "execut": [139, 166], "pretrain": [145, 149, 166], "undeploi": [146, 166], "opensearch_to_panda": 150, "pandas_to_opensearch": 151, "sentencetransformermodel": [153, 154, 155, 156, 157, 158, 159, 160, 161], "load_training_data": 153, "make_model_config_json": 154, "read_queri": 155, "save_as_onnx": 156, "save_as_pt": 157, "set_up_accelerate_config": 158, "train_model": 160, "zip_model": 161, "constructor": [162, 168, 169], "reindex": [162, 169], "label": [162, 169], "manipul": [162, 169], "plot": [162, 169], "serial": [162, 169], "io": [162, 169], "convers": [162, 169], "util": 163, "api": 164, "refer": 164, "input": 165, "output": 165, "flat": 165, "support": 166, "pre": 167, "option": 168, "export": 168, "config": 168, "binari": 169}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Demo Notebook for MLCommons Integration": [[0, "Demo-Notebook-for-MLCommons-Integration"]], "Download notebook": [[0, "Download-notebook"], [1, "Download-notebook"], [2, "Download-notebook"], [3, "Download-notebook"]], "Step 0: Import packages and set up client": [[0, "Step-0:-Import-packages-and-set-up-client"], [2, "Step-0:-Import-packages-and-set-up-client"]], "Step 1: Upload NLP model from local file to Opensearch cluster": [[0, "Step-1:-Upload-NLP-model-from-local-file-to-Opensearch-cluster"]], "Step 2: Load Model": [[0, "Step-2:-Load-Model"]], "Step 3: Get Task": [[0, "Step-3:-Get-Task"]], "Step 4: Get Model": [[0, "Step-4:-Get-Model"]], "Step 5: Generate Sentence Embedding": [[0, "Step-5:-Generate-Sentence-Embedding"], [2, "Step-5:-Generate-Sentence-Embedding"]], "Step 6: Unload Model": [[0, "Step-6:-Unload-Model"]], "Step 7: Delete Model": [[0, "Step-7:-Delete-Model"]], "Demo Notebook for Dataframe": [[1, "Demo-Notebook-for-Dataframe"]], "Step 0: Imports": [[1, "Step-0:-Imports"], [5, "Step-0:-Imports"]], "Step 1: Setup clients": [[1, "Step-1:-Setup-clients"], [5, "Step-1:-Setup-clients"]], "Comparing similarities and differences between panda dataframe vs opensearch_py_ml dataframe": [[1, "Comparing-similarities-and-differences-between-panda-dataframe-vs-opensearch_py_ml-dataframe"]], "Attributes and underlying data": [[1, "Attributes-and-underlying-data"]], "DataFrame.columns": [[1, "DataFrame.columns"], [10, "dataframe-columns"]], "DataFrame.dtypes": [[1, "DataFrame.dtypes"], [14, "dataframe-dtypes"]], "DataFrame.select_dtypes": [[1, "DataFrame.select_dtypes"], [43, "dataframe-select-dtypes"]], "DataFrame.empty": [[1, "DataFrame.empty"], [15, "dataframe-empty"]], "DataFrame.shape": [[1, "DataFrame.shape"], [44, "dataframe-shape"]], "DataFrame.index": [[1, "DataFrame.index"], [23, "dataframe-index"]], "DataFrame.values": [[1, "DataFrame.values"], [54, "dataframe-values"]], "Indexing, iteration": [[1, "Indexing,-iteration"]], "DataFrame.head": [[1, "DataFrame.head"], [19, "dataframe-head"]], "DataFrame.tail": [[1, "DataFrame.tail"], [48, "dataframe-tail"]], "DataFrame.keys": [[1, "DataFrame.keys"], [27, "dataframe-keys"]], "DataFrame.get": [[1, "DataFrame.get"], [17, "dataframe-get"]], "DataFrame.query": [[1, "DataFrame.query"], [41, "dataframe-query"]], "Boolean indexing query": [[1, "Boolean-indexing-query"]], "Function application, GroupBy & window": [[1, "Function-application,-GroupBy-&-window"]], "DataFrame.aggs": [[1, "DataFrame.aggs"]], "Computations / descriptive stats": [[1, "Computations-/-descriptive-stats"]], "DataFrame.count": [[1, "DataFrame.count"], [11, "dataframe-count"]], "DataFrame.describe": [[1, "DataFrame.describe"], [12, "dataframe-describe"]], "DataFrame.info": [[1, "DataFrame.info"], [24, "dataframe-info"]], "DataFrame.max, DataFrame.min, DataFrame.mean, DataFrame.sum": [[1, "DataFrame.max,-DataFrame.min,-DataFrame.mean,-DataFrame.sum"]], "max": [[1, "max"]], "min": [[1, "min"]], "mean": [[1, "mean"]], "sum": [[1, "sum"]], "Demo Notebook to trace Sentence Transformers model": [[2, "Demo-Notebook-to-trace-Sentence-Transformers-model"]], "Step 1: Save model in torchScript format": [[2, "Step-1:-Save-model-in-torchScript-format"]], "Step 2: Register the saved torchScript model in Opensearch": [[2, "Step-2:-Register-the-saved-torchScript-model-in-Opensearch"]], "Step 3: Save model in Onnx format": [[2, "Step-3:-Save-model-in-Onnx-format"]], "Step 4: Register the saved Onnx model in Opensearch": [[2, "Step-4:-Register-the-saved-Onnx-model-in-Opensearch"]], "Demo Notebook for Sentence Transformer Model Training, Saving and Uploading to OpenSearch": [[3, "Demo-Notebook-for-Sentence-Transformer-Model-Training,-Saving-and-Uploading-to-OpenSearch"]], "Introduction": [[3, "Introduction"]], "Synthetic query generation": [[3, "Synthetic-query-generation"]], "Step 1: Import packages, set up client and define helper functions": [[3, "Step-1:-Import-packages,-set-up-client-and-define-helper-functions"]], "Step 2: Import the data/passages for synthetic query generation": [[3, "Step-2:-Import-the-data/passages-for-synthetic-query-generation"]], "2.1) Load the data and convert into a pandas dataframe": [[3, "2.1)-Load-the-data-and-convert-into-a-pandas-dataframe"]], "2.2) Convert the data into a list of strings and instantiate an object of the class Synthetic_Query_Generation": [[3, "2.2)-Convert-the-data-into-a-list-of-strings-and-instantiate-an-object-of-the-class-Synthetic_Query_Generation"]], "Step 3: Generate synthetic queries": [[3, "Step-3:-Generate-synthetic-queries"]], "This is how the sample queries look like,": [[3, "This-is-how-the-sample-queries-look-like,"]], "Step 4: Read synthetic queries and train/fine-tune a hugging face sentence transformer model on synthetic data": [[3, "Step-4:-Read-synthetic-queries-and-train/fine-tune-a-hugging-face-sentence-transformer-model-on-synthetic-data"]], "Step 5: Upload the model to OpenSearch cluster": [[3, "Step-5:-Upload-the-model-to-OpenSearch-cluster"]], "Examples": [[4, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [43, "examples"], [44, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [51, "examples"], [55, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [63, "examples"], [66, "examples"], [68, "examples"], [69, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [86, "examples"], [88, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [106, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [113, "examples"], [116, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [150, "examples"], [151, "examples"]], "Demo notebooks for Data Exploration Panda like DataFrame": [[4, "demo-notebooks-for-data-exploration-panda-like-dataframe"]], "Demo notebooks for Model Training and Tracing": [[4, "demo-notebooks-for-model-training-and-tracing"]], "Demo notebooks for ML Commons plugin integration": [[4, "demo-notebooks-for-ml-commons-plugin-integration"]], "Demo Notebook for Online Retail Analysis": [[5, "Demo-Notebook-for-Online-Retail-Analysis"]], "download notebook": [[5, "download-notebook"]], "Getting Started": [[5, "Getting-Started"], [6, "getting-started"]], "Selecting and Indexing Data": [[5, "Selecting-and-Indexing-Data"]], "head and tail": [[5, "head-and-tail"]], "Selecting columns": [[5, "Selecting-columns"]], "Boolean Indexing": [[5, "Boolean-Indexing"]], "Aggregation and Descriptive Statistics": [[5, "Aggregation-and-Descriptive-Statistics"]], "Arithmetic Operations": [[5, "Arithmetic-Operations"]], "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch": [[6, "opensearch-py-ml-dataframes-and-machine-learning-backed-by-opensearch"]], "Installing Opensearch-py-ml": [[6, "installing-opensearch-py-ml"]], "DataFrame": [[7, "dataframe"], [162, "dataframe"]], "Parameters": [[7, "parameters"], [8, "parameters"], [9, "parameters"], [13, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [25, "parameters"], [26, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [55, "parameters"], [57, "parameters"], [58, "parameters"], [60, "parameters"], [61, "parameters"], [65, "parameters"], [66, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [109, "parameters"], [110, "parameters"], [116, "parameters"], [118, "parameters"], [120, "parameters"], [122, "parameters"], [123, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [150, "parameters"], [151, "parameters"], [159, "parameters"]], "See Also": [[7, "see-also"], [8, "see-also"], [9, "see-also"], [10, "see-also"], [11, "see-also"], [12, "see-also"], [13, "see-also"], [14, "see-also"], [15, "see-also"], [16, "see-also"], [17, "see-also"], [18, "see-also"], [19, "see-also"], [21, "see-also"], [22, "see-also"], [23, "see-also"], [25, "see-also"], [26, "see-also"], [28, "see-also"], [29, "see-also"], [30, "see-also"], [31, "see-also"], [32, "see-also"], [33, "see-also"], [34, "see-also"], [35, "see-also"], [40, "see-also"], [41, "see-also"], [42, "see-also"], [45, "see-also"], [46, "see-also"], [47, "see-also"], [48, "see-also"], [49, "see-also"], [50, "see-also"], [51, "see-also"], [53, "see-also"], [54, "see-also"], [55, "see-also"], [57, "see-also"], [59, "see-also"], [62, "see-also"], [63, "see-also"], [65, "see-also"], [69, "see-also"], [71, "see-also"], [72, "see-also"], [73, "see-also"], [74, "see-also"], [75, "see-also"], [76, "see-also"], [77, "see-also"], [79, "see-also"], [83, "see-also"], [84, "see-also"], [85, "see-also"], [86, "see-also"], [92, "see-also"], [96, "see-also"], [107, "see-also"], [108, "see-also"], [111, "see-also"], [113, "see-also"], [115, "see-also"], [117, "see-also"], [118, "see-also"], [119, "see-also"], [120, "see-also"], [122, "see-also"], [123, "see-also"], [124, "see-also"], [125, "see-also"], [126, "see-also"], [127, "see-also"], [128, "see-also"], [129, "see-also"], [130, "see-also"], [131, "see-also"], [132, "see-also"], [133, "see-also"], [134, "see-also"], [150, "see-also"], [151, "see-also"]], "DataFrame.agg": [[8, "dataframe-agg"]], "Returns": [[8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [52, "returns"], [55, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [63, "returns"], [65, "returns"], [66, "returns"], [69, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [88, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [150, "returns"], [151, "returns"], [159, "returns"]], "DataFrame.aggregate": [[9, "dataframe-aggregate"]], "DataFrame.drop": [[13, "dataframe-drop"]], "DataFrame.filter": [[16, "dataframe-filter"]], "Notes": [[16, "notes"], [20, "notes"], [24, "notes"], [44, "notes"], [57, "notes"], [65, "notes"], [68, "notes"], [106, "notes"], [120, "notes"]], "DataFrame.groupby": [[18, "dataframe-groupby"]], "DataFrame.hist": [[20, "dataframe-hist"]], "DataFrame.idxmax": [[21, "dataframe-idxmax"]], "DataFrame.idxmin": [[22, "dataframe-idxmin"]], "DataFrame.iterrows": [[25, "dataframe-iterrows"]], "Yields": [[25, "yields"]], "DataFrame.itertuples": [[26, "dataframe-itertuples"]], "DataFrame.mad": [[28, "dataframe-mad"]], "DataFrame.max": [[29, "dataframe-max"]], "DataFrame.mean": [[30, "dataframe-mean"]], "DataFrame.median": [[31, "dataframe-median"]], "DataFrame.min": [[32, "dataframe-min"]], "DataFrame.mode": [[33, "dataframe-mode"]], "DataFrame.ndim": [[34, "dataframe-ndim"]], "DataFrame.nunique": [[35, "dataframe-nunique"]], "DataFrame.os_dtypes": [[36, "dataframe-os-dtypes"]], "DataFrame.os_info": [[37, "dataframe-os-info"]], "DataFrame.os_match": [[38, "dataframe-os-match"]], "DataFrame.os_query": [[39, "dataframe-os-query"]], "DataFrame.quantile": [[40, "dataframe-quantile"]], "DataFrame.sample": [[42, "dataframe-sample"]], "DataFrame.size": [[45, "dataframe-size"]], "DataFrame.std": [[46, "dataframe-std"]], "DataFrame.sum": [[47, "dataframe-sum"]], "DataFrame.to_csv": [[49, "dataframe-to-csv"]], "DataFrame.to_html": [[50, "dataframe-to-html"]], "DataFrame.to_numpy": [[51, "dataframe-to-numpy"]], "DataFrame.to_pandas": [[52, "dataframe-to-pandas"]], "DataFrame.to_string": [[53, "dataframe-to-string"]], "DataFrame.var": [[55, "dataframe-var"]], "opensearch_py_ml.Index": [[56, "opensearch-py-ml-index"]], "Series": [[57, "series"], [169, "series"]], "Series.add": [[58, "series-add"]], "Series.describe": [[59, "series-describe"]], "Series.div": [[60, "series-div"]], "Series.divide": [[61, "series-divide"]], "Series.dtype": [[62, "series-dtype"]], "Series.dtypes": [[63, "series-dtypes"]], "Series.empty": [[64, "series-empty"]], "Series.filter": [[65, "series-filter"]], "Series.floordiv": [[66, "series-floordiv"]], "Series.head": [[67, "series-head"]], "Series.hist": [[68, "series-hist"]], "Series.index": [[69, "series-index"]], "Series.isin": [[70, "series-isin"]], "Series.isna": [[71, "series-isna"]], "Series.isnull": [[72, "series-isnull"]], "Series.mad": [[73, "series-mad"]], "Series.max": [[74, "series-max"]], "Series.mean": [[75, "series-mean"]], "Series.median": [[76, "series-median"]], "Series.min": [[77, "series-min"]], "Series.mod": [[78, "series-mod"]], "Series.mode": [[79, "series-mode"]], "Series.mul": [[80, "series-mul"]], "Series.multiply": [[81, "series-multiply"]], "Series.name": [[82, "series-name"]], "Series.ndim": [[83, "series-ndim"]], "Series.notna": [[84, "series-notna"]], "Series.notnull": [[85, "series-notnull"]], "Series.nunique": [[86, "series-nunique"]], "Series.os_dtype": [[87, "series-os-dtype"]], "Series.os_dtypes": [[88, "series-os-dtypes"]], "Series.os_info": [[89, "series-os-info"]], "Series.os_match": [[90, "series-os-match"]], "Series.pow": [[91, "series-pow"]], "Series.quantile": [[92, "series-quantile"]], "Series.radd": [[93, "series-radd"]], "Series.rdiv": [[94, "series-rdiv"]], "Series.rdivide": [[95, "series-rdivide"]], "Series.rename": [[96, "series-rename"]], "Series.rfloordiv": [[97, "series-rfloordiv"]], "Series.rmod": [[98, "series-rmod"]], "Series.rmul": [[99, "series-rmul"]], "Series.rmultiply": [[100, "series-rmultiply"]], "Series.rpow": [[101, "series-rpow"]], "Series.rsub": [[102, "series-rsub"]], "Series.rsubtract": [[103, "series-rsubtract"]], "Series.rtruediv": [[104, "series-rtruediv"]], "Series.sample": [[105, "series-sample"]], "Series.shape": [[106, "series-shape"]], "Series.size": [[107, "series-size"]], "Series.std": [[108, "series-std"]], "Series.sub": [[109, "series-sub"]], "Series.subtract": [[110, "series-subtract"]], "Series.sum": [[111, "series-sum"]], "Series.tail": [[112, "series-tail"]], "Series.to_numpy": [[113, "series-to-numpy"]], "Series.to_pandas": [[114, "series-to-pandas"]], "Series.to_string": [[115, "series-to-string"]], "Series.truediv": [[116, "series-truediv"]], "Series.unique": [[117, "series-unique"]], "Series.value_counts": [[118, "series-value-counts"]], "Series.var": [[119, "series-var"]], "csv_to_opensearch": [[120, "csv-to-opensearch"]], "Other Parameters": [[120, "other-parameters"]], "groupby.DataFrameGroupBy": [[121, "groupby-dataframegroupby"]], "groupby.DataFrameGroupBy.agg": [[122, "groupby-dataframegroupby-agg"]], "groupby.DataFrameGroupBy.aggregate": [[123, "groupby-dataframegroupby-aggregate"]], "groupby.DataFrameGroupBy.count": [[124, "groupby-dataframegroupby-count"]], "groupby.DataFrameGroupBy.mad": [[125, "groupby-dataframegroupby-mad"]], "groupby.DataFrameGroupBy.max": [[126, "groupby-dataframegroupby-max"]], "groupby.DataFrameGroupBy.mean": [[127, "groupby-dataframegroupby-mean"]], "groupby.DataFrameGroupBy.median": [[128, "groupby-dataframegroupby-median"]], "groupby.DataFrameGroupBy.min": [[129, "groupby-dataframegroupby-min"]], "groupby.DataFrameGroupBy.nunique": [[130, "groupby-dataframegroupby-nunique"]], "groupby.DataFrameGroupBy.quantile": [[131, "groupby-dataframegroupby-quantile"]], "groupby.DataFrameGroupBy.std": [[132, "groupby-dataframegroupby-std"]], "groupby.DataFrameGroupBy.sum": [[133, "groupby-dataframegroupby-sum"]], "groupby.DataFrameGroupBy.var": [[134, "groupby-dataframegroupby-var"]], "groupby.GroupBy": [[135, "groupby-groupby"]], "Delete Model": [[136, "delete-model"], [166, "delete-model"]], "Delete Task": [[137, "delete-task"], [166, "delete-task"]], "Deploy Model": [[138, "deploy-model"], [166, "deploy-model"]], "Execute": [[139, "execute"], [166, "execute"]], "Generate Embedding": [[140, "generate-embedding"], [166, "generate-embedding"]], "Get Model Info": [[141, "get-model-info"], [166, "get-model-info"]], "Get Task Info": [[142, "get-task-info"], [166, "get-task-info"]], "Load Model": [[143, "load-model"], [166, "load-model"]], "Register Model": [[144, "register-model"], [166, "register-model"]], "Register Pretrained Model": [[145, "register-pretrained-model"], [166, "register-pretrained-model"]], "Undeploy Model": [[146, "undeploy-model"], [166, "undeploy-model"]], "Unload Model": [[147, "unload-model"], [166, "unload-model"]], "Upload Model": [[148, "upload-model"], [166, "upload-model"]], "Upload Pretrained Model": [[149, "upload-pretrained-model"], [166, "upload-pretrained-model"]], "opensearch_to_pandas": [[150, "opensearch-to-pandas"]], "pandas_to_opensearch": [[151, "pandas-to-opensearch"]], "Sentence Transformer": [[152, "sentence-transformer"], [168, "sentence-transformer"]], "SentenceTransformerModel.load_training_data": [[153, "sentencetransformermodel-load-training-data"]], "SentenceTransformerModel.make_model_config_json": [[154, "sentencetransformermodel-make-model-config-json"]], "SentenceTransformerModel.read_queries": [[155, "sentencetransformermodel-read-queries"]], "SentenceTransformerModel.save_as_onnx": [[156, "sentencetransformermodel-save-as-onnx"]], "SentenceTransformerModel.save_as_pt": [[157, "sentencetransformermodel-save-as-pt"]], "SentenceTransformerModel.set_up_accelerate_config": [[158, "sentencetransformermodel-set-up-accelerate-config"]], "SentenceTransformerModel.train": [[159, "sentencetransformermodel-train"]], "SentenceTransformerModel.train_model": [[160, "sentencetransformermodel-train-model"]], "SentenceTransformerModel.zip_model": [[161, "sentencetransformermodel-zip-model"]], "Constructor": [[162, "constructor"], [168, "constructor"], [169, "constructor"]], "Attributes and Underlying Data": [[162, "attributes-and-underlying-data"], [169, "attributes-and-underlying-data"]], "Indexing, Iteration": [[162, "indexing-iteration"], [169, "indexing-iteration"]], "Function Application, GroupBy & Window": [[162, "function-application-groupby-window"]], "Computations / Descriptive Stats": [[162, "computations-descriptive-stats"], [169, "computations-descriptive-stats"]], "Reindexing / Selection / Label Manipulation": [[162, "reindexing-selection-label-manipulation"], [169, "reindexing-selection-label-manipulation"]], "Plotting": [[162, "plotting"], [169, "plotting"]], "Opensearch Functions": [[162, "opensearch-functions"], [169, "opensearch-functions"]], "Serialization / IO / Conversion": [[162, "serialization-io-conversion"], [169, "serialization-io-conversion"]], "General Utility Functions": [[163, "general-utility-functions"]], "Pandas and Opensearch": [[163, "pandas-and-opensearch"]], "API Reference": [[164, "api-reference"]], "Input/Output": [[165, "input-output"]], "Flat File": [[165, "flat-file"]], "MLCommons Support": [[166, "mlcommons-support"]], "Pre-trained models": [[167, "pre-trained-models"]], "Train Model": [[168, "train-model"]], "(Optional) Step by Step Train Model": [[168, "optional-step-by-step-train-model"]], "Export Model": [[168, "export-model"]], "Config Model": [[168, "config-model"]], "Binary Operator Functions": [[169, "binary-operator-functions"]]}, "indexentries": {"module": [[6, "module-opensearch_py_ml"]], "opensearch_py_ml": [[6, "module-opensearch_py_ml"]], "dataframe (class in opensearch_py_ml)": [[7, "opensearch_py_ml.DataFrame"]], "agg() (opensearch_py_ml.dataframe method)": [[8, "opensearch_py_ml.DataFrame.agg"]], "aggregate() (opensearch_py_ml.dataframe method)": [[9, "opensearch_py_ml.DataFrame.aggregate"]], "columns (opensearch_py_ml.dataframe attribute)": [[10, "opensearch_py_ml.DataFrame.columns"]], "count() (opensearch_py_ml.dataframe method)": [[11, "opensearch_py_ml.DataFrame.count"]], "describe() (opensearch_py_ml.dataframe method)": [[12, "opensearch_py_ml.DataFrame.describe"]], "drop() (opensearch_py_ml.dataframe method)": [[13, "opensearch_py_ml.DataFrame.drop"]], "dtypes (opensearch_py_ml.dataframe attribute)": [[14, "opensearch_py_ml.DataFrame.dtypes"]], "empty (opensearch_py_ml.dataframe attribute)": [[15, "opensearch_py_ml.DataFrame.empty"]], "filter() (opensearch_py_ml.dataframe method)": [[16, "opensearch_py_ml.DataFrame.filter"]], "get() (opensearch_py_ml.dataframe method)": [[17, "opensearch_py_ml.DataFrame.get"]], "groupby() (opensearch_py_ml.dataframe method)": [[18, "opensearch_py_ml.DataFrame.groupby"]], "head() (opensearch_py_ml.dataframe method)": [[19, "opensearch_py_ml.DataFrame.head"]], "hist() (opensearch_py_ml.dataframe method)": [[20, "opensearch_py_ml.DataFrame.hist"]], "idxmax() (opensearch_py_ml.dataframe method)": [[21, "opensearch_py_ml.DataFrame.idxmax"]], "idxmin() (opensearch_py_ml.dataframe method)": [[22, "opensearch_py_ml.DataFrame.idxmin"]], "index (opensearch_py_ml.dataframe attribute)": [[23, "opensearch_py_ml.DataFrame.index"]], "info() (opensearch_py_ml.dataframe method)": [[24, "opensearch_py_ml.DataFrame.info"]], "iterrows() (opensearch_py_ml.dataframe method)": [[25, "opensearch_py_ml.DataFrame.iterrows"]], "itertuples() (opensearch_py_ml.dataframe method)": [[26, "opensearch_py_ml.DataFrame.itertuples"]], "keys() (opensearch_py_ml.dataframe method)": [[27, "opensearch_py_ml.DataFrame.keys"]], "mad() (opensearch_py_ml.dataframe method)": [[28, "opensearch_py_ml.DataFrame.mad"]], "max() (opensearch_py_ml.dataframe method)": [[29, "opensearch_py_ml.DataFrame.max"]], "mean() (opensearch_py_ml.dataframe method)": [[30, "opensearch_py_ml.DataFrame.mean"]], "median() (opensearch_py_ml.dataframe method)": [[31, "opensearch_py_ml.DataFrame.median"]], "min() (opensearch_py_ml.dataframe method)": [[32, "opensearch_py_ml.DataFrame.min"]], "mode() (opensearch_py_ml.dataframe method)": [[33, "opensearch_py_ml.DataFrame.mode"]], "ndim (opensearch_py_ml.dataframe attribute)": [[34, "opensearch_py_ml.DataFrame.ndim"]], "nunique() (opensearch_py_ml.dataframe method)": [[35, "opensearch_py_ml.DataFrame.nunique"]], "os_dtypes (opensearch_py_ml.dataframe attribute)": [[36, "opensearch_py_ml.DataFrame.os_dtypes"]], "os_info() (opensearch_py_ml.dataframe method)": [[37, "opensearch_py_ml.DataFrame.os_info"]], "os_match() (opensearch_py_ml.dataframe method)": [[38, "opensearch_py_ml.DataFrame.os_match"]], "os_query() (opensearch_py_ml.dataframe method)": [[39, "opensearch_py_ml.DataFrame.os_query"]], "quantile() (opensearch_py_ml.dataframe method)": [[40, "opensearch_py_ml.DataFrame.quantile"]], "query() (opensearch_py_ml.dataframe method)": [[41, "opensearch_py_ml.DataFrame.query"]], "sample() (opensearch_py_ml.dataframe method)": [[42, "opensearch_py_ml.DataFrame.sample"]], "select_dtypes() (opensearch_py_ml.dataframe method)": [[43, "opensearch_py_ml.DataFrame.select_dtypes"]], "shape (opensearch_py_ml.dataframe attribute)": [[44, "opensearch_py_ml.DataFrame.shape"]], "size (opensearch_py_ml.dataframe attribute)": [[45, "opensearch_py_ml.DataFrame.size"]], "std() (opensearch_py_ml.dataframe method)": [[46, "opensearch_py_ml.DataFrame.std"]], "sum() (opensearch_py_ml.dataframe method)": [[47, "opensearch_py_ml.DataFrame.sum"]], "tail() (opensearch_py_ml.dataframe method)": [[48, "opensearch_py_ml.DataFrame.tail"]], "to_csv() (opensearch_py_ml.dataframe method)": [[49, "opensearch_py_ml.DataFrame.to_csv"]], "to_html() (opensearch_py_ml.dataframe method)": [[50, "opensearch_py_ml.DataFrame.to_html"]], "to_numpy() (opensearch_py_ml.dataframe method)": [[51, "opensearch_py_ml.DataFrame.to_numpy"]], "to_pandas() (opensearch_py_ml.dataframe method)": [[52, "opensearch_py_ml.DataFrame.to_pandas"]], "to_string() (opensearch_py_ml.dataframe method)": [[53, "opensearch_py_ml.DataFrame.to_string"]], "values (opensearch_py_ml.dataframe attribute)": [[54, "opensearch_py_ml.DataFrame.values"]], "var() (opensearch_py_ml.dataframe method)": [[55, "opensearch_py_ml.DataFrame.var"]], "index (class in opensearch_py_ml)": [[56, "opensearch_py_ml.Index"]], "series (class in opensearch_py_ml)": [[57, "opensearch_py_ml.Series"]], "add() (opensearch_py_ml.series method)": [[58, "opensearch_py_ml.Series.add"]], "describe() (opensearch_py_ml.series method)": [[59, "opensearch_py_ml.Series.describe"]], "div() (opensearch_py_ml.series method)": [[60, "opensearch_py_ml.Series.div"]], "divide() (opensearch_py_ml.series method)": [[61, "opensearch_py_ml.Series.divide"]], "dtype (opensearch_py_ml.series attribute)": [[62, "opensearch_py_ml.Series.dtype"]], "dtypes (opensearch_py_ml.series attribute)": [[63, "opensearch_py_ml.Series.dtypes"]], "empty (opensearch_py_ml.series attribute)": [[64, "opensearch_py_ml.Series.empty"]], "filter() (opensearch_py_ml.series method)": [[65, "opensearch_py_ml.Series.filter"]], "floordiv() (opensearch_py_ml.series method)": [[66, "opensearch_py_ml.Series.floordiv"]], "head() (opensearch_py_ml.series method)": [[67, "opensearch_py_ml.Series.head"]], "hist() (opensearch_py_ml.series method)": [[68, "opensearch_py_ml.Series.hist"]], "index (opensearch_py_ml.series attribute)": [[69, "opensearch_py_ml.Series.index"]], "isin() (opensearch_py_ml.series method)": [[70, "opensearch_py_ml.Series.isin"]], "isna() (opensearch_py_ml.series method)": [[71, "opensearch_py_ml.Series.isna"]], "isnull() (opensearch_py_ml.series method)": [[72, "opensearch_py_ml.Series.isnull"]], "mad() (opensearch_py_ml.series method)": [[73, "opensearch_py_ml.Series.mad"]], "max() (opensearch_py_ml.series method)": [[74, "opensearch_py_ml.Series.max"]], "mean() (opensearch_py_ml.series method)": [[75, "opensearch_py_ml.Series.mean"]], "median() (opensearch_py_ml.series method)": [[76, "opensearch_py_ml.Series.median"]], "min() (opensearch_py_ml.series method)": [[77, "opensearch_py_ml.Series.min"]], "mod() (opensearch_py_ml.series method)": [[78, "opensearch_py_ml.Series.mod"]], "mode() (opensearch_py_ml.series method)": [[79, "opensearch_py_ml.Series.mode"]], "mul() (opensearch_py_ml.series method)": [[80, "opensearch_py_ml.Series.mul"]], "multiply() (opensearch_py_ml.series method)": [[81, "opensearch_py_ml.Series.multiply"]], "name (opensearch_py_ml.series attribute)": [[82, "opensearch_py_ml.Series.name"]], "ndim (opensearch_py_ml.series attribute)": [[83, "opensearch_py_ml.Series.ndim"]], "notna() (opensearch_py_ml.series method)": [[84, "opensearch_py_ml.Series.notna"]], "notnull() (opensearch_py_ml.series method)": [[85, "opensearch_py_ml.Series.notnull"]], "nunique() (opensearch_py_ml.series method)": [[86, "opensearch_py_ml.Series.nunique"]], "os_dtype (opensearch_py_ml.series attribute)": [[87, "opensearch_py_ml.Series.os_dtype"]], "os_dtypes (opensearch_py_ml.series attribute)": [[88, "opensearch_py_ml.Series.os_dtypes"]], "os_info() (opensearch_py_ml.series method)": [[89, "opensearch_py_ml.Series.os_info"]], "os_match() (opensearch_py_ml.series method)": [[90, "opensearch_py_ml.Series.os_match"]], "pow() (opensearch_py_ml.series method)": [[91, "opensearch_py_ml.Series.pow"]], "quantile() (opensearch_py_ml.series method)": [[92, "opensearch_py_ml.Series.quantile"]], "radd() (opensearch_py_ml.series method)": [[93, "opensearch_py_ml.Series.radd"]], "rdiv() (opensearch_py_ml.series method)": [[94, "opensearch_py_ml.Series.rdiv"]], "rdivide() (opensearch_py_ml.series method)": [[95, "opensearch_py_ml.Series.rdivide"]], "rename() (opensearch_py_ml.series method)": [[96, "opensearch_py_ml.Series.rename"]], "rfloordiv() (opensearch_py_ml.series method)": [[97, "opensearch_py_ml.Series.rfloordiv"]], "rmod() (opensearch_py_ml.series method)": [[98, "opensearch_py_ml.Series.rmod"]], "rmul() (opensearch_py_ml.series method)": [[99, "opensearch_py_ml.Series.rmul"]], "rmultiply() (opensearch_py_ml.series method)": [[100, "opensearch_py_ml.Series.rmultiply"]], "rpow() (opensearch_py_ml.series method)": [[101, "opensearch_py_ml.Series.rpow"]], "rsub() (opensearch_py_ml.series method)": [[102, "opensearch_py_ml.Series.rsub"]], "rsubtract() (opensearch_py_ml.series method)": [[103, "opensearch_py_ml.Series.rsubtract"]], "rtruediv() (opensearch_py_ml.series method)": [[104, "opensearch_py_ml.Series.rtruediv"]], "sample() (opensearch_py_ml.series method)": [[105, "opensearch_py_ml.Series.sample"]], "shape (opensearch_py_ml.series attribute)": [[106, "opensearch_py_ml.Series.shape"]], "size (opensearch_py_ml.series attribute)": [[107, "opensearch_py_ml.Series.size"]], "std() (opensearch_py_ml.series method)": [[108, "opensearch_py_ml.Series.std"]], "sub() (opensearch_py_ml.series method)": [[109, "opensearch_py_ml.Series.sub"]], "subtract() (opensearch_py_ml.series method)": [[110, "opensearch_py_ml.Series.subtract"]], "sum() (opensearch_py_ml.series method)": [[111, "opensearch_py_ml.Series.sum"]], "tail() (opensearch_py_ml.series method)": [[112, "opensearch_py_ml.Series.tail"]], "to_numpy() (opensearch_py_ml.series method)": [[113, "opensearch_py_ml.Series.to_numpy"]], "to_pandas() (opensearch_py_ml.series method)": [[114, "opensearch_py_ml.Series.to_pandas"]], "to_string() (opensearch_py_ml.series method)": [[115, "opensearch_py_ml.Series.to_string"]], "truediv() (opensearch_py_ml.series method)": [[116, "opensearch_py_ml.Series.truediv"]], "unique() (opensearch_py_ml.series method)": [[117, "opensearch_py_ml.Series.unique"]], "value_counts() (opensearch_py_ml.series method)": [[118, "opensearch_py_ml.Series.value_counts"]], "var() (opensearch_py_ml.series method)": [[119, "opensearch_py_ml.Series.var"]], "csv_to_opensearch() (in module opensearch_py_ml.etl)": [[120, "opensearch_py_ml.etl.csv_to_opensearch"]], "dataframegroupby (class in opensearch_py_ml.groupby)": [[121, "opensearch_py_ml.groupby.DataFrameGroupBy"]], "agg() (opensearch_py_ml.groupby.dataframegroupby method)": [[122, "opensearch_py_ml.groupby.DataFrameGroupBy.agg"]], "aggregate() (opensearch_py_ml.groupby.dataframegroupby method)": [[123, "opensearch_py_ml.groupby.DataFrameGroupBy.aggregate"]], "count() (opensearch_py_ml.groupby.dataframegroupby method)": [[124, "opensearch_py_ml.groupby.DataFrameGroupBy.count"]], "mad() (opensearch_py_ml.groupby.dataframegroupby method)": [[125, "opensearch_py_ml.groupby.DataFrameGroupBy.mad"]], "max() (opensearch_py_ml.groupby.dataframegroupby method)": [[126, "opensearch_py_ml.groupby.DataFrameGroupBy.max"]], "mean() (opensearch_py_ml.groupby.dataframegroupby method)": [[127, "opensearch_py_ml.groupby.DataFrameGroupBy.mean"]], "median() (opensearch_py_ml.groupby.dataframegroupby method)": [[128, "opensearch_py_ml.groupby.DataFrameGroupBy.median"]], "min() (opensearch_py_ml.groupby.dataframegroupby method)": [[129, "opensearch_py_ml.groupby.DataFrameGroupBy.min"]], "nunique() (opensearch_py_ml.groupby.dataframegroupby method)": [[130, "opensearch_py_ml.groupby.DataFrameGroupBy.nunique"]], "quantile() (opensearch_py_ml.groupby.dataframegroupby method)": [[131, "opensearch_py_ml.groupby.DataFrameGroupBy.quantile"]], "std() (opensearch_py_ml.groupby.dataframegroupby method)": [[132, "opensearch_py_ml.groupby.DataFrameGroupBy.std"]], "sum() (opensearch_py_ml.groupby.dataframegroupby method)": [[133, "opensearch_py_ml.groupby.DataFrameGroupBy.sum"]], "var() (opensearch_py_ml.groupby.dataframegroupby method)": [[134, "opensearch_py_ml.groupby.DataFrameGroupBy.var"]], "delete_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[136, "opensearch_py_ml.ml_commons.MLCommonClient.delete_model"]], "delete_task() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[137, "opensearch_py_ml.ml_commons.MLCommonClient.delete_task"]], "deploy_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[138, "opensearch_py_ml.ml_commons.MLCommonClient.deploy_model"]], "execute() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[139, "opensearch_py_ml.ml_commons.MLCommonClient.execute"]], "generate_embedding() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[140, "opensearch_py_ml.ml_commons.MLCommonClient.generate_embedding"]], "get_model_info() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[141, "opensearch_py_ml.ml_commons.MLCommonClient.get_model_info"]], "get_task_info() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[142, "opensearch_py_ml.ml_commons.MLCommonClient.get_task_info"]], "load_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[143, "opensearch_py_ml.ml_commons.MLCommonClient.load_model"]], "register_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[144, "opensearch_py_ml.ml_commons.MLCommonClient.register_model"]], "register_pretrained_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[145, "opensearch_py_ml.ml_commons.MLCommonClient.register_pretrained_model"]], "undeploy_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[146, "opensearch_py_ml.ml_commons.MLCommonClient.undeploy_model"]], "unload_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[147, "opensearch_py_ml.ml_commons.MLCommonClient.unload_model"]], "upload_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[148, "opensearch_py_ml.ml_commons.MLCommonClient.upload_model"]], "upload_pretrained_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[149, "opensearch_py_ml.ml_commons.MLCommonClient.upload_pretrained_model"]], "opensearch_to_pandas() (opensearch_py_ml.etl method)": [[150, "opensearch_py_ml.etl.opensearch_to_pandas"]], "pandas_to_opensearch() (opensearch_py_ml.etl method)": [[151, "opensearch_py_ml.etl.pandas_to_opensearch"]], "__init__() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[152, "opensearch_py_ml.ml_models.SentenceTransformerModel.__init__"]], "load_training_data() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[153, "opensearch_py_ml.ml_models.SentenceTransformerModel.load_training_data"]], "make_model_config_json() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[154, "opensearch_py_ml.ml_models.SentenceTransformerModel.make_model_config_json"]], "read_queries() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[155, "opensearch_py_ml.ml_models.SentenceTransformerModel.read_queries"]], "save_as_onnx() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[156, "opensearch_py_ml.ml_models.SentenceTransformerModel.save_as_onnx"]], "save_as_pt() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[157, "opensearch_py_ml.ml_models.SentenceTransformerModel.save_as_pt"]], "set_up_accelerate_config() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[158, "opensearch_py_ml.ml_models.SentenceTransformerModel.set_up_accelerate_config"]], "train() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[159, "opensearch_py_ml.ml_models.SentenceTransformerModel.train"]], "train_model() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[160, "opensearch_py_ml.ml_models.SentenceTransformerModel.train_model"]], "zip_model() (in module opensearch_py_ml.ml_models.sentencetransformermodel)": [[161, "opensearch_py_ml.ml_models.SentenceTransformerModel.zip_model"]]}})