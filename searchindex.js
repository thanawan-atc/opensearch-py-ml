Search.setIndex({"docnames": ["examples/demo_metrics_correlation", "examples/demo_ml_commons_integration", "examples/demo_notebook", "examples/demo_tracing_model_torchscript_onnx", "examples/demo_transformer_model_train_save_upload_to_openSearch", "examples/index", "examples/online_retail_analysis", "index", "reference/api/DataFrame", "reference/api/DataFrame.agg", "reference/api/DataFrame.aggregate", "reference/api/DataFrame.columns", "reference/api/DataFrame.count", "reference/api/DataFrame.describe", "reference/api/DataFrame.drop", "reference/api/DataFrame.dtypes", "reference/api/DataFrame.empty", "reference/api/DataFrame.filter", "reference/api/DataFrame.get", "reference/api/DataFrame.groupby", "reference/api/DataFrame.head", "reference/api/DataFrame.hist", "reference/api/DataFrame.idxmax", "reference/api/DataFrame.idxmin", "reference/api/DataFrame.index", "reference/api/DataFrame.info", "reference/api/DataFrame.iterrows", "reference/api/DataFrame.itertuples", "reference/api/DataFrame.keys", "reference/api/DataFrame.mad", "reference/api/DataFrame.max", "reference/api/DataFrame.mean", "reference/api/DataFrame.median", "reference/api/DataFrame.min", "reference/api/DataFrame.mode", "reference/api/DataFrame.ndim", "reference/api/DataFrame.nunique", "reference/api/DataFrame.os_dtypes", "reference/api/DataFrame.os_info", "reference/api/DataFrame.os_match", "reference/api/DataFrame.os_query", "reference/api/DataFrame.quantile", "reference/api/DataFrame.query", "reference/api/DataFrame.sample", "reference/api/DataFrame.select_dtypes", "reference/api/DataFrame.shape", "reference/api/DataFrame.size", "reference/api/DataFrame.std", "reference/api/DataFrame.sum", "reference/api/DataFrame.tail", "reference/api/DataFrame.to_csv", "reference/api/DataFrame.to_html", "reference/api/DataFrame.to_numpy", "reference/api/DataFrame.to_pandas", "reference/api/DataFrame.to_string", "reference/api/DataFrame.values", "reference/api/DataFrame.var", "reference/api/Index", "reference/api/Series", "reference/api/Series.add", "reference/api/Series.describe", "reference/api/Series.div", "reference/api/Series.divide", "reference/api/Series.dtype", "reference/api/Series.dtypes", "reference/api/Series.empty", "reference/api/Series.filter", "reference/api/Series.floordiv", "reference/api/Series.head", "reference/api/Series.hist", "reference/api/Series.index", "reference/api/Series.isin", "reference/api/Series.isna", "reference/api/Series.isnull", "reference/api/Series.mad", "reference/api/Series.max", "reference/api/Series.mean", "reference/api/Series.median", "reference/api/Series.min", "reference/api/Series.mod", "reference/api/Series.mode", "reference/api/Series.mul", "reference/api/Series.multiply", "reference/api/Series.name", "reference/api/Series.ndim", "reference/api/Series.notna", "reference/api/Series.notnull", "reference/api/Series.nunique", "reference/api/Series.os_dtype", "reference/api/Series.os_dtypes", "reference/api/Series.os_info", "reference/api/Series.os_match", "reference/api/Series.pow", "reference/api/Series.quantile", "reference/api/Series.radd", "reference/api/Series.rdiv", "reference/api/Series.rdivide", "reference/api/Series.rename", "reference/api/Series.rfloordiv", "reference/api/Series.rmod", "reference/api/Series.rmul", "reference/api/Series.rmultiply", "reference/api/Series.rpow", "reference/api/Series.rsub", "reference/api/Series.rsubtract", "reference/api/Series.rtruediv", "reference/api/Series.sample", "reference/api/Series.shape", "reference/api/Series.size", "reference/api/Series.std", "reference/api/Series.sub", "reference/api/Series.subtract", "reference/api/Series.sum", "reference/api/Series.tail", "reference/api/Series.to_numpy", "reference/api/Series.to_pandas", "reference/api/Series.to_string", "reference/api/Series.truediv", "reference/api/Series.unique", "reference/api/Series.value_counts", "reference/api/Series.var", "reference/api/csv_to_opensearch", "reference/api/groupby.DataFrameGroupBy", "reference/api/groupby.DataFrameGroupBy.agg", "reference/api/groupby.DataFrameGroupBy.aggregate", "reference/api/groupby.DataFrameGroupBy.count", "reference/api/groupby.DataFrameGroupBy.mad", "reference/api/groupby.DataFrameGroupBy.max", "reference/api/groupby.DataFrameGroupBy.mean", "reference/api/groupby.DataFrameGroupBy.median", "reference/api/groupby.DataFrameGroupBy.min", "reference/api/groupby.DataFrameGroupBy.nunique", "reference/api/groupby.DataFrameGroupBy.quantile", "reference/api/groupby.DataFrameGroupBy.std", "reference/api/groupby.DataFrameGroupBy.sum", "reference/api/groupby.DataFrameGroupBy.var", "reference/api/groupby.GroupBy", "reference/api/ml_commons_delete_model_api", "reference/api/ml_commons_delete_task_api", "reference/api/ml_commons_deploy_api", "reference/api/ml_commons_execute_api", "reference/api/ml_commons_generate_embedding_api", "reference/api/ml_commons_get_model_info_api", "reference/api/ml_commons_get_task_info_api", "reference/api/ml_commons_load_api", "reference/api/ml_commons_register_api", "reference/api/ml_commons_register_pretrained_api", "reference/api/ml_commons_undeploy_model_api", "reference/api/ml_commons_unload_model_api", "reference/api/ml_commons_upload_api", "reference/api/ml_commons_upload_pretrained_api", "reference/api/opensearch_to_pandas", "reference/api/pandas_to_opensearch", "reference/api/sentence_transformer", "reference/api/sentence_transformer.load_training_data", "reference/api/sentence_transformer.make_model_config_json", "reference/api/sentence_transformer.read_queries", "reference/api/sentence_transformer.save_as_onnx", "reference/api/sentence_transformer.save_as_pt", "reference/api/sentence_transformer.set_up_accelerate_config", "reference/api/sentence_transformer.train", "reference/api/sentence_transformer.train_model", "reference/api/sentence_transformer.zip_model", "reference/dataframe", "reference/general_utility_functions", "reference/index", "reference/io", "reference/mlcommons", "reference/pre_trained_models", "reference/sentencetransformer", "reference/series"], "filenames": ["examples/demo_metrics_correlation.ipynb", "examples/demo_ml_commons_integration.ipynb", "examples/demo_notebook.ipynb", "examples/demo_tracing_model_torchscript_onnx.ipynb", "examples/demo_transformer_model_train_save_upload_to_openSearch.ipynb", "examples/index.rst", "examples/online_retail_analysis.ipynb", "index.rst", "reference/api/DataFrame.rst", "reference/api/DataFrame.agg.rst", "reference/api/DataFrame.aggregate.rst", "reference/api/DataFrame.columns.rst", "reference/api/DataFrame.count.rst", "reference/api/DataFrame.describe.rst", "reference/api/DataFrame.drop.rst", "reference/api/DataFrame.dtypes.rst", "reference/api/DataFrame.empty.rst", "reference/api/DataFrame.filter.rst", "reference/api/DataFrame.get.rst", "reference/api/DataFrame.groupby.rst", "reference/api/DataFrame.head.rst", "reference/api/DataFrame.hist.rst", "reference/api/DataFrame.idxmax.rst", "reference/api/DataFrame.idxmin.rst", "reference/api/DataFrame.index.rst", "reference/api/DataFrame.info.rst", "reference/api/DataFrame.iterrows.rst", "reference/api/DataFrame.itertuples.rst", "reference/api/DataFrame.keys.rst", "reference/api/DataFrame.mad.rst", "reference/api/DataFrame.max.rst", "reference/api/DataFrame.mean.rst", "reference/api/DataFrame.median.rst", "reference/api/DataFrame.min.rst", "reference/api/DataFrame.mode.rst", "reference/api/DataFrame.ndim.rst", "reference/api/DataFrame.nunique.rst", "reference/api/DataFrame.os_dtypes.rst", "reference/api/DataFrame.os_info.rst", "reference/api/DataFrame.os_match.rst", "reference/api/DataFrame.os_query.rst", "reference/api/DataFrame.quantile.rst", "reference/api/DataFrame.query.rst", "reference/api/DataFrame.sample.rst", "reference/api/DataFrame.select_dtypes.rst", "reference/api/DataFrame.shape.rst", "reference/api/DataFrame.size.rst", "reference/api/DataFrame.std.rst", "reference/api/DataFrame.sum.rst", "reference/api/DataFrame.tail.rst", "reference/api/DataFrame.to_csv.rst", "reference/api/DataFrame.to_html.rst", "reference/api/DataFrame.to_numpy.rst", "reference/api/DataFrame.to_pandas.rst", "reference/api/DataFrame.to_string.rst", "reference/api/DataFrame.values.rst", "reference/api/DataFrame.var.rst", "reference/api/Index.rst", "reference/api/Series.rst", "reference/api/Series.add.rst", "reference/api/Series.describe.rst", "reference/api/Series.div.rst", "reference/api/Series.divide.rst", "reference/api/Series.dtype.rst", "reference/api/Series.dtypes.rst", "reference/api/Series.empty.rst", "reference/api/Series.filter.rst", "reference/api/Series.floordiv.rst", "reference/api/Series.head.rst", "reference/api/Series.hist.rst", "reference/api/Series.index.rst", "reference/api/Series.isin.rst", "reference/api/Series.isna.rst", "reference/api/Series.isnull.rst", "reference/api/Series.mad.rst", "reference/api/Series.max.rst", "reference/api/Series.mean.rst", "reference/api/Series.median.rst", "reference/api/Series.min.rst", "reference/api/Series.mod.rst", "reference/api/Series.mode.rst", "reference/api/Series.mul.rst", "reference/api/Series.multiply.rst", "reference/api/Series.name.rst", "reference/api/Series.ndim.rst", "reference/api/Series.notna.rst", "reference/api/Series.notnull.rst", "reference/api/Series.nunique.rst", "reference/api/Series.os_dtype.rst", "reference/api/Series.os_dtypes.rst", "reference/api/Series.os_info.rst", "reference/api/Series.os_match.rst", "reference/api/Series.pow.rst", "reference/api/Series.quantile.rst", "reference/api/Series.radd.rst", "reference/api/Series.rdiv.rst", "reference/api/Series.rdivide.rst", "reference/api/Series.rename.rst", "reference/api/Series.rfloordiv.rst", "reference/api/Series.rmod.rst", "reference/api/Series.rmul.rst", "reference/api/Series.rmultiply.rst", "reference/api/Series.rpow.rst", "reference/api/Series.rsub.rst", "reference/api/Series.rsubtract.rst", "reference/api/Series.rtruediv.rst", "reference/api/Series.sample.rst", "reference/api/Series.shape.rst", "reference/api/Series.size.rst", "reference/api/Series.std.rst", "reference/api/Series.sub.rst", "reference/api/Series.subtract.rst", "reference/api/Series.sum.rst", "reference/api/Series.tail.rst", "reference/api/Series.to_numpy.rst", "reference/api/Series.to_pandas.rst", "reference/api/Series.to_string.rst", "reference/api/Series.truediv.rst", "reference/api/Series.unique.rst", "reference/api/Series.value_counts.rst", "reference/api/Series.var.rst", "reference/api/csv_to_opensearch.rst", "reference/api/groupby.DataFrameGroupBy.rst", "reference/api/groupby.DataFrameGroupBy.agg.rst", "reference/api/groupby.DataFrameGroupBy.aggregate.rst", "reference/api/groupby.DataFrameGroupBy.count.rst", "reference/api/groupby.DataFrameGroupBy.mad.rst", "reference/api/groupby.DataFrameGroupBy.max.rst", "reference/api/groupby.DataFrameGroupBy.mean.rst", "reference/api/groupby.DataFrameGroupBy.median.rst", "reference/api/groupby.DataFrameGroupBy.min.rst", "reference/api/groupby.DataFrameGroupBy.nunique.rst", "reference/api/groupby.DataFrameGroupBy.quantile.rst", "reference/api/groupby.DataFrameGroupBy.std.rst", "reference/api/groupby.DataFrameGroupBy.sum.rst", "reference/api/groupby.DataFrameGroupBy.var.rst", "reference/api/groupby.GroupBy.rst", "reference/api/ml_commons_delete_model_api.rst", "reference/api/ml_commons_delete_task_api.rst", "reference/api/ml_commons_deploy_api.rst", "reference/api/ml_commons_execute_api.rst", "reference/api/ml_commons_generate_embedding_api.rst", "reference/api/ml_commons_get_model_info_api.rst", "reference/api/ml_commons_get_task_info_api.rst", "reference/api/ml_commons_load_api.rst", "reference/api/ml_commons_register_api.rst", "reference/api/ml_commons_register_pretrained_api.rst", "reference/api/ml_commons_undeploy_model_api.rst", "reference/api/ml_commons_unload_model_api.rst", "reference/api/ml_commons_upload_api.rst", "reference/api/ml_commons_upload_pretrained_api.rst", "reference/api/opensearch_to_pandas.rst", "reference/api/pandas_to_opensearch.rst", "reference/api/sentence_transformer.rst", "reference/api/sentence_transformer.load_training_data.rst", "reference/api/sentence_transformer.make_model_config_json.rst", "reference/api/sentence_transformer.read_queries.rst", "reference/api/sentence_transformer.save_as_onnx.rst", "reference/api/sentence_transformer.save_as_pt.rst", "reference/api/sentence_transformer.set_up_accelerate_config.rst", "reference/api/sentence_transformer.train.rst", "reference/api/sentence_transformer.train_model.rst", "reference/api/sentence_transformer.zip_model.rst", "reference/dataframe.rst", "reference/general_utility_functions.rst", "reference/index.rst", "reference/io.rst", "reference/mlcommons.rst", "reference/pre_trained_models.rst", "reference/sentencetransformer.rst", "reference/series.rst"], "titles": ["Demo Notebook for Metrics Correlation Model Testing", "Demo Notebook for MLCommons Integration", "Demo Notebook for Dataframe", "Demo Notebook to trace Sentence Transformers model", "Demo Notebook for Sentence Transformer Model Training, Saving and Uploading to OpenSearch", "Examples", "Demo Notebook for Online Retail Analysis", "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch", "DataFrame", "DataFrame.agg", "DataFrame.aggregate", "DataFrame.columns", "DataFrame.count", "DataFrame.describe", "DataFrame.drop", "DataFrame.dtypes", "DataFrame.empty", "DataFrame.filter", "DataFrame.get", "DataFrame.groupby", "DataFrame.head", "DataFrame.hist", "DataFrame.idxmax", "DataFrame.idxmin", "DataFrame.index", "DataFrame.info", "DataFrame.iterrows", "DataFrame.itertuples", "DataFrame.keys", "DataFrame.mad", "DataFrame.max", "DataFrame.mean", "DataFrame.median", "DataFrame.min", "DataFrame.mode", "DataFrame.ndim", "DataFrame.nunique", "DataFrame.os_dtypes", "DataFrame.os_info", "DataFrame.os_match", "DataFrame.os_query", "DataFrame.quantile", "DataFrame.query", "DataFrame.sample", "DataFrame.select_dtypes", "DataFrame.shape", "DataFrame.size", "DataFrame.std", "DataFrame.sum", "DataFrame.tail", "DataFrame.to_csv", "DataFrame.to_html", "DataFrame.to_numpy", "DataFrame.to_pandas", "DataFrame.to_string", "DataFrame.values", "DataFrame.var", "opensearch_py_ml.Index", "Series", "Series.add", "Series.describe", "Series.div", "Series.divide", "Series.dtype", "Series.dtypes", "Series.empty", "Series.filter", "Series.floordiv", "Series.head", "Series.hist", "Series.index", "Series.isin", "Series.isna", "Series.isnull", "Series.mad", "Series.max", "Series.mean", "Series.median", "Series.min", "Series.mod", "Series.mode", "Series.mul", "Series.multiply", "Series.name", "Series.ndim", "Series.notna", "Series.notnull", "Series.nunique", "Series.os_dtype", "Series.os_dtypes", "Series.os_info", "Series.os_match", "Series.pow", "Series.quantile", "Series.radd", "Series.rdiv", "Series.rdivide", "Series.rename", "Series.rfloordiv", "Series.rmod", "Series.rmul", "Series.rmultiply", "Series.rpow", "Series.rsub", "Series.rsubtract", "Series.rtruediv", "Series.sample", "Series.shape", "Series.size", "Series.std", "Series.sub", "Series.subtract", "Series.sum", "Series.tail", "Series.to_numpy", "Series.to_pandas", "Series.to_string", "Series.truediv", "Series.unique", "Series.value_counts", "Series.var", "csv_to_opensearch", "groupby.DataFrameGroupBy", "groupby.DataFrameGroupBy.agg", "groupby.DataFrameGroupBy.aggregate", "groupby.DataFrameGroupBy.count", "groupby.DataFrameGroupBy.mad", "groupby.DataFrameGroupBy.max", "groupby.DataFrameGroupBy.mean", "groupby.DataFrameGroupBy.median", "groupby.DataFrameGroupBy.min", "groupby.DataFrameGroupBy.nunique", "groupby.DataFrameGroupBy.quantile", "groupby.DataFrameGroupBy.std", "groupby.DataFrameGroupBy.sum", "groupby.DataFrameGroupBy.var", "groupby.GroupBy", "Delete Model", "Delete Task", "Deploy Model", "Execute", "Generate Embedding", "Get Model Info", "Get Task Info", "Load Model", "Register Model", "Register Pretrained Model", "Undeploy Model", "Unload Model", "Upload Model", "Upload Pretrained Model", "opensearch_to_pandas", "pandas_to_opensearch", "Sentence Transformer", "SentenceTransformerModel.load_training_data", "SentenceTransformerModel.make_model_config_json", "SentenceTransformerModel.read_queries", "SentenceTransformerModel.save_as_onnx", "SentenceTransformerModel.save_as_pt", "SentenceTransformerModel.set_up_accelerate_config", "SentenceTransformerModel.train", "SentenceTransformerModel.train_model", "SentenceTransformerModel.zip_model", "DataFrame", "General Utility Functions", "API Reference", "Input/Output", "MLCommons Support", "Pre-trained models", "Sentence Transformer", "Series"], "terms": {"thi": [0, 1, 2, 3, 6, 8, 12, 17, 20, 25, 36, 38, 39, 46, 49, 51, 52, 54, 55, 57, 58, 66, 91, 97, 108, 114, 116, 119, 122, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 165], "contain": [0, 1, 4, 6, 8, 18, 19, 43, 44, 58, 118, 151], "an": [0, 2, 3, 6, 8, 12, 17, 27, 38, 39, 40, 46, 49, 51, 54, 57, 58, 66, 72, 73, 85, 86, 91, 108, 116, 121, 151, 152, 165], "algorithm": [0, 1, 140, 163], "releas": [0, 1, 4], "opensearch": [0, 2, 5, 6, 8, 11, 12, 15, 24, 25, 26, 27, 28, 36, 37, 38, 39, 40, 45, 50, 51, 52, 55, 57, 58, 64, 70, 88, 89, 91, 97, 107, 114, 118, 119, 121, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 165, 168], "7": [0, 2, 3, 4, 6, 34, 39, 80, 121, 131, 134, 140, 144, 148, 149, 150], "we": [0, 1, 3, 4, 6, 7, 9, 10, 21, 27, 36, 51, 54, 116, 119, 143, 145, 146, 149, 150, 168], "work": [0, 1, 4, 9, 10, 39, 91], "through": [0, 1, 3, 4, 7], "exampl": [0, 1, 3, 4, 6, 7, 145, 149], "us": [0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 19, 20, 36, 39, 40, 41, 43, 49, 57, 69, 91, 93, 121, 123, 124, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 163, 168], "from": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 147, 148, 151, 152], "server": 0, "machin": [0, 1, 4], "dataset": [0, 4, 7, 13, 40, 60], "includ": [0, 2, 4, 6, 21, 25, 38, 44, 121, 152], "commentari": 0, "object": [0, 2, 6, 11, 13, 14, 15, 18, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 37, 38, 44, 46, 47, 48, 49, 52, 56, 58, 59, 60, 63, 64, 80, 89, 97, 108, 114, 137, 138, 139, 141, 142, 143, 144, 147, 148, 152, 165], "configur": [0, 1, 4, 8], "output": [0, 1, 3, 7, 13, 54, 60, 151, 165], "itself": 0, "pleas": [0, 1, 3, 4], "instal": [0, 1, 3, 4], "follow": [0, 1, 3, 4, 27, 51, 54, 116], "packag": [0, 7], "termin": [0, 4], "you": [0, 1, 3, 4, 6, 7, 40, 144, 148, 149, 150], "haven": [0, 4], "t": [0, 1, 3, 4, 6, 34, 39, 57, 60, 91, 168], "alreadi": [0, 1, 4, 121, 152], "thei": [0, 4, 12, 60, 118, 168], "can": [0, 1, 3, 4, 6, 7, 8, 12, 21, 27, 36, 39, 51, 54, 57, 58, 116, 119, 140, 144, 145, 146, 148, 149, 150, 151, 168], "also": [0, 1, 4, 6, 57], "uncom": [0, 4], "execut": [0, 4, 165], "line": [0, 4], "second": [0, 3], "code": [0, 7, 25, 121], "block": 0, "load_ext": [0, 2, 6], "autoreload": [0, 2, 6], "pip": [0, 1, 3, 4, 7], "panda": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 86, 87, 89, 93, 97, 108, 109, 112, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152, 165], "matplotlib": [0, 2, 4, 6, 69], "numpi": [0, 2, 3, 4, 6, 7, 52, 55, 114], "py": [0, 1, 2, 3, 4, 6, 27, 118, 165], "stop": [0, 2, 6], "ml": [0, 1, 2, 3, 4, 6, 12, 27, 118, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 165], "yell": [0, 2, 6], "everi": [0, 2, 3, 4, 6, 57, 141, 151, 168], "time": [0, 2, 3, 4, 6, 7, 46, 108], "datafram": [0, 6, 57, 59, 60, 61, 62, 64, 66, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152, 165], "connect": [0, 1, 2, 3, 4, 6], "made": [0, 2, 4, 6], "warn": [0, 1, 2, 3, 4, 6], "filterwarn": [0, 1, 2, 3, 4, 6], "ignor": [0, 1, 2, 3, 4, 6, 9, 10, 13, 14, 39, 60, 91, 123, 124, 152], "pd": [0, 2, 4, 6, 11, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 152], "np": [0, 2, 3, 4, 6, 9, 10, 21, 44, 102], "pyplot": [0, 2, 6, 69], "plt": [0, 2, 6, 21, 69], "opensearch_py_ml": [0, 1, 3, 4, 6, 8, 17, 19, 20, 24, 25, 26, 27, 38, 39, 40, 42, 43, 44, 49, 52, 53, 58, 59, 61, 62, 66, 67, 70, 72, 73, 79, 81, 82, 85, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 114, 117, 118, 119, 121, 122, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "oml": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 52, 55, 56, 58, 59, 60, 61, 62, 64, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "opensearchpi": [0, 1, 2, 3, 4, 6, 58, 121], "standard": [0, 2, 3, 6, 29, 47, 109, 133], "consist": [0, 2, 4, 6, 60], "conftest": [0, 2, 6], "6": [0, 2, 3, 4, 6, 14, 19, 30, 34, 36, 39, 56, 80, 98, 121, 123, 124, 127, 132, 134], "cluster_url": [0, 1, 2, 3, 4, 6], "http": [0, 1, 2, 3, 4, 6, 140, 145, 146, 149, 150], "localhost": [0, 1, 2, 3, 4, 6], "9200": [0, 1, 2, 3, 4, 6], "def": [0, 1, 2, 3, 4, 6], "get_os_cli": [0, 1, 2, 3, 4, 6], "usernam": [0, 1, 2, 3, 4, 6], "admin": [0, 1, 2, 3, 4, 6], "password": [0, 1, 2, 3, 4, 6], "get": [0, 3, 4, 163, 165], "param": [0, 1, 2, 3, 4, 6], "cluster": [0, 2, 3, 6, 137, 138, 139, 142, 143, 144, 145, 146, 149, 150, 151], "url": [0, 1, 2, 3, 4, 6], "like": [0, 1, 2, 3, 6, 17, 40, 41, 58, 66, 93, 132, 140], "te": [0, 1, 2, 3, 4, 6], "netwo": [0, 1, 2, 3, 4, 6], "1s12ba42br23v": [0, 1, 2, 3, 4, 6], "ff1736fa7db98ff2": [0, 1, 2, 3, 4, 6], "elb": [0, 1, 2, 3, 4, 6], "u": [0, 1, 2, 3, 4, 6, 19, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "west": [0, 1, 2, 3, 4, 6], "amazonaw": [0, 1, 2, 3, 4, 6], "com": [0, 1, 2, 3, 4, 6], "443": [0, 1, 2, 3, 4, 6], "return": [0, 1, 2, 3, 4, 6, 34, 52, 55, 63, 65, 80, 88, 114, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "host": [0, 1, 2, 3, 4, 6], "http_auth": [0, 1, 2, 3, 4, 6], "verify_cert": [0, 1, 2, 3, 4, 6], "fals": [0, 1, 2, 3, 4, 6, 8, 9, 10, 14, 16, 19, 21, 26, 27, 29, 30, 31, 32, 33, 34, 38, 39, 41, 47, 48, 51, 53, 54, 56, 65, 91, 115, 116, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 143, 145, 149, 151, 152], "timeout": 0, "30": [0, 2, 6, 19, 40, 93, 130], "8": [0, 1, 2, 3, 4, 6, 9, 10, 34, 48, 80, 121, 152], "ml_common": [0, 1, 3, 4, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "mlcommoncli": [0, 1, 3, 4, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "ml_client": [0, 1, 3, 4], "10": [0, 1, 2, 3, 4, 6, 8, 19, 21, 34, 38, 40, 69, 80, 100, 101, 119, 121, 125, 129, 131, 151], "read": [0, 6, 7, 39, 91, 121, 151, 152], "csv": [0, 6, 50, 121], "file": [0, 3, 4, 6, 50, 121, 145, 149, 165, 168], "df_pd": 0, "read_csv": [0, 121], "smd_data": 0, "header": [0, 50, 51, 54, 116, 121], "none": [0, 2, 3, 4, 6, 8, 9, 10, 14, 17, 18, 19, 21, 25, 26, 27, 30, 31, 32, 33, 38, 39, 41, 43, 44, 47, 48, 50, 51, 52, 54, 56, 57, 58, 66, 69, 74, 75, 76, 77, 78, 91, 106, 109, 112, 114, 116, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 152], "998": 0, "999": 0, "023229": 0, "019744": 0, "025552": 0, "024390": 0, "910256": 0, "912821": 0, "338983": 0, "339925": 0, "067797": 0, "068738": 0, "011496": 0, "012064": 0, "013625": 0, "014334": 0, "013699": 0, "027397": 0, "041096": 0, "5": [0, 2, 6, 8, 14, 20, 26, 27, 34, 38, 40, 41, 49, 52, 59, 61, 62, 67, 68, 69, 79, 80, 81, 82, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 113, 114, 117, 121, 126, 131, 132, 151], "150411": 0, "166988": 0, "131524": 0, "131827": 0, "405081": 0, "399555": 0, "484677": 0, "481303": 0, "005224": 0, "008237": 0, "007500": 0, "009327": 0, "009096": 0, "007172": 0, "011545": 0, "009620": 0, "9": [0, 1, 2, 3, 4, 9, 10, 34, 40, 80, 98, 121], "row": [0, 2, 6, 8, 14, 17, 19, 20, 26, 27, 34, 38, 39, 40, 43, 45, 46, 49, 52, 66, 80, 91, 107, 108, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 151, 152], "1000": 0, "column": [0, 4, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 60, 64, 66, 89, 91, 97, 107, 108, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152, 163], "In": [0, 1, 3, 4, 7, 51, 52, 54, 55, 57, 114, 116, 168], "case": [0, 1, 3, 57], "studi": 0, "consid": [0, 34], "recent": 0, "As": 0, "name": [0, 1, 2, 3, 4, 6, 9, 10, 11, 17, 18, 26, 27, 28, 41, 58, 59, 60, 61, 62, 66, 67, 79, 80, 81, 82, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 114, 116, 117, 119, 121, 140, 141, 145, 146, 149, 150, 152, 170], "suggest": 0, "ar": [0, 1, 3, 4, 6, 9, 10, 12, 14, 15, 17, 19, 21, 22, 23, 30, 31, 32, 33, 39, 41, 45, 47, 48, 56, 58, 64, 66, 75, 76, 77, 78, 91, 112, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 163, 165], "perform": [0, 4, 19], "collect": [0, 4, 71], "industri": 0, "The": [0, 3, 4, 8, 11, 13, 15, 17, 20, 22, 23, 26, 27, 29, 37, 47, 49, 56, 57, 58, 60, 64, 66, 89, 140, 146, 150, 151], "occasion": 0, "suffer": 0, "degrad": 0, "appear": 0, "here": [0, 3, 4, 6], "take": [0, 1, 3, 4, 39, 91], "role": 0, "op": 0, "engin": [0, 1, 121], "investig": 0, "understand": [0, 6], "whether": [0, 14, 72, 73, 85, 86, 139, 144, 145, 146, 149, 150], "how": [0, 1, 6, 119, 121, 152], "issu": [0, 1, 4, 7, 12], "have": [0, 1, 3, 4, 6, 12, 168], "occur": [0, 58], "individu": 0, "displai": [0, 4], "veri": [0, 4, 24, 57, 70], "differ": [0, 3, 4, 6, 57, 118], "behavior": [0, 118], "yet": 0, "across": 0, "i": [0, 1, 2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 20, 21, 25, 30, 31, 32, 33, 34, 41, 45, 47, 48, 49, 52, 55, 56, 57, 58, 60, 65, 66, 72, 73, 85, 86, 97, 114, 118, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 144, 145, 146, 149, 150, 152], "essenti": 0, "detect": [0, 72, 73, 85, 86], "diagnos": 0, "To": [0, 1, 3, 4, 6], "start": [0, 4], "let": [0, 6], "": [0, 2, 3, 4, 6, 7, 8, 9, 10, 13, 21, 24, 39, 41, 44, 52, 55, 60, 70, 74, 75, 76, 77, 78, 87, 91, 93, 109, 112, 114, 120, 132, 139, 144, 145, 146, 149, 150], "plot": [0, 21, 69, 165], "ll": 0, "It": [0, 3, 4, 6, 20, 49], "observ": 0, "timestamp": [0, 2, 8, 9, 10, 11, 15, 19, 22, 23, 29, 30, 31, 32, 33, 34, 37, 38, 41, 44, 47, 48, 56, 64, 89, 93, 126, 127, 128, 129, 130, 132, 135, 151, 152], "normal": 0, "each": [0, 4, 12, 15, 27, 29, 30, 31, 32, 33, 36, 37, 41, 47, 48, 56, 64, 72, 73, 85, 86, 89, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "seri": [0, 7, 9, 10, 12, 13, 15, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 46, 47, 48, 56, 121, 152, 165], "its": [0, 17, 66], "valu": [0, 1, 3, 4, 6, 9, 10, 13, 14, 18, 19, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 41, 47, 48, 50, 52, 56, 57, 60, 72, 73, 74, 75, 76, 77, 78, 80, 85, 86, 87, 93, 109, 112, 114, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 152, 163], "lie": 0, "between": [0, 3, 4, 7, 41, 93, 118, 132], "42": [0, 2, 6, 128, 129, 134], "m": [0, 1, 4, 7], "shape": [0, 1, 3, 13, 42, 60, 141, 163, 170], "figur": 0, "figsiz": [0, 2, 6, 21, 69], "12": [0, 1, 2, 3, 6, 30, 34, 80, 93, 121, 127, 151], "cm": 0, "get_cmap": 0, "dark2": 0, "val": 0, "arang": 0, "rang": [0, 2, 6, 38, 57], "iloc": 0, "color": 0, "titl": 0, "ylabel": 0, "xlabel": 0, "text": [0, 12, 36, 39, 91, 119, 152], "39": [0, 1, 2, 3, 4, 6, 34, 80, 93, 127, 128], "find": [0, 4], "event": 0, "where": [0, 1, 4, 7, 8, 30, 31, 32, 33, 41, 47, 48, 56, 126, 127, 128, 129, 130, 131, 133, 134, 135], "window": [0, 165], "multipl": [0, 3, 12, 34, 39, 80, 81, 82, 100, 101, 145, 149], "simultan": 0, "anomal": 0, "given": [0, 3, 4, 18, 39, 41, 91, 93, 118, 132, 141, 147, 148], "span": 0, "total": [0, 1, 2, 3, 4, 6, 25, 97, 121], "automat": [0, 3, 119], "determin": [0, 16, 65, 119], "mani": [0, 6, 119], "when": [0, 1, 4, 6, 9, 10, 39, 51, 54, 91, 116, 143, 152], "which": [0, 1, 3, 4, 6, 7, 9, 10, 17, 30, 31, 32, 33, 34, 39, 41, 47, 48, 56, 57, 66, 91, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 141, 147, 148, 168], "were": 0, "involv": [0, 52, 55, 114], "requir": [0, 1, 2, 3, 4, 39, 52, 55, 57, 114, 151, 168], "prior": 0, "train": [0, 1, 7, 140, 165], "minim": [0, 4], "see": [0, 1, 3, 6, 21, 25, 28, 69], "input_json": [0, 140], "tolist": 0, "now": [0, 1, 3, 4, 6, 121], "run": [0, 1, 4, 6, 143], "via": [0, 7, 15, 21, 39, 64], "api": [0, 1, 3, 4, 7, 8, 24, 58, 70, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "14": [0, 1, 2, 3, 6, 8, 34, 38, 80, 99, 127, 128, 151], "algorithm_nam": [0, 140], "metrics_correl": 0, "list": [0, 1, 2, 3, 6, 8, 9, 10, 12, 17, 19, 38, 39, 41, 66, 93, 119, 121, 122, 123, 124, 132, 141, 147, 148, 152, 168], "element": [0, 27, 46, 59, 61, 62, 67, 72, 73, 79, 81, 82, 85, 86, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 117], "ha": [0, 4, 20, 24, 34, 36, 49, 57, 70, 80, 140, 141, 146, 150], "discov": 0, "If": [0, 1, 2, 4, 7, 9, 10, 14, 16, 19, 27, 39, 40, 45, 52, 55, 58, 91, 114, 145, 146, 149, 150], "length": [0, 2, 3, 4, 6, 18, 58, 97, 116, 121], "zero": 0, "input": [0, 1, 2, 3, 4, 7, 69, 165], "two": [0, 1, 3, 8], "15": [0, 1, 2, 3, 4, 6, 34, 38, 41, 80, 128], "len": [0, 45, 107], "inference_result": [0, 1, 3, 141], "repres": [0, 45, 46, 107, 108], "dictionari": [0, 40, 140], "three": [0, 4], "field": [0, 1, 6, 8, 11, 12, 20, 24, 26, 27, 28, 36, 39, 49, 57, 58, 70, 91, 97, 119, 152], "end": [0, 4], "index": [0, 1, 8, 9, 10, 11, 14, 17, 20, 22, 23, 25, 26, 27, 28, 37, 38, 42, 43, 49, 50, 51, 52, 54, 55, 58, 66, 89, 97, 114, 116, 121, 151, 152, 165], "describ": [0, 4, 6, 163, 170], "suspect": 0, "indic": [0, 8, 72, 73, 85, 86, 121, 143, 151], "all": [0, 1, 4, 6, 9, 10, 21, 30, 31, 32, 33, 34, 39, 41, 47, 48, 56, 91, 112, 118, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 145, 147, 148, 149, 151, 165, 168], "part": 0, "dure": [0, 4], "pattern": [0, 8, 58], "arrai": [0, 2, 21, 41, 52, 93, 114, 132], "rel": 0, "intens": [0, 4], "correspond": [0, 3, 4, 168], "underli": [0, 6, 8, 63, 88, 97, 165], "idea": [0, 7], "roughli": 0, "focus": 0, "16": [0, 2, 3, 6, 41, 121, 128, 129], "kei": [0, 18, 19, 139, 144, 163], "dict_kei": 0, "event_window": 0, "event_pattern": 0, "suspected_metr": 0, "below": [0, 4, 13, 60], "implement": [0, 4, 30, 31, 33, 36, 48, 51, 52, 54, 55, 75, 76, 77, 78, 112, 114, 116, 119], "abov": [0, 4], "highlight": 0, "shade": 0, "interv": 0, "17": [0, 2, 3, 6, 8, 19, 127, 128, 129, 130, 151], "line2d": 0, "plot_ev": 0, "_": [0, 40], "ax": [0, 8, 21, 69], "subplot": 0, "non": [0, 2, 12, 25, 30, 31, 33, 39, 48, 75, 76, 77, 78, 85, 86, 91, 112], "grayscal": 0, "lightgrai": 0, "maroon": 0, "fill_between": 0, "skyblu": 0, "alpha": [0, 69], "label": [0, 4, 8, 9, 10, 11, 14, 17, 66, 165], "set_ylabel": 0, "add": [0, 3, 12, 13, 42, 60, 94, 97, 170], "legend": 0, "sus_met": 0, "unsus_met": 0, "other": [0, 3, 71, 91], "handl": 0, "get_legend_handles_label": 0, "extend": 0, "loc": 0, "upper": 0, "left": [0, 4, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105], "facecolor": 0, "white": 0, "framealpha": 0, "scale": 0, "max": [0, 4, 6, 9, 10, 13, 19, 60, 123, 124, 163, 170], "darkorang": 0, "linewidth": 0, "set_xlabel": 0, "show": [0, 1, 2, 3, 4, 6, 69, 151], "easili": 0, "both": [0, 1, 3, 13, 60], "18": [0, 2, 3, 6, 8, 34, 61, 62, 67, 80, 117, 128, 129, 151], "first": [0, 1, 3, 4, 6, 7, 20, 22, 23, 27, 59, 118, 121, 145, 146, 149, 150], "print": [0, 1, 2, 3, 4, 6, 25, 26, 27, 38, 52, 114, 145, 149], "number": [0, 1, 2, 3, 4, 12, 20, 21, 34, 43, 44, 45, 46, 49, 80, 87, 107, 108, 119, 121, 152], "325": [0, 132], "401": 0, "featur": [0, 12], "larg": [0, 4, 7, 151], "rise": 0, "wa": [0, 1, 3, 4, 6, 97, 147, 148], "clearli": 0, "visibl": 0, "howev": [0, 4, 12, 21], "found": [0, 3, 4, 18], "associ": 0, "sever": [0, 4, 9, 10], "more": [0, 3, 4, 6, 9, 10, 13, 39, 60, 91, 145, 149], "subtl": 0, "chang": [0, 4, 58, 97], "onli": [0, 2, 4, 6, 9, 10, 12, 13, 36, 44, 60, 97, 119, 140], "one": [0, 4, 6, 9, 10], "significantli": 0, "contribut": [0, 7], "upon": 0, "closer": 0, "examin": 0, "without": 0, "domin": 0, "shift": 0, "same": [0, 2, 3, 4, 18, 30, 31, 32, 33, 41, 47, 48, 56, 126, 127, 128, 129, 130, 131, 133, 134, 135], "period": 0, "demonstr": [0, 1, 2, 4, 6], "44": [0, 2, 19, 34, 80, 129, 130], "ix": 0, "x": [0, 1, 3, 4, 8, 14, 19, 20, 26, 27, 38, 39, 40, 49, 52, 91, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 151, 152], "event_start": 0, "event_end": 0, "next": [0, 6], "20": [0, 2, 3, 6, 31, 34, 38, 41, 80, 93, 127, 129], "40": [0, 38, 61, 62, 67, 117, 128, 129], "692": 0, "780": 0, "captur": 0, "sharp": 0, "drop": [0, 2, 19, 163], "again": 0, "initi": [0, 4], "been": [0, 4], "smaller": 0, "along": [0, 4], "whose": 0, "flat": [0, 165], "slow": 0, "provid": [1, 3, 4, 13, 60], "walkthrough": [1, 3], "guidanc": [1, 3], "user": [1, 3, 4, 14, 36, 39, 42, 168], "invok": 1, "sentence_transformer_model": [1, 3, 4], "pypi": [1, 3, 4, 7], "deprec": [1, 144, 148, 149, 150], "scheme": 1, "distutil": 1, "config": [1, 3, 4, 165, 168], "longer": 1, "futur": 1, "homebrew": 1, "linuxbrew": [1, 3], "python": [1, 3, 7, 58], "discuss": 1, "github": [1, 3], "core": [1, 2, 8, 52, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "76621": 1, "satisfi": 1, "home": [1, 3], "lib": [1, 3], "python3": [1, 3], "site": [1, 3], "wrapt": 1, "lt": [1, 2, 4], "gt": [1, 2, 4, 6, 38], "notic": 1, "A": [1, 4, 8, 38, 39, 42, 58, 118, 145, 149, 152], "new": [1, 7, 14, 34, 97, 121, 152], "avail": [1, 4, 6], "23": [1, 2, 3, 6, 30, 32, 34, 41, 80, 93, 127, 128, 129], "updat": [1, 3, 45], "upgrad": 1, "categori": [1, 3, 4, 36, 39, 91], "deprecationwarn": [1, 3, 4], "messag": [1, 3, 4, 121, 145, 149], "unverifi": [1, 3, 4], "request": [1, 3, 4, 14, 22, 23, 152], "opt": [1, 3], "http_urllib3": [1, 3], "199": [1, 3, 59, 61, 62, 67, 79, 81, 82, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 110, 111, 117], "userwarn": [1, 3], "ssl": [1, 3], "insecur": [1, 3], "learn": [1, 4], "register_model": [1, 3, 145, 149, 167], "regist": [1, 142, 149, 150, 165], "need": [1, 3, 4, 40], "group": [1, 19, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 145, 146], "id": [1, 3, 4, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "For": [1, 4, 12, 14, 21, 57, 97, 151], "look": [1, 3, 7], "doc": [1, 3, 140, 145, 146, 149, 150], "project": [1, 3, 12], "common": [1, 3, 4, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "blob": [1, 3], "model_access_control": 1, "md": [1, 3], "our": [1, 3, 4, 6], "creat": [1, 2, 3, 4, 6, 12, 25, 58, 121, 145, 146, 149, 150, 151, 152], "model_id": [1, 3, 137, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150], "register_pretrained_model": [1, 146, 150, 167], "model_nam": [1, 146, 150], "huggingfac": [1, 3, 4], "transform": [1, 5, 7, 165, 168], "minilm": [1, 4, 145, 149, 168], "l12": [1, 168], "v2": [1, 4, 145, 149, 168], "model_vers": [1, 146, 150], "model_format": [1, 3, 145, 146, 149, 150], "torch_script": [1, 3, 145, 146, 149, 150], "model_group_id": [1, 145, 146], "d4hfsygbfp6ijxccqpwi": 1, "deploy_model": [1, 139, 144, 145, 146, 167], "wait_until_deploi": [1, 139, 145, 146], "introduc": [1, 4], "pre": [1, 4, 21], "org": [1, 4, 140, 145, 146, 149, 150], "latest": [1, 145, 146, 149, 150], "plugin": [1, 3, 139, 140, 144, 145, 146, 149, 150], "pretrain": [1, 165], "One": 1, "thing": 1, "rememb": [1, 3], "don": [1, 3, 34, 60, 168], "ani": [1, 3, 18, 27, 39, 51, 91, 93], "node": [1, 4, 147, 148], "might": [1, 3, 4], "throw": 1, "except": [1, 2, 51, 54, 116], "main": [1, 2, 20], "build": 1, "gradl": 1, "l46": 1, "successfulli": [1, 3, 4], "t0jp24kbhugzttdfdmmm": 1, "own": 1, "system": [1, 3], "But": 1, "do": [1, 3, 14, 36, 57, 119, 140, 152], "coupl": 1, "allow_registering_model_via_url": 1, "allow_registering_model_via_local_fil": 1, "By": [1, 17, 27, 35, 39, 57, 66, 84, 151], "default": [1, 8, 9, 10, 17, 18, 19, 20, 22, 23, 26, 27, 30, 31, 32, 33, 34, 39, 41, 43, 47, 48, 49, 56, 57, 66, 80, 91, 93, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 145, 149, 151, 152], "true": [1, 2, 3, 4, 6, 8, 9, 10, 14, 16, 17, 19, 21, 26, 27, 29, 30, 31, 32, 33, 34, 38, 39, 41, 47, 48, 50, 51, 54, 56, 65, 66, 69, 91, 116, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 144, 145, 146, 149, 150, 151, 152], "zip": [1, 3, 4, 145, 149], "raw": 1, "src": 1, "test": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 52, 56, 58, 59, 60, 61, 62, 64, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "resourc": 1, "text_embed": 1, "l6": [1, 4, 145, 149, 168], "v2_torchscript_sent": 1, "torchscript": [1, 168], "pt": [1, 3, 4], "extens": 1, "token": [1, 3, 4], "json": [1, 3, 4, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149], "refer": [1, 3, 4, 7, 13, 58, 60, 140, 145, 146, 149, 150], "previou": 1, "defin": [1, 147, 148], "inform": [1, 6, 13, 25, 60, 137, 138, 142, 143], "model_path": [1, 3, 4, 145, 149], "volum": [1, 4], "workplac": [1, 4], "upload_cont": [1, 4], "transformers_al": 1, "model_config_path": [1, 4, 145, 149], "v2_torchscript": 1, "content": [1, 3, 4, 17, 57, 66], "version": [1, 3, 4, 7, 144, 145, 146, 148, 149, 150, 168], "model_config": [1, 3, 4, 145, 149], "model_typ": [1, 3, 145, 149], "bert": [1, 4, 145, 149], "embedding_dimens": [1, 3, 145, 149], "384": [1, 145, 149], "framework_typ": [1, 3, 145, 149], "sentence_transform": [1, 3, 4, 145, 149], "model_id_file_system": 1, "isverbos": [1, 3, 4, 145, 149], "chunk": [1, 3, 4, 145, 146, 149, 150], "sha1": [1, 3, 4], "3ead6e8725322ff54ef9137c453132046098d7e6494945283b8fc980c9123675": 1, "meta": [1, 3, 4], "data": [1, 3, 7, 8, 9, 10, 13, 15, 20, 21, 25, 26, 27, 37, 39, 49, 50, 51, 57, 60, 63, 64, 88, 89, 91, 121, 123, 124, 141, 152, 165], "4oh9sygbfp6ijxcclpx2": 1, "statu": [1, 3, 4, 139, 144], "deploi": [1, 3, 143, 144, 145, 146, 149, 150, 165], "last": [1, 3, 6, 49], "memori": [1, 2, 3, 4, 7, 8, 25, 52, 55, 57, 114, 151], "load_model_output": 1, "uejr24kbhugzttdfnskv": 1, "task_typ": 1, "function_nam": 1, "state": [1, 4, 6, 121], "complet": 1, "worker_nod": 1, "3w2aohubrmmwmvfoggw8jw": 1, "create_tim": 1, "1691611772437": 1, "last_update_tim": 1, "1691611774664": 1, "is_async": 1, "detail": [1, 3, 13, 25, 60, 116, 137, 138, 142, 143], "task_info": 1, "get_task_info": [1, 143, 167], "With": [1, 4, 27], "pull": 1, "about": [1, 3, 4, 6, 25, 39, 91, 137, 138, 142, 143], "metadata": [1, 145, 149], "11": [1, 2, 3, 4, 6, 8, 30, 34, 38, 39, 80, 121, 127, 128, 129, 151], "model_info": 1, "get_model_info": [1, 142, 167], "model_st": 1, "model_content_size_in_byt": 1, "134568911": 1, "model_content_hash_valu": 1, "f8012a4e6b5da1f556221a12160d080157039f077ab85a5f6b467a47247aad49": 1, "all_config": 1, "34": [1, 2, 6, 34, 80, 110, 111], "_name_or_path": 1, "microsoft": 1, "h384": 1, "uncas": 1, "attention_probs_dropout_prob": 1, "gradient_checkpoint": 1, "hidden_act": 1, "gelu": 1, "hidden_dropout_prob": 1, "hidden_s": 1, "initializer_rang": 1, "02": [1, 2, 8, 9, 10, 19, 30, 34, 38, 41, 80, 93, 127, 128], "intermediate_s": 1, "1536": 1, "layer_norm_ep": 1, "1e": [1, 3], "max_position_embed": 1, "512": [1, 4], "num_attention_head": 1, "num_hidden_lay": 1, "pad_token_id": 1, "position_embedding_typ": 1, "absolut": [1, 74, 126, 129], "transformers_vers": 1, "type_vocab_s": 1, "use_cach": 1, "vocab_s": 1, "30522": 1, "created_tim": 1, "1691611630758": 1, "last_updated_tim": 1, "last_registered_tim": 1, "1691611634683": 1, "last_deployed_tim": 1, "total_chunk": 1, "planning_worker_node_count": 1, "current_worker_node_count": 1, "planning_worker_nod": 1, "deploy_to_all_nod": 1, "input_sent": [1, 3], "sentence1": 1, "sentence2": 1, "embedding_output": 1, "generate_embed": [1, 3, 141, 167], "sentence_embed": 1, "data_typ": [1, 141], "float32": 1, "07004598": 1, "094030194": 1, "0294691": 1, "0063353553": 1, "037177887": 1, "003469634": 1, "06973778": 1, "041374724": 1, "052779537": 1, "019993527": 1, "049499035": 1, "044301376": 1, "050956327": 1, "091860786": 1, "039252494": 1, "028518932": 1, "018059155": 1, "09713085": 1, "034800865": 1, "04408874": 1, "025124485": 1, "06829839": 1, "02107054": 1, "073358156": 1, "016343018": 1, "016885223": 1, "0073822327": 1, "069800906": 1, "01917283": 1, "127567": 1, "002833644": 1, "07662087": 1, "010953967": 1, "040559784": 1, "047134362": 1, "02965514": 1, "025424507": 1, "023706196": 1, "015665805": 1, "0002845036": 1, "02252695": 1, "073676944": 1, "05547299": 1, "018682828": 1, "03940338": 1, "024852037": 1, "04160006": 1, "0012200836": 1, "012104877": 1, "05119714": 1, "07446669": 1, "055452716": 1, "007486106": 1, "019089257": 1, "030097323": 1, "026060726": 1, "052988816": 1, "06712463": 1, "025931384": 1, "02644008": 1, "0065706596": 1, "05588654": 1, "05347465": 1, "007984704": 1, "08091787": 1, "036647186": 1, "031903736": 1, "07397383": 1, "0065454575": 1, "034760114": 1, "009686786": 1, "016051935": 1, "04783923": 1, "0035186426": 1, "652851e": 1, "05": [1, 2, 3, 8, 19, 127, 130, 134, 151], "037315175": 1, "0050969664": 1, "0046331156": 1, "048319556": 1, "037194334": 1, "018304864": 1, "06406543": 1, "007127524": 1, "0036731854": 1, "037867695": 1, "052579854": 1, "02275424": 1, "009397553": 1, "078870915": 1, "04558915": 1, "02658195": 1, "07401964": 1, "0022031788": 1, "027502479": 1, "046129823": 1, "028674513": 1, "028122796": 1, "06055296": 1, "046777423": 1, "198897": 1, "02673153": 1, "007961458": 1, "06408687": 1, "03999538": 1, "06574333": 1, "010389742": 1, "031175155": 1, "0015405632": 1, "040537335": 1, "0026587504": 1, "020172479": 1, "08372859": 1, "0058846273": 1, "032710858": 1, "0015732804": 1, "09610316": 1, "0023569933": 1, "05984071": 1, "16500352": 1, "03679231": 1, "122917764": 1, "0018065565": 1, "043636024": 1, "041891094": 1, "009408743": 1, "08278275": 1, "12746939": 1, "016939186": 1, "012635989": 1, "14616504": 1, "051131263": 1, "0033628803": 1, "022748744": 1, "022569718": 1, "037459765": 1, "018744126": 1, "0062177675": 1, "08469717": 1, "006795277": 1, "05414359": 1, "0573888": 1, "047126096": 1, "01614229": 1, "047543816": 1, "062171623": 1, "012241133": 1, "08141003": 1, "011919791": 1, "016868353": 1, "013309039": 1, "065954946": 1, "027840674": 1, "013731638": 1, "057872113": 1, "026792012": 1, "018663734": 1, "05059098": 1, "020403482": 1, "047714923": 1, "01606342": 1, "10401474": 1, "13376766": 1, "03058641": 1, "001033993": 1, "070359856": 1, "013292278": 1, "015457728": 1, "04892655": 1, "011410854": 1, "052058097": 1, "18224768": 1, "0035982134": 1, "022464214": 1, "0030590647": 1, "019338032": 1, "00026649763": 1, "02233567": 1, "07469185": 1, "02382241": 1, "010466962": 1, "03009085": 1, "006465027": 1, "051522672": 1, "0199809": 1, "03548726": 1, "0103704315": 1, "08818128": 1, "02829264": 1, "074272595": 1, "084029905": 1, "035817306": 1, "018850243": 1, "031453986": 1, "068550915": 1, "014118737": 1, "070071295": 1, "008944256": 1, "018165134": 1, "07784688": 1, "070696145": 1, "012862558": 1, "015138121": 1, "0334761": 1, "0068311137": 1, "002638576": 1, "03638613": 1, "03143706": 1, "08959043": 1, "053561207": 1, "08690697": 1, "014789994": 1, "055373095": 1, "11275849": 1, "038676355": 1, "01777756": 1, "062403727": 1, "0830996": 1, "058959745": 1, "021466918": 1, "005259635": 1, "039675698": 1, "07005095": 1, "053564843": 1, "1060878e": 1, "32": [1, 2, 4, 6, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "0013608016": 1, "106175035": 1, "059511874": 1, "0037960887": 1, "013185141": 1, "046274804": 1, "10418073": 1, "0012341124": 1, "013150821": 1, "018092388": 1, "005424653": 1, "014040968": 1, "03679144": 1, "016286962": 1, "09607988": 1, "015155191": 1, "023281407": 1, "08310539": 1, "0006558546": 1, "0002872544": 1, "049073823": 1, "050753288": 1, "0048564966": 1, "08584042": 1, "049346182": 1, "010288551": 1, "087672256": 1, "06680062": 1, "027301554": 1, "060317975": 1, "08574496": 1, "0017309932": 1, "0041642035": 1, "13996643": 1, "0064810454": 1, "06346753": 1, "10613796": 1, "06602093": 1, "007606491": 1, "034102246": 1, "015871532": 1, "034030363": 1, "0662087": 1, "061993726": 1, "016627997": 1, "001729985": 1, "025229797": 1, "003180745": 1, "0490112": 1, "00089509884": 1, "039893012": 1, "0016668896": 1, "012777804": 1, "015382689": 1, "016362777": 1, "02404702": 1, "02143441": 1, "0911707": 1, "053739283": 1, "018560594": 1, "023284977": 1, "0031981992": 1, "0031510598": 1, "10734427": 1, "06998925": 1, "0027732535": 1, "053055596": 1, "02354699": 1, "025985928": 1, "035036538": 1, "058912467": 1, "02920474": 1, "008312963": 1, "056485146": 1, "014061096": 1, "04225053": 1, "08007323": 1, "009161725": 1, "018469293": 1, "045568734": 1, "015968522": 1, "014121509": 1, "0036195314": 1, "027108373": 1, "035869084": 1, "017504305": 1, "108702846": 1, "008362452": 1, "014823476": 1, "04874034": 1, "010967371": 1, "018752342": 1, "046599716": 1, "058064498": 1, "029174827": 1, "6263152e": 1, "33": [1, 2, 6, 8, 91, 127, 128, 151], "030307822": 1, "06679234": 1, "0005264218": 1, "045648467": 1, "10910713": 1, "016406672": 1, "0065098666": 1, "1690238": 1, "011055945": 1, "036133047": 1, "050960947": 1, "028546333": 1, "07644701": 1, "082524374": 1, "041281033": 1, "0342127": 1, "0013897946": 1, "0062635383": 1, "045143634": 1, "017067816": 1, "079229176": 1, "022634152": 1, "068493344": 1, "007873755": 1, "030855201": 1, "03661335": 1, "0154381255": 1, "041089326": 1, "05730516": 1, "063175276": 1, "08143365": 1, "07131981": 1, "03726474": 1, "058889214": 1, "049804606": 1, "03410345": 1, "066488594": 1, "014449714": 1, "022788277": 1, "035716787": 1, "035706382": 1, "046074968": 1, "005366466": 1, "0248586": 1, "025428172": 1, "010590827": 1, "0405528": 1, "065138645": 1, "00039351193": 1, "05637292": 1, "0514825": 1, "0112641435": 1, "066459976": 1, "026653022": 1, "07176415": 1, "0355379": 1, "032872733": 1, "0017282534": 1, "07933759": 1, "04971213": 1, "066491455": 1, "06070366": 1, "012733777": 1, "006001069": 1, "07083512": 1, "09897267": 1, "02352888": 1, "015548294": 1, "034146227": 1, "0247732": 1, "06027314": 1, "028832998": 1, "09044973": 1, "029630564": 1, "044647824": 1, "020695595": 1, "045139927": 1, "105178796": 1, "035747953": 1, "022011546": 1, "022424795": 1, "06875172": 1, "04150383": 1, "046235885": 1, "02588881": 1, "058203597": 1, "03171956": 1, "06430214": 1, "030310709": 1, "027002905": 1, "0028196378": 1, "044340268": 1, "032432683": 1, "11670582": 1, "014379533": 1, "0643216": 1, "011770836": 1, "032793343": 1, "04387401": 1, "038692914": 1, "013582456": 1, "026226604": 1, "007600631": 1, "027217109": 1, "03441963": 1, "08012474": 1, "054726355": 1, "0074604494": 1, "04748688": 1, "025225094": 1, "03748238": 1, "0020973468": 1, "0042126784": 1, "05753656": 1, "08447185": 1, "043337557": 1, "014264312": 1, "023134159": 1, "02947989": 1, "033630386": 1, "05907903": 1, "06964187": 1, "03533768": 1, "022372045": 1, "021929925": 1, "06226919": 1, "030993978": 1, "007610613": 1, "07694968": 1, "017912386": 1, "044359725": 1, "05673219": 1, "01552571": 1, "032636717": 1, "009579155": 1, "018426916": 1, "05479158": 1, "008909622": 1, "006345299": 1, "031336434": 1, "0058207866": 1, "008221157": 1, "058385894": 1, "047120895": 1, "005223671": 1, "06515576": 1, "0010108105": 1, "020413512": 1, "041749343": 1, "044107605": 1, "008662969": 1, "011051096": 1, "08871866": 1, "045078132": 1, "036184326": 1, "07195323": 1, "009203147": 1, "023508985": 1, "028275412": 1, "028231055": 1, "0039115297": 1, "07011834": 1, "05857326": 1, "20727783": 1, "04835618": 1, "0018830771": 1, "06611541": 1, "022906005": 1, "061623234": 1, "02123788": 1, "018174635": 1, "0050362577": 1, "023906214": 1, "0023879737": 1, "035721574": 1, "10048731": 1, "007958884": 1, "044000242": 1, "010386637": 1, "09361921": 1, "011654652": 1, "06738685": 1, "17360488": 1, "032549746": 1, "13699506": 1, "009299514": 1, "048183367": 1, "05021916": 1, "005542932": 1, "10294828": 1, "10766478": 1, "015173303": 1, "01355476": 1, "1350117": 1, "045765016": 1, "021902222": 1, "033359498": 1, "028230252": 1, "04085572": 1, "007747412": 1, "036401898": 1, "092795655": 1, "00096510054": 1, "059694264": 1, "03562055": 1, "037294004": 1, "0015283314": 1, "034953013": 1, "048806172": 1, "0059092273": 1, "060103502": 1, "00898931": 1, "022295611": 1, "022184547": 1, "049791194": 1, "049196154": 1, "037901234": 1, "053590365": 1, "007701697": 1, "0031885458": 1, "056628704": 1, "027927952": 1, "060124114": 1, "025649505": 1, "09657915": 1, "12991673": 1, "03208177": 1, "006092552": 1, "06273655": 1, "025575202": 1, "0069704982": 1, "0503692": 1, "025092859": 1, "019693008": 1, "17965682": 1, "0066510485": 1, "024963824": 1, "018071467": 1, "016473666": 1, "008775544": 1, "049499284": 1, "07836955": 1, "032525778": 1, "007377622": 1, "03200582": 1, "011032107": 1, "028064458": 1, "017632844": 1, "026994104": 1, "008085599": 1, "07062725": 1, "03446164": 1, "050107572": 1, "09331023": 1, "049584396": 1, "021610705": 1, "027137293": 1, "07193105": 1, "013025723": 1, "07407565": 1, "02058441": 1, "011435531": 1, "10216389": 1, "066884704": 1, "019413384": 1, "0076031317": 1, "036991768": 1, "0303734": 1, "0014173611": 1, "033982154": 1, "028674075": 1, "080678694": 1, "0375031": 1, "08438446": 1, "0010728774": 1, "05789914": 1, "113598056": 1, "018308552": 1, "011551412": 1, "07234886": 1, "09252421": 1, "04969506": 1, "014780675": 1, "007567542": 1, "044519085": 1, "06133406": 1, "05895338": 1, "414509e": 1, "009771958": 1, "12160779": 1, "039359365": 1, "010013683": 1, "00898449": 1, "04882902": 1, "092219874": 1, "0024215167": 1, "008333214": 1, "03851627": 1, "012913563": 1, "03204204": 1, "041664835": 1, "0009534093": 1, "10857273": 1, "024132818": 1, "021791773": 1, "101970024": 1, "009454601": 1, "026551446": 1, "05246786": 1, "06066872": 1, "01103198": 1, "08555519": 1, "048329007": 1, "015530085": 1, "08154496": 1, "0731774": 1, "024714865": 1, "05487307": 1, "07664423": 1, "009958633": 1, "012626225": 1, "12942669": 1, "02095135": 1, "071839556": 1, "112829536": 1, "05635947": 1, "009640948": 1, "04163078": 1, "037358176": 1, "029693598": 1, "0628964": 1, "053272255": 1, "012749352": 1, "009228823": 1, "01942351": 1, "004775929": 1, "036169015": 1, "012142286": 1, "01922596": 1, "9331225e": 1, "026529552": 1, "012205288": 1, "017824046": 1, "015235645": 1, "0181183": 1, "08875225": 1, "03372447": 1, "020540629": 1, "005065464": 1, "0013711171": 1, "00086961745": 1, "11509084": 1, "06752553": 1, "0014781557": 1, "05162722": 1, "024478994": 1, "027465401": 1, "04733123": 1, "07152838": 1, "033279166": 1, "007459171": 1, "05876381": 1, "040509865": 1, "023988906": 1, "08772608": 1, "003155819": 1, "020018948": 1, "041812915": 1, "0050884616": 1, "013900808": 1, "02811133": 1, "021810783": 1, "013438155": 1, "007385124": 1, "10051118": 1, "014426816": 1, "004692878": 1, "03919732": 1, "0023597397": 1, "015907336": 1, "035865597": 1, "071099125": 1, "013097632": 1, "3765136e": 1, "022041548": 1, "06963561": 1, "022240805": 1, "037175175": 1, "09121253": 1, "009112657": 1, "014528283": 1, "1540716": 1, "005560708": 1, "024977792": 1, "052556057": 1, "014630056": 1, "088896446": 1, "09537804": 1, "039953273": 1, "042290684": 1, "024341425": 1, "0096786395": 1, "04815927": 1, "03606919": 1, "05914406": 1, "009443069": 1, "06272632": 1, "0018664851": 1, "004131947": 1, "039284766": 1, "014626883": 1, "025103891": 1, "053130243": 1, "05443761": 1, "07312244": 1, "059003882": 1, "03820951": 1, "08526913": 1, "06061701": 1, "04227627": 1, "06129878": 1, "016126666": 1, "0364838": 1, "026359634": 1, "020908944": 1, "048757017": 1, "004610902": 1, "035508078": 1, "02846824": 1, "009864912": 1, "034235265": 1, "07203998": 1, "0005532816": 1, "054544747": 1, "042482726": 1, "014105883": 1, "081946984": 1, "040557213": 1, "06266559": 1, "04084731": 1, "02860638": 1, "025837963": 1, "077221215": 1, "039314423": 1, "049470052": 1, "05854972": 1, "032445546": 1, "024784891": 1, "after": [1, 3, 4, 58, 152], "want": [1, 3, 143, 168], "unload_model": [1, 148, 167], "method": [1, 2, 3, 6, 21, 25, 36, 53, 122, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 165], "node_id": [1, 147, 148], "13": [1, 2, 3, 6, 8, 19, 91, 98, 121, 129, 151], "undeploy_model_respons": 1, "undeploy_model": [1, 147, 148, 167], "stat": [1, 165], "undeploi": [1, 148, 165], "delete_model_respons": 1, "delete_model": [1, 137, 167], "_index": [1, 121], "_id": [1, 2, 6, 8, 24, 38, 57, 70, 121, 152], "_version": 1, "result": [1, 2, 3, 4, 6, 25, 42, 60, 141], "_shard": [1, 121], "success": [1, 121], "fail": [1, 2, 121, 152], "_seq_no": 1, "11203": 1, "_primary_term": 1, "2": [2, 6, 8, 9, 10, 12, 14, 18, 19, 20, 25, 26, 27, 29, 31, 34, 35, 40, 41, 49, 52, 58, 59, 61, 62, 67, 79, 80, 81, 82, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 114, 117, 121, 126, 128, 129, 131, 132, 133, 134, 140, 144, 148, 149, 150, 151, 152], "3": [2, 6, 8, 14, 18, 19, 20, 21, 26, 27, 32, 34, 40, 41, 48, 52, 56, 58, 59, 61, 62, 67, 69, 79, 80, 81, 82, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 114, 117, 121, 125, 126, 129, 131, 132, 133, 134, 135, 151, 152], "4": [2, 6, 8, 9, 10, 14, 18, 19, 26, 27, 34, 38, 39, 41, 52, 58, 59, 61, 62, 67, 79, 80, 81, 82, 87, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 114, 117, 121, 127, 128, 129, 130, 132, 134, 135, 141, 151, 152], "support": [2, 4, 6, 7, 9, 10, 13, 14, 30, 31, 33, 48, 60, 75, 76, 77, 78, 97, 112, 121, 140, 146, 150, 165], "set": [2, 6, 13, 27, 39, 51, 54, 60, 91, 116], "flight": [2, 8, 9, 10, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 37, 38, 41, 42, 44, 47, 48, 49, 52, 56, 58, 60, 64, 69, 70, 74, 75, 76, 77, 78, 87, 89, 93, 97, 109, 112, 114, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151], "oml_flight": [2, 19, 22, 23, 41, 93, 132], "type": [2, 6, 13, 14, 15, 18, 20, 25, 36, 37, 39, 49, 52, 60, 64, 88, 89, 114, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "pd_flight": 2, "opensearch_to_panda": [2, 52, 55, 114, 152, 164], "frame": [2, 6, 52, 151, 152], "avgticketpric": [2, 8, 9, 10, 11, 13, 15, 19, 22, 23, 26, 27, 29, 30, 31, 32, 33, 37, 41, 44, 47, 48, 52, 56, 60, 64, 74, 75, 76, 77, 78, 89, 109, 112, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151], "cancel": [2, 8, 11, 19, 26, 27, 29, 30, 31, 32, 33, 44, 47, 48, 56, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151], "carrier": [2, 11, 18, 24, 52, 58, 70, 87, 97, 114, 119], "dest": [2, 11, 20, 44, 49], "destairportid": [2, 11, 38], "destcitynam": [2, 11], "destcountri": [2, 9, 10, 11, 19, 29, 30, 31, 32, 33, 47, 48, 56, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "destloc": [2, 11], "destregion": [2, 11], "destweath": [2, 11], "distancekilomet": [2, 9, 10, 11], "distancemil": [2, 11], "flightdelai": [2, 11], "flightdelaymin": [2, 11, 13, 22, 23, 38, 41, 42, 132], "flightdelaytyp": [2, 11], "flightnum": [2, 11], "flighttimehour": [2, 11], "flighttimemin": [2, 11, 69], "origin": [2, 11, 15, 20, 37, 49, 64, 89], "originairportid": [2, 11, 38], "origincitynam": [2, 11], "origincountri": [2, 11], "originloc": [2, 11], "originregion": [2, 11], "originweath": [2, 11, 69], "dayofweek": [2, 8, 11, 15, 19, 22, 23, 29, 30, 31, 32, 33, 37, 41, 44, 47, 48, 56, 64, 89, 93, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151], "float64": [2, 6, 9, 10, 15, 29, 30, 31, 32, 33, 41, 44, 47, 48, 56, 59, 60, 61, 62, 64, 67, 79, 81, 82, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 117, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 152], "bool": [2, 6, 9, 10, 16, 19, 25, 27, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 44, 47, 48, 53, 56, 72, 73, 74, 75, 76, 77, 78, 85, 86, 91, 109, 112, 115, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135, 139, 143, 144, 145, 146, 149, 150, 151, 152], "int64": [2, 6, 12, 15, 36, 38, 44, 59, 61, 62, 64, 67, 79, 81, 82, 92, 102, 110, 111, 117, 119, 152], "datetime64": [2, 15, 38, 44, 64, 80, 93, 152], "n": [2, 6, 12, 15, 20, 38, 43, 44, 49, 64, 68, 80, 93, 106, 113, 152], "27": [2, 3, 6, 8, 19, 42, 93, 121, 127, 129, 130, 151], "841": [2, 8, 26, 27, 52, 151], "265642": [2, 8, 26, 27, 52, 151], "16492": 2, "326654": 2, "1030": 2, "770416": 2, "882": [2, 8, 26, 27, 52, 151], "982662": [2, 8, 26, 27, 52, 151], "8823": 2, "400140": 2, "464": [2, 6], "389481": 2, "190": [2, 8, 26, 27, 52, 151], "636904": [2, 8, 26, 27, 52, 151], "000000": [2, 6, 13, 19, 29, 30, 32, 33, 41, 60], "181": [2, 8, 26, 27, 52, 151], "694216": [2, 8, 26, 27, 52, 151], "555": 2, "737767": 2, "222": 2, "749059": 2, "730": [2, 8, 26, 27, 52, 151], "041778": [2, 8, 26, 27, 52, 151], "13358": 2, "244200": 2, "785": 2, "779071": 2, "13054": [2, 18, 49, 58, 97], "1080": 2, "446279": 2, "8058": 2, "581753": 2, "402": 2, "929088": 2, "13055": [2, 18, 49, 58, 97], "646": [2, 128], "612941": 2, "7088": 2, "598322": 2, "644": 2, "418029": 2, "13056": [2, 18, 49, 58, 97], "997": 2, "751876": 2, "10920": 2, "652972": 2, "937": 2, "540811": 2, "13057": [2, 18, 49, 58, 97], "1102": 2, "814465": 2, "18748": 2, "859647": 2, "1697": 2, "404971": 2, "13058": [2, 18, 49, 58, 97], "858": 2, "144337": 2, "16809": 2, "141923": 2, "1610": 2, "761827": 2, "13059": [2, 13, 18, 42, 58, 60, 97, 151], "19": [2, 3, 6, 19, 31, 34, 80, 99, 129, 130, 134], "note": [2, 4, 13, 24, 36, 60, 70, 118, 119, 151], "doe": [2, 4, 17, 66, 97, 121, 152], "mirror": [2, 8], "21": [2, 3, 6, 31, 32, 34, 41, 80, 93, 121, 127, 128, 129], "13049": 2, "13050": 2, "13051": 2, "13052": 2, "13053": 2, "22": [2, 3, 6, 34, 40, 80, 93, 127, 128, 129], "nbval_ignore_output": [2, 6], "0x1131744c0": 2, "24": [2, 3, 6, 19, 34, 80, 130], "os_index_field": [2, 6, 8, 24, 38, 57, 58, 70], "25": [2, 3, 6, 19, 21, 38, 40, 69, 121], "2656419677076": [2, 27, 52], "kibana": [2, 18, 52, 58, 97, 114, 119], "airlin": [2, 18, 52, 58, 97, 114, 119], "sunni": [2, 69], "2018": [2, 8, 9, 10, 19, 30, 31, 32, 33, 38, 41, 93, 127, 128, 129, 130, 151], "01": [2, 4, 6, 8, 9, 10, 19, 31, 32, 33, 38, 41, 93, 121, 127, 128, 129, 130, 151], "00": [2, 6, 8, 9, 10, 19, 33, 34, 38, 80, 93, 127, 130, 151], "9826615595518": [2, 27, 52], "logstash": [2, 18, 52, 58, 97, 114, 119], "airwai": [2, 18, 52, 58, 97, 114, 119], "clear": 2, "6369038508356": [2, 27, 52], "rain": 2, "7518761454494": 2, "04": [2, 19, 34, 41, 48, 80, 93, 127, 128, 129, 130, 134], "09": [2, 19, 34, 38, 41, 80, 93, 127, 129, 130], "8144645388556": 2, "jetbeat": [2, 18, 58, 97, 119], "hail": 2, "08": [2, 6, 19, 34, 38, 80, 127, 130], "28": [2, 6, 8, 121, 128, 151], "1443369038839": 2, "54": [2, 32, 59, 91, 93, 94, 128, 134], "26": [2, 3, 6, 61, 62, 67, 117, 121], "try": [2, 36], "attributeerror": 2, "e": [2, 4, 8, 9, 10, 12, 119, 121, 140, 152], "would": [2, 3, 4, 52, 55, 114], "scan": [2, 52, 55, 114], "scroll": [2, 52, 55, 114], "entir": [2, 6, 51, 52, 54, 55, 114, 116, 151], "explicitli": [2, 51, 54, 116], "suffici": 2, "call": [2, 3, 4, 9, 10, 21, 52, 55, 97, 114, 121, 152], "ed": 2, "ed_df": 2, "29": [2, 6, 127, 151], "41": [2, 38, 121], "57": [2, 41, 93, 129], "31": [2, 6, 7, 8, 19, 127, 130], "35": [2, 6, 19, 103, 104, 129], "frankfurt": [2, 20], "am": [2, 20, 38], "airport": [2, 20, 49], "cape": [2, 20], "town": [2, 20], "intern": [2, 3, 20, 38, 49, 121], "venic": [2, 20], "marco": [2, 4, 20], "polo": [2, 20], "napl": 2, "licenciado": [2, 49], "benito": [2, 49], "juarez": [2, 49], "pisa": [2, 49], "winnipeg": [2, 49], "jame": [2, 49], "armstrong": [2, 49], "richardson": [2, 49], "internat": 2, "itami": [2, 49], "adelaid": [2, 49], "current": [2, 4, 8, 9, 10, 13, 19, 30, 31, 33, 40, 48, 57, 60, 75, 76, 77, 78, 112, 121], "36": [2, 6, 8, 19, 34, 59, 61, 62, 67, 79, 80, 81, 82, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 110, 111, 117, 151], "typeerror": 2, "unhash": 2, "37": [2, 19, 59, 94, 151], "900": 2, "960": 2, "869736": 2, "975": 2, "812632": 2, "38": [2, 6, 34, 59, 80, 130, 134], "311": 2, "946": 2, "358410": 2, "51": [2, 8, 41, 110, 111, 130], "651": 2, "383864": 2, "03": [2, 3, 9, 10, 19, 48, 127, 134], "950": [2, 6], "907": 2, "836523": 2, "12820": 2, "909": 2, "973606": 2, "12906": 2, "983": 2, "429244": 2, "06": [2, 6, 8, 9, 10, 19, 32, 34, 48, 80, 127, 128, 130, 134], "58": [2, 34, 80, 128], "12918": 2, "1136": 2, "678150": 2, "12919": 2, "1105": 2, "211803": 2, "13013": 2, "1055": 2, "350213": 2, "68": [2, 121], "qualifi": 2, "aggreg": [2, 9, 12, 36, 57, 119, 123, 163], "std": [2, 6, 9, 10, 13, 29, 60, 163, 170], "261629e": [2, 9, 10], "07": [2, 6, 9, 10, 121, 128], "204365e": [2, 9, 10, 48], "000000e": [2, 9, 10], "000205e": [2, 9, 10], "578438e": 2, "663969e": 2, "numer": [2, 6, 13, 29, 30, 31, 32, 33, 34, 36, 47, 48, 56, 60, 75, 76, 77, 78, 112, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "43": [2, 41, 151], "578614e": [2, 9, 10], "664071e": [2, 9, 10], "45": [2, 6, 31, 39, 45, 121, 127, 130, 134], "46": [2, 6, 34, 36, 41, 80, 125, 129, 131], "628": [2, 13, 31, 60, 76], "253689": [2, 13, 31, 60], "7092": 2, "142455": 2, "511": 2, "127842": 2, "835975": [2, 31], "266": [2, 9, 10, 13, 47, 60, 91, 109], "396861": 2, "4578": [2, 9, 10], "438497": 2, "334": 2, "753952": 2, "939439": 2, "100": [2, 6, 9, 10, 13, 19, 33, 60, 78, 99, 123, 124, 130], "020528": 2, "409": 2, "893816": 2, "2459": 2, "705673": 2, "252": 2, "333192": 2, "50": [2, 6, 30, 41, 93, 129], "640": [2, 32, 41, 77], "556668": 2, "7610": 2, "330866": 2, "503": 2, "045170": 2, "75": [2, 6, 41, 93, 121], "842": [2, 41], "185470": 2, "9736": 2, "637600": 2, "720": 2, "416036": 2, "1199": [2, 13, 19, 30, 60, 75, 123, 124, 127], "729053": 2, "19881": 2, "482315": 2, "1902": 2, "902032": 2, "mai": [2, 121, 152, 163], "vari": [2, 13, 60], "due": 2, "47": [2, 13, 19, 121, 128, 130], "128494": [2, 31], "407061": [2, 47], "334664": [2, 47], "766770": 2, "939513": [2, 47], "020531": [2, 13, 19, 33, 60, 123, 124, 130], "410": 2, "008918": 2, "251": [2, 19, 133], "938710": 2, "387285": [2, 41], "148975": 2, "213490": [2, 41], "505705": 2, "729004": [2, 13, 19, 30, 60, 123, 124, 127], "901978": 2, "48": [2, 93, 128, 129], "class": [2, 8, 25, 51, 52, 57, 58, 114, 122, 151, 152, 165], "entri": [2, 25], "null": [2, 22, 23, 25], "usag": [2, 21, 25, 69], "mb": 2, "49": 2, "64": [2, 121], "000": [2, 4, 6, 129], "byte": [2, 37, 89], "storag": [2, 25], "714": 2, "numeric_onli": [2, 9, 10, 19, 29, 30, 31, 32, 33, 34, 41, 47, 48, 56, 74, 75, 76, 77, 78, 109, 112, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135], "12353": 2, "780369": 2, "360": [2, 13, 38], "715034": 2, "482422": 2, "780273": 2, "52": [2, 38, 103, 104], "53": [2, 34, 38, 59, 61, 62, 67, 79, 80, 81, 82, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 110, 111, 117, 129], "4406": 2, "853013": 2, "251168": 2, "335171": [2, 13], "518797": 2, "55": [2, 6, 40, 41, 59, 128], "142457": 2, "853010": 2, "56": [2, 121, 128, 129], "678000e": [2, 48], "754909e": 2, "280000e": 2, "181500e": 2, "112470e": 2, "674818e": 2, "703500e": [2, 48], "nuniqu": [2, 6, 125, 163, 170], "156": 2, "59": [2, 93, 127], "60": [2, 38, 42, 51, 54, 116], "se": [2, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "bd": 2, "IT": 2, "ch": 2, "zh": 2, "ru": [2, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "amu": 2, "dc": 2, "61": [2, 121], "62": [2, 121], "hist": [2, 6, 163, 170], "63": [2, 19], "oml_flights2": 2, "65": [2, 4, 6], "os_info": [2, 6, 163, 170], "os_index_pattern": [2, 6, 8, 38, 58], "is_source_field": [2, 6, 38], "map": [2, 3, 6, 15, 36, 38, 45, 58, 64, 121, 152], "capabl": [2, 6, 7, 38], "os_field_nam": [2, 6, 38], "is_sourc": [2, 6, 38], "os_dtyp": [2, 6, 38, 163, 170], "os_date_format": [2, 6, 38], "pd_dtype": [2, 6, 38], "is_search": [2, 6, 38], "is_aggregat": [2, 6, 38], "is_script": [2, 6, 38], "aggregatable_os_field_nam": [2, 6, 38], "date": [2, 7, 37, 38, 89], "strict_date_hour_minute_second": [2, 38], "keyword": [2, 6, 9, 10, 12, 36, 37, 38, 39, 89, 91, 119, 152], "integ": [2, 4, 38, 67, 98], "oper": [2, 9, 10, 14, 19, 38, 57, 59, 61, 62, 67, 79, 81, 82, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 117, 145, 146, 149, 150, 165], "task": [2, 3, 4, 6, 38, 165], "boolean_filt": [2, 6, 38], "must": [2, 6, 8, 9, 10, 38, 40, 45, 57], "term": [2, 6, 38, 119], "sort_field": [2, 6, 38], "_doc": [2, 6, 26, 27, 38], "size": [2, 4, 6, 8, 38, 121, 163, 170], "sort_param": [2, 6, 38], "desc": [2, 6, 38], "_sourc": [2, 6, 38, 121], "bodi": [2, 6, 38, 39, 91], "post_process": [2, 6, 38], "sort_index": [2, 6, 26, 27, 38], "custom": [3, 4, 27, 121], "just": 3, "option": [3, 4, 8, 39, 43, 91, 121, 151, 165], "wai": 3, "compar": [3, 24, 70], "o": [3, 58, 121, 152], "sy": 3, "path": [3, 4, 145, 149], "append": [3, 4, 121, 152], "abspath": 3, "join": 3, "futurewarn": 3, "tracerwarn": 3, "torch": [3, 4, 168], "tensor": 3, "ml_model": [3, 4], "sentencetransformermodel": [3, 4, 169], "mlcommon": [3, 4, 5, 7, 165], "later": [3, 4, 6], "tqdm": [3, 4], "auto": 3, "tqdmwarn": 3, "iprogress": 3, "jupyt": 3, "ipywidget": 3, "readthedoc": 3, "io": [3, 165], "en": 3, "stabl": 3, "user_instal": 3, "html": [3, 51], "autonotebook": 3, "notebook_tqdm": 3, "save_as_pt": [3, 169], "your": [3, 4, 6, 7, 20, 49], "filesystem": 3, "document": [3, 4, 7, 12, 43, 57], "msmarco": [3, 168], "distilbert": [3, 168], "base": [3, 4, 12, 20, 44, 49, 58, 168], "ta": [3, 168], "b": [3, 4, 121, 152, 168], "co": [3, 4, 168], "string": [3, 6, 9, 10, 39, 91, 116, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "direct": 3, "dummi": 3, "check": [3, 6, 39, 91], "folder_path": [3, 4], "pre_trained_model": 3, "overwrit": [3, 4, 152], "small": [3, 4], "modeling_distilbert": 3, "223": 3, "constant": 3, "safe": 3, "function": [3, 7, 9, 10, 20, 39, 49, 91, 123, 124, 165], "out": [3, 4, 25, 119], "variabl": [3, 4], "caus": [3, 121, 152], "incorrect": [3, 25, 40], "mask": [3, 72, 73, 85, 86], "finfo": 3, "score": [3, 4], "dtype": [3, 6, 11, 12, 18, 22, 23, 25, 26, 29, 30, 31, 32, 33, 36, 37, 41, 44, 47, 48, 52, 56, 58, 59, 60, 61, 62, 67, 79, 80, 81, 82, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 114, 116, 117, 119, 121, 126, 127, 128, 129, 130, 131, 133, 134, 135, 152, 163, 170], "min": [3, 6, 9, 10, 13, 19, 60, 123, 124, 163, 170], "help": [3, 4], "make_model_config_json": [3, 4, 169], "commons_model_config": [3, 4], "folder": [3, 4], "yourself": 3, "descript": [3, 13, 60, 165], "port": 3, "paragraph": 3, "768": 3, "dimension": [3, 8, 45, 107], "dens": 3, "vector": [3, 6], "space": [3, 4], "optim": [3, 4], "semant": [3, 4], "search": [3, 4, 17, 38, 39, 66, 91, 119, 121], "either": [3, 9, 10, 17, 66], "approach": [3, 12], "so": [3, 4, 57, 58, 145, 146, 149, 150, 152, 163], "model_serving_framework": 3, "text_embedding_model_exampl": 3, "ml_commons_register_api": 3, "relat": [3, 4, 121, 143], "integr": 3, "demo_ml_commons_integr": 3, "model_config_path_torch": 3, "b397ae99ef3c27ba2ea080428ba695ba732da90a9367e77383b55ec0b191903": 3, "4djw4okb2ly7dmqct7xp": 3, "upload": [3, 5, 7, 145, 146, 165, 168], "4tjw4okb2ly7dmqcervn": 3, "save_as_onnx": [3, 169], "model_path_onnx": 3, "opset": 3, "load": [3, 57, 151, 165], "pipelin": 3, "framework": [3, 145, 149], "pytorch": [3, 4], "cu117": 3, "input_id": 3, "batch": [3, 4], "sequenc": [3, 4, 17, 39, 66], "attention_mask": 3, "output_0": 3, "ensur": 3, "correct": [3, 40], "order": [3, 6, 20, 39, 49, 91, 118, 121], "head_mask": 3, "present": 3, "pooling_mod": 3, "cl": 3, "normalize_result": 3, "model_config_path_onnx": 3, "81c950d07eaa21705dd94cec0f127efec42844cd1995502452764777460517d4": 3, "49jz4okb2ly7dmqcnrwd": 3, "5njz4okb2ly7dmqcw7xa": 3, "embedding_output_torch": 3, "data_torch": 3, "embedding_output_onnx": 3, "data_onnx": 3, "signific": [3, 151], "assert_allclos": 3, "rtol": 3, "atol": 3, "techniqu": 4, "obtain": 4, "deep": 4, "built": 4, "power": [4, 7, 92, 102], "shown": 4, "improv": 4, "art": 4, "disciplin": 4, "lot": [4, 25, 57], "Such": 4, "often": 4, "hard": 4, "languag": 4, "circumv": 4, "focu": 4, "retriev": 4, "corpu": 4, "long": [4, 6, 152], "pair": [4, 26, 27], "relev": 4, "absenc": 4, "sqg": 4, "human": 4, "thu": 4, "fact": 4, "beat": 4, "sinc": [4, 6, 144, 148, 149, 150], "specif": [4, 39, 119], "guid": [4, 42], "comput": [4, 41, 93, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 165], "recommend": [4, 7], "gpu": 4, "ec2": 4, "p3": 4, "8xlarg": 4, "16xlarg": 4, "script": [4, 168], "proper": 4, "environ": 4, "urllib": 4, "urlretriev": 4, "artifact": 4, "amazon": 4, "gpt": 4, "gpt2_xl_sqg": 4, "0": [4, 7, 8, 9, 10, 13, 14, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 36, 39, 41, 47, 52, 56, 58, 59, 61, 62, 66, 67, 69, 79, 80, 81, 82, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 114, 117, 121, 123, 124, 126, 128, 130, 132, 133, 134, 135, 144, 148, 149, 150, 151, 152, 168], "httpmessag": 4, "0x10bdbe940": 4, "acceler": 4, "detoxifi": 4, "boto3": 4, "load_dataset": 4, "gc": 4, "cuda": 4, "empty_cach": 4, "myselect": 4, "is_select": 4, "passage_text": 4, "argmax": 4, "There": 4, "local": [4, 6, 140], "jsonl": 4, "index_nam": [4, 51, 54], "purpos": 4, "ms_marco": 4, "v1": [4, 168], "df": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 56, 59, 60, 61, 62, 64, 67, 69, 70, 79, 81, 82, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 117, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "from_dict": 4, "valid": [4, 121], "appli": [4, 9, 10, 17, 21, 39, 40, 66], "lambda": 4, "axi": [4, 9, 10, 14, 17, 22, 23, 43, 66], "full": [4, 25, 39, 91], "set_opt": 4, "max_column": 4, "expand_frame_repr": 4, "max_colwidth": 4, "real": 4, "pretend": 4, "sample_passag": 4, "ss": 4, "three_step_queri": 4, "generate_synthetic_queri": 4, "num_machin": 4, "tokenize_data": 4, "tokenizer_max_length": 4, "300": 4, "total_queri": 4, "numseq": 4, "num_gpu": 4, "toxic_cutoff": 4, "tokens_to_word_ratio": 4, "action": 4, "being": [4, 6, 27], "cell": [4, 12], "elabor": 4, "them": 4, "form": 4, "consum": 4, "amount": 4, "xl": 4, "gpt2": 4, "special": 4, "startoftext": 4, "qry": 4, "begin": [4, 6], "respect": [4, 6], "process": 4, "pass": [4, 6, 9, 10, 39, 91], "subsequ": 4, "5b": 4, "paramet": [4, 6, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "ask": [4, 6], "question": [4, 6], "publicli": 4, "onc": 4, "ideal": [4, 21], "lead": 4, "around": 4, "less": 4, "divisor": 4, "float": [4, 37, 41, 43, 61, 62, 74, 75, 76, 77, 78, 89, 93, 106, 109, 112, 117, 120, 132], "switch": [4, 7], "v": 4, "word": 4, "truncat": 4, "phase": 4, "most": 4, "split": [4, 25], "200": [4, 59, 91, 94], "ratio": 4, "667": 4, "wikipedia": 4, "domain": 4, "could": [4, 97], "know": 4, "singl": [4, 9, 10, 12, 21, 39, 93], "instanc": [4, 97], "least": 4, "progress": [4, 151], "bar": 4, "per": 4, "empir": 4, "better": 4, "diminish": 4, "infer": [4, 50, 121], "increas": 4, "remov": [4, 14, 27, 30, 31, 32, 33, 41, 47, 48, 56, 121, 126, 127, 128, 129, 130, 131, 133, 134, 135, 152], "inappropri": 4, "reject": 4, "toxic": 4, "greater": 4, "than": [4, 8, 36, 57, 119], "final": 4, "directori": 4, "restart": 4, "kernel": 4, "rerun": 4, "give": [4, 6, 25, 165], "error": [4, 14, 39, 91, 121], "custom_model": 4, "model_fil": 4, "read_queri": [4, 169], "read_path": 4, "clean_synthetic_queri": 4, "initit": 4, "export": [4, 165], "plese": 4, "visit": 4, "synthest": 4, "clean": 4, "cach": [4, 45], "befor": [4, 121, 143, 152], "free": 4, "output_model_nam": 4, "test2_model": 4, "zip_file_nam": 4, "num_epoch": 4, "verbos": [4, 25, 121], "some": [4, 6], "point": [4, 40], "maxim": 4, "dot": [4, 168], "product": [4, 6, 34], "while": 4, "irrelev": 4, "known": 4, "contrast": 4, "neg": 4, "symmetr": 4, "loss": 4, "mention": 4, "util": [4, 7, 53, 165], "send": 4, "randomli": [4, 43], "select": [4, 20, 44, 49, 165], "q": [4, 41, 93, 132], "p": 4, "within": [4, 39, 40, 118], "similarli": 4, "express": [4, 17, 22, 23, 42, 66], "c": [4, 152], "sum_": 4, "log": [4, 6], "frac": [4, 43, 106], "exp": 4, "q_i": 4, "cdot": 4, "p_i": 4, "j": 4, "p_j": 4, "right": [4, 20, 49, 59, 61, 62, 67, 79, 81, 82, 92, 110, 111, 117], "beyond": 4, "shorter": 4, "adjust": 4, "therefor": 4, "allow": [4, 6, 7], "bigger": 4, "percentil": [4, 13, 60], "argument": [4, 8, 9, 10, 13, 30, 31, 33, 36, 39, 42, 48, 60, 75, 76, 77, 78, 91, 112, 116, 119], "devic": 4, "larger": 4, "unfortun": 4, "short": 4, "feel": 4, "experi": 4, "adamw": 4, "epoch": 4, "rate": 4, "2e": 4, "schedul": 4, "linear": 4, "warmup": 4, "pars": 4, "son": 4, "arguument": 4, "format": [4, 145, 149, 168], "upload_model": [4, 149, 167], "prepar": 4, "61fd5a1425960681da49d084dca0e52fd0fabcc0f2e1c4d57c4e20e193bde483": 4, "lgfg9iubto3f8n5r8nm6": 4, "onlin": [5, 7], "retail": [5, 7], "analysi": [5, 7], "sentenc": [5, 7, 141, 165, 168], "save": [5, 7], "metric": [5, 140], "correl": [5, 140], "popul": [6, 42, 152], "csv_to_opensearch": [6, 166], "gz": 6, "os_client": [6, 8, 58, 121, 152], "os_dest_index": [6, 121, 152], "es_if_exist": 6, "replac": [6, 121, 152], "os_dropna": [6, 121, 152], "es_refresh": 6, "compress": [6, 50, 121], "gzip": 6, "index_col": [6, 121], "instanti": 6, "choos": 6, "subset": [6, 8, 17, 44, 66], "didn": 6, "access": [6, 7, 57], "countri": 6, "customerid": 6, "invoiced": 6, "invoiceno": 6, "quantiti": [6, 97], "stockcod": 6, "unitpric": 6, "offer": 6, "info": [6, 17, 66, 146, 150, 163, 165], "doubl": 6, "attribut": [6, 165], "much": 6, "unit": 6, "kingdom": 6, "17850": 6, "85123a": 6, "71053": 6, "count": [6, 9, 10, 13, 21, 25, 34, 38, 60, 119, 163], "14998": 6, "17419": 6, "21773": 6, "14999": 6, "22149": 6, "specifi": [6, 9, 10, 14, 17, 39, 43, 66, 91, 119], "2010": 6, "filter": [6, 20, 22, 23, 34, 39, 40, 41, 43, 49, 91, 132, 163, 170], "under": [6, 40], "hood": 6, "queri": [6, 12, 38, 39, 40, 45, 57, 91, 107, 163], "construct": [6, 8], "directli": [6, 21, 140], "germani": 6, "1109": 6, "12662": 6, "22809": 6, "95": 6, "1110": 6, "84347": 6, "1111": 6, "84945": 6, "85": 6, "1112": 6, "22242": 6, "1113": 6, "22244": 6, "isin": [6, 170], "84406b": 6, "84029g": 6, "84029e": 6, "combin": [6, 9, 10, 91, 123, 124], "further": [6, 145, 146, 149, 150], "90": 6, "translat": 6, "answer": 6, "what": [6, 7, 13, 26, 27, 60], "sum": [6, 9, 10, 163, 170], "111960": 6, "me": 6, "mean": [6, 9, 10, 13, 19, 60, 163, 170], "qunat": 6, "unit_pric": 6, "agg": [6, 10, 19, 163], "61548": 6, "490000": [6, 61, 62, 117], "103233": 6, "2880": 6, "990000": [6, 61, 62, 117], "9360": 6, "10729": 6, "15000": 6, "15590": 6, "776680": 6, "464000": 6, "1764": 6, "189592": 6, "930116": 6, "106214": 6, "12347": 6, "14222": 6, "689466": 6, "250000": 6, "15668": 6, "019608": 6, "510000": 6, "17218": 6, "806604": 6, "472000": 6, "212788": 6, "18239": 6, "histogram": [6, 21, 69], "bin": [6, 21, 69], "13748": 6, "22086": 6, "83": [6, 121], "15291": 6, "21733": 6, "96": [6, 13, 91], "14688": 6, "21212": 6, "102": [6, 19, 123, 124, 130], "85071b": 6, "176": [6, 59], "16029": 6, "85099c": 6, "14784": 6, "15061": 6, "22423": 6, "14785": 6, "22075": 6, "14788": 6, "17038": 6, "14974": 6, "14739": 6, "21704": 6, "72": 6, "14980": 6, "22178": 6, "258": 6, "concaten": 6, "kingdom85123a": 6, "kingdom71053": 6, "kingdom84406b": 6, "kingdom84029g": 6, "kingdom84029": 6, "14995": 6, "kingdom72349b": 6, "14996": 6, "kingdom72741": 6, "14997": 6, "kingdom22762": 6, "kingdom21773": 6, "kingdom22149": 6, "aug": 7, "2023": 7, "1": [7, 8, 9, 10, 14, 17, 18, 20, 21, 22, 23, 25, 26, 27, 30, 34, 36, 40, 41, 43, 47, 48, 52, 58, 59, 61, 62, 66, 67, 79, 80, 81, 82, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 114, 117, 121, 126, 128, 129, 132, 133, 134, 145, 149, 151, 152, 168], "link": [7, 42, 97], "sourc": [7, 8, 10, 12, 14, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 34, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 57, 58, 60, 66, 68, 71, 72, 74, 75, 76, 77, 78, 80, 85, 87, 90, 91, 93, 97, 106, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151], "repositori": 7, "client": [7, 8, 58, 121, 152], "explor": 7, "analyz": [7, 13, 39, 60, 91], "familiar": 7, "compat": [7, 44], "possibl": [7, 8, 30, 31, 32, 33, 36, 41, 47, 48, 56, 126, 127, 128, 129, 130, 131, 133, 134, 135], "exist": [7, 12, 14, 57, 85, 86, 121, 152], "structur": [7, 8, 151], "make": [7, 21], "easi": 7, "scikit": 7, "equival": [7, 14], "gener": [7, 13, 36, 43, 60, 119, 165], "resid": 7, "store": [7, 8, 145, 146, 149, 150], "re": [7, 17, 66, 118], "demo": 7, "notebook": [7, 51], "model": [7, 141, 143, 165], "licens": 7, "conduct": 7, "str": [8, 9, 10, 17, 19, 26, 27, 38, 39, 42, 50, 57, 58, 66, 90, 91, 97, 116, 121, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152], "_query_compil": [8, 58], "querycompil": [8, 57, 58, 122], "mutabl": 8, "potenti": 8, "heterogen": 8, "tabular": [8, 54], "referenc": [8, 24, 70, 151, 152], "rather": [8, 36, 119], "wildcard": [8, 58], "g": [8, 9, 10, 12, 152], "pandas_api_doc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 63, 64, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 86, 87, 93, 97, 108, 109, 112, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "import": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 52, 56, 58, 59, 60, 61, 62, 64, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "opensearch_test_cli": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 52, 56, 58, 59, 60, 61, 62, 64, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "head": [8, 26, 27, 40, 52, 59, 61, 62, 67, 79, 81, 82, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 114, 117, 151, 163, 170], "todo": [8, 12, 13, 30, 31, 33, 36, 42, 48, 57, 60, 75, 76, 77, 78, 112, 119, 121], "index_field": 8, "01t00": 8, "772": 8, "100846": 8, "159": 8, "990962": 8, "800": 8, "217104": 8, "803": 8, "015200": 8, "func": [9, 10, 123, 124], "int": [9, 10, 17, 20, 22, 23, 25, 34, 35, 39, 41, 43, 46, 49, 66, 68, 74, 75, 76, 77, 78, 80, 84, 87, 91, 93, 106, 108, 109, 112, 113, 119, 120, 132, 152], "arg": [9, 10], "kwarg": [9, 10, 39, 91], "over": [9, 10, 22, 23, 26, 27, 39], "dict": [9, 10, 121, 140, 152], "klass": [9, 10], "accept": [9, 10, 19, 123, 124], "mad": [9, 10, 163, 170], "median": [9, 10, 74, 126, 163, 170], "mode": [9, 10, 50, 163, 170], "quantil": [9, 10, 163, 170], "rank": [9, 10], "sem": [9, 10], "skew": [9, 10], "var": [9, 10, 109, 163, 170], "datatyp": [9, 10, 30, 31, 32, 33, 34, 41, 47, 48, 56, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135], "nan": [9, 10, 13, 29, 30, 31, 32, 33, 34, 41, 47, 48, 51, 54, 56, 60, 116, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135], "nat": [9, 10, 29, 30, 31, 32, 33, 34, 41, 47, 48, 56, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135], "posit": [9, 10, 20, 49], "scalar": [9, 10], "astyp": [9, 10], "8204364": [9, 10, 112], "92616288": [9, 10], "assert": [11, 24, 70], "isinst": [11, 24, 70], "na": [12, 19, 22, 23, 72, 73, 85, 86], "against": [12, 39], "ineffici": [12, 57], "altern": [12, 14], "value_count": [12, 170], "aggregat": [12, 36, 119], "tag": 12, "addit": [12, 13, 39, 42, 59, 60, 91, 94], "summari": [12, 13, 25, 38, 60], "ecommerc": [12, 14, 25, 34, 36, 39, 40, 45, 59, 61, 62, 67, 79, 80, 81, 82, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 117], "customer_first_nam": [12, 14, 25, 36, 40, 59], "geoip": [12, 25, 34, 40], "city_nam": [12, 25, 34, 40], "4675": [12, 14, 25, 45, 107], "4094": [12, 25], "statist": [13, 60], "summar": [13, 60], "central": [13, 60], "tendenc": [13, 60], "dispers": [13, 60], "distribut": [13, 60], "exclud": [13, 22, 23, 44, 60], "well": [13, 60], "mix": [13, 60], "depend": [13, 39, 60, 91], "386661": [13, 60], "743006": 13, "level": 14, "inplac": 14, "rais": [14, 39, 91, 121, 152], "multiindex": 14, "suppress": 14, "caller": 14, "email": 14, "eddi": [14, 39, 59], "underwood": 14, "famili": 14, "zzz": 14, "mari": [14, 40, 59], "bailei": 14, "gwen": [14, 59], "butler": 14, "dian": [14, 59], "chandler": 14, "weber": 14, "4670": 14, "lambert": 14, "4671": [14, 39], "jim": [14, 39], "gilbert": 14, "4672": [14, 39], "yahya": [14, 39], "rivera": 14, "4673": 14, "hampton": 14, "4674": [14, 25, 39], "jackson": [14, 39], "hopkin": 14, "goodwin": 14, "oliv": [14, 39], "rio": 14, "_os_dtype_to_pd_dtyp": [15, 64], "__doc__": [15, 64], "item": [17, 18, 43, 66, 141], "regex": [17, 66], "accord": [17, 66], "routin": [17, 66], "keep": [17, 66], "regular": [17, 27, 66], "enforc": [17, 66], "mutual": [17, 66], "exclus": [17, 66], "ex": 18, "dropna": [19, 21, 34, 121, 122, 152], "dataframegroupbi": [19, 163], "togeth": 19, "ae": [19, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "110": [19, 121, 123, 124, 130], "799911": [19, 123, 124, 130], "1126": [19, 123, 124, 127], "148682": [19, 123, 124, 127], "132": 19, "443756": 19, "817": [19, 132], "931030": 19, "125": [19, 123, 124, 130], "589394": [19, 123, 124, 130], "642822": [19, 123, 124, 127], "389603": 19, "1172": 19, "382568": 19, "AT": [19, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "1181": [19, 123, 124, 127], "835815": [19, 123, 124, 127], "tr": [19, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "307": 19, "915649": 19, "145966": [19, 123, 124, 130], "153069": 19, "1192": 19, "429932": 19, "za": [19, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "002663": [19, 123, 124, 130], "1196": [19, 123, 124, 127], "186157": [19, 123, 124, 127], "121": [19, 121], "280296": 19, "1175": 19, "709961": 19, "643": [19, 128], "956793": 19, "717949": 19, "388": 19, "828809": 19, "571429": 19, "673": 19, "551677": 19, "746154": 19, "682": 19, "197241": 19, "733333": 19, "647": 19, "158290": 19, "819936": 19, "598": 19, "063146": 19, "752014": 19, "579": [19, 132], "799066": 19, "767068": 19, "636": 19, "998605": 19, "738589": 19, "677": 19, "794078": 19, "928571": 19, "sort": [20, 26, 27, 49, 57, 118, 119], "quickli": [20, 49], "sydnei": 20, "kingsford": 20, "smith": 20, "grid": [21, 69], "xlabels": [21, 69], "xrot": [21, 69], "ylabels": [21, 69], "yrot": [21, 69], "sharex": 21, "sharei": 21, "layout": 21, "kwd": [21, 69], "deriv": [21, 69, 121], "_core": [21, 69], "hist_fram": [21, 69], "d": [21, 152], "weight": 21, "col": 21, "select_dtyp": [21, 163], "occurr": [22, 23, 40, 119], "maximum": [22, 30, 75], "oml_df": [22, 23, 34, 41, 52, 55, 132, 151, 152], "1843": 22, "109": 22, "1988": 22, "minimum": [23, 33, 78], "5454": 23, "limit": [24, 70], "buf": [25, 51, 54, 116], "stringio": 25, "max_col": [25, 51, 54], "memory_usag": 25, "show_count": 25, "concis": 25, "copi": 25, "difficult": 25, "appropri": 25, "sparsedatafram": 25, "iter": [26, 27, 121, 165], "tupl": [26, 27, 45, 107, 121, 152], "itertupl": [26, 163], "namedtupl": [26, 27], "possibli": 27, "iterrow": [27, 163], "69421554118": [27, 52], "041778346198": [27, 52], "yield": 27, "deviat": [29, 47, 74, 109, 126, 129, 133], "213": [29, 74], "35497": 29, "00000": 29, "473011": 29, "484": 29, "remaind": [30, 31, 33, 36, 48, 75, 76, 77, 78, 112, 119], "preserv": [30, 31, 32, 33, 41, 47, 48, 56, 126, 127, 128, 129, 130, 131, 133, 134, 135], "73": [30, 81, 82], "254": [31, 121], "83598": 31, "564438232": 31, "363": 32, "624776611": 32, "362667": 32, "387": 32, "021": 33, "os_siz": [34, 80, 119], "calcul": [34, 41, 80, 93, 132], "oml_ecommerc": [34, 80], "total_quant": [34, 59, 61, 62, 67, 79, 81, 82, 92, 97, 102, 107, 110, 111, 117], "customer_birth_d": [34, 36], "day_of_week": [34, 80], "taxful_total_pric": [34, 59, 61, 62, 67, 79, 81, 82, 91, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 110, 111, 117], "york": 34, "thursdai": [34, 80], "98": [34, 59, 61, 62, 67, 79, 81, 82, 91, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 110, 111, 117], "tax_amount": 34, "order_d": [34, 80], "2016": [34, 80], "definit": [35, 84], "cardin": [36, 163], "ignore_abov": 36, "256": [36, 133], "currenc": [36, 39], "debug": 38, "compil": 38, "tail": [38, 163, 170], "12608": 38, "cyeg": 38, "120": 38, "12720": 38, "bhm": 38, "255": [38, 125, 131, 133], "12725": 38, "atl": 38, "12823": 38, "ngo": 38, "12907": 38, "lim": 38, "225": 38, "match_phras": [39, 91], "must_not_match": 39, "multi_match_typ": 39, "match_only_text_field": [39, 91], "fuzzi": [39, 91], "match": [39, 91, 152], "multi_match": 39, "otherwis": [39, 46, 65, 108], "instead": [39, 91, 144, 148, 149, 150], "account": [39, 91, 121], "boolean": [39, 42, 91, 143, 145, 149], "NOT": 39, "prevent": [39, 91], "aren": [39, 91], "properli": [39, 91], "men": [39, 91], "cloth": [39, 91], "eur": 39, "accessori": [39, 91], "shoe": [39, 91], "abd": 39, "4663": 39, "samir": 39, "4667": 39, "sultan": 39, "women": [39, 91], "2310": 39, "dsl": 40, "geo": 40, "distanc": 40, "locat": 40, "geo_dist": 40, "1km": 40, "dubai": 40, "rabbia": 40, "al": 40, "robbi": 40, "nest": 40, "361": 41, "040768": 41, "296587520": 41, "637076736": 41, "658119680": 41, "expr": 42, "pandas_user_guid": 42, "2730": 42, "random_st": [43, 106], "fraction": 43, "cannot": 43, "seed": 43, "random": 43, "datetim": 44, "407": 47, "93951": 47, "20436e": 48, "1678": 48, "37035": 48, "xi": 49, "xianyang": 49, "zurich": 49, "ukrainka": 49, "air": [49, 119], "ministro": 49, "pistarini": 49, "washington": 49, "dull": 49, "path_or_buf": 50, "sep": [50, 121], "na_rep": [50, 51, 54, 116], "float_format": [50, 51, 54, 116], "index_label": 50, "w": 50, "encod": [50, 121], "quot": [50, 121], "quotechar": [50, 121], "line_termin": 50, "chunksiz": [50, 121, 152], "tupleize_col": 50, "date_format": 50, "doublequot": [50, 121], "escapechar": [50, 121], "decim": [50, 51, 54, 121], "write": 50, "comma": [50, 121], "separ": [50, 121], "col_spac": [51, 54], "formatt": [51, 54], "sparsifi": [51, 54], "justifi": [51, 54], "max_row": [51, 54, 116], "show_dimens": [51, 54], "bold_row": 51, "escap": 51, "border": 51, "table_id": 51, "render_link": 51, "render": [51, 54, 116], "tabl": 51, "scenario": [51, 54, 116], "avoid": [51, 54, 116], "accident": [51, 54, 116], "dump": [51, 54, 116], "overridden": [51, 54, 116], "Not": [52, 55, 114], "represent": [52, 55, 114, 116], "bewar": [52, 55, 114], "pd_df": [52, 151, 152], "f": [52, 114, 152], "ntype": [52, 114], "show_progress": [53, 115, 151], "convert": [53, 121, 151, 152], "line_width": 54, "consol": 54, "friendli": 54, "to_numpi": [55, 163, 170], "varianc": [56, 120, 135], "70964": [56, 120], "570234": 56, "111987": 56, "761279": 56, "76128": 56, "query_compil": [57, 122], "behaviour": 57, "slice": 57, "docvalu": 57, "discourag": 57, "advis": 57, "duplic": 57, "anoth": 57, "doc_valu": 57, "enabl": 57, "proxi": 58, "delet": [58, 121, 152, 165], "rebuilt": 58, "inconsist": 58, "wise": [59, 61, 62, 67, 79, 81, 82, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 117], "binari": [59, 61, 62, 67, 79, 81, 82, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 117, 165], "174": [59, 61, 62, 67, 79, 81, 82, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 110, 111, 117], "80": [59, 61, 62, 67, 79, 81, 82, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 110, 111, 117], "980000": [59, 79, 94, 103, 104, 110, 111], "979996": [59, 79, 94, 103, 104, 110, 111], "175": [59, 94], "81": [59, 94], "980003": [59, 79, 94, 103, 104, 110, 111], "201": 59, "82": 59, "customer_last_nam": 59, "eddieunderwood": 59, "marybailei": 59, "gwenbutl": 59, "dianechandl": 59, "eddieweb": 59, "divis": [61, 62, 67, 95, 96, 98, 105, 117], "truediv": [61, 62, 170], "99": [61, 62, 67, 117, 121], "989998": [61, 62, 117], "87": [61, 62, 67, 117], "489998": [61, 62, 117], "490002": [61, 62, 117], "draw": 69, "noqa": 69, "f401": 69, "densiti": 69, "booleanfilt": [71, 72, 73, 85, 86], "miss": [72, 73, 85, 86, 121, 152], "isna": [73, 170], "modulo": [79, 99], "959999": [81, 82], "107": [81, 82, 121], "399": [81, 82], "959991": [81, 82], "349": [81, 82], "161": [81, 82, 121], "960007": [81, 82], "mul": [82, 100, 101, 170], "notna": [86, 170], "uniqu": [87, 137, 138, 139, 141, 142, 143, 144, 147, 148, 170], "queryfilt": 91, "221": [91, 126], "234": 91, "93": 91, "239": 91, "273": 91, "214": 91, "exponenti": [92, 102], "1367": 92, "520366": 92, "2913": 92, "840351": 92, "39991": 92, "998691": 92, "30617": 92, "998905": 92, "6557": 92, "760944": 92, "289159912": 93, "031627441": 93, "256136963": 93, "844534180": 93, "div": [95, 96, 105, 170], "027042": [95, 96, 105], "018525": [95, 96, 105], "005001": [95, 96, 105], "005715": [95, 96, 105], "012349": [95, 96, 105], "new_nam": 97, "symbol": 97, "floordiv": [98, 170], "500": [98, 99, 129], "mod": [99, 170], "260006": 99, "180004": 99, "040009": 99, "150": 99, "119980": 99, "369": [100, 101], "799995": [100, 101], "539": [100, 101], "1999": [100, 101], "799957": [100, 101], "1749": [100, 101], "809": [100, 101], "800034": [100, 101], "pow": [102, 170], "int_": 102, "subtract": [103, 104, 110, 170], "sub": [103, 104, 111, 170], "198": [103, 104], "173": [103, 104], "79": [103, 104], "197": [110, 111, 121], "172": [110, 111], "78": [110, 111, 121], "oml_seri": 114, "oml_": 114, "pd_": 114, "min_row": 116, "slightli": 118, "seen": 118, "bucket": 119, "descend": 119, "should": 119, "overal": 119, "os_api_doc": 119, "3331": [119, 121], "3274": 119, "3234": 119, "3220": 119, "etl": [121, 151, 152, 164], "filepath_or_buff": 121, "os_if_exist": [121, 152], "os_refresh": [121, 152], "os_type_overrid": [121, 152], "delimit": 121, "usecol": 121, "prefix": 121, "true_valu": 121, "false_valu": 121, "skipinitialspac": 121, "skiprow": 121, "skipfoot": 121, "nrow": 121, "na_valu": 121, "keep_default_na": 121, "na_filt": 121, "skip_blank_lin": 121, "parse_d": 121, "infer_datetime_format": 121, "keep_date_col": 121, "date_pars": 121, "dayfirst": 121, "cache_d": 121, "thousand": 121, "linetermin": 121, "comment": 121, "dialect": 121, "warn_bad_lin": 121, "error_bad_lin": 121, "on_bad_lin": 121, "delim_whitespac": 121, "low_memori": 121, "memory_map": 121, "float_precis": 121, "modifi": [121, 152], "behav": [121, 152], "valueerror": [121, 152], "insert": [121, 152], "bulk": [121, 152], "es_typ": 121, "overrid": [121, 152], "churn": 121, "osclient": 121, "area": 121, "phone": 121, "plan": 121, "voic": 121, "mail": 121, "vmail": 121, "dai": 121, "minut": 121, "charg": 121, "ev": 121, "night": 121, "intl": 121, "servic": 121, "k": 121, "128": 121, "415": 121, "382": 121, "4657": 121, "ye": 121, "265": 121, "244": [121, 133], "91": 121, "oh": 121, "371": 121, "7191": 121, "123": 121, "195": [121, 126], "103": 121, "137": 121, "104": 121, "162": 121, "84": 121, "408": 121, "89": 121, "86": 121, "196": 121, "186": 121, "3328": 121, "192": [121, 126], "279": [121, 133], "3329": 121, "191": 121, "3330": 121, "510": 121, "184": 121, "139": 121, "3332": 121, "74": 121, "77": 121, "241": 121, "3333": 121, "took": 121, "timed_out": 121, "skip": 121, "hit": 121, "eq": 121, "max_scor": 121, "_score": 121, "retain": 121, "hold": 122, "au": [123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "294312": [123, 124, 130], "1197": [123, 124, 127], "632690": [123, 124, 127], "ca": [123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135], "557251": [123, 124, 130], "1198": [123, 124, 127], "852539": [123, 124, 127], "101": [123, 124, 130], "004005": [123, 124, 130], "742310": [123, 124, 127], "877190": [123, 124, 130], "621582": [123, 124, 127], "142": [123, 124, 130], "876465": [123, 124, 130], "855": [123, 124, 127], "935547": [123, 124, 127], "305": [125, 131], "377": [125, 131], "416": [125, 131], "944": [125, 131], "739": [125, 131], "1987": [125, 131], "283": [125, 131], "233": 126, "697174": 126, "189": 126, "250061": 126, "823669": 126, "202": 126, "539764": 126, "203": 126, "344696": 126, "206": 126, "431702": 126, "178": 126, "658447": 126, "863434": 126, "228": 126, "461365": 126, "162842": 126, "605": 128, "132970": 128, "152174": 128, "695652": 128, "891304443": 128, "674": 128, "827252": 128, "147541": 128, "744262": 128, "593442627": 128, "650530": 128, "175066": 128, "872679": 128, "469496094": 128, "669": 128, "558832": 128, "129808": 128, "843750": 128, "199519287": 128, "648": 128, "747109": 128, "134534": 128, "951271": 128, "165254150": 128, "662": 128, "994963": 128, "131258": 128, "832206": 128, "534506104": 128, "660": 128, "612988": 128, "149020": 128, "682353": 128, "447058838": 128, "485": 128, "253247": 128, "100000": 128, "900000": 128, "000000000": 128, "595": 128, "774391": 128, "125315": 128, "753900": 128, "456970215": 128, "053057": 128, "148410": 128, "766784": 128, "141342773": 128, "585": 129, "720490": 129, "678": 129, "447433": 129, "659": 129, "715592": 129, "689": 129, "241348": 129, "663": 129, "516057": 129, "670": 129, "714956": 129, "680": 129, "111084": 129, "441": 129, "681122": 129, "600": 129, "591525": 129, "633": 129, "935425": 129, "572": 132, "290384": 132, "578": 132, "140564": 132, "567": 132, "980560": 132, "582": 132, "618713": 132, "590": 132, "170986": 132, "811890": 132, "574": 132, "131340": 132, "852264": 132, "591": 132, "533699": 132, "877014": 132, "791": 132, "622625": 132, "793": 132, "362946": 132, "378523": 132, "766": 132, "855530": 132, "319": 132, "925979": 132, "704562": 132, "327": 132, "311007": 132, "336": 132, "839572": 132, "332": 132, "323011": 132, "314": 132, "472537": 132, "652659": 132, "298": 132, "483032": 132, "290205": 132, "024850": 132, "362137": 132, "568": 132, "323944": 132, "489746": 132, "523": 132, "890680": 132, "875500": 133, "367171": 133, "020634": 133, "903626": 133, "355811": 133, "949901": 133, "883342": 133, "381035": 133, "026411": 133, "585377": 133, "336902": 133, "961486": 133, "261": 133, "263054": 133, "341587": 133, "921980": 133, "259": 133, "696213": 133, "338140": 133, "964815": 133, "232": 133, "504297": 133, "357510": 133, "991340": 133, "267": 133, "827572": 133, "333333": 133, "191454": 133, "272": 133, "774819": 133, "331242": 133, "939469": 133, "505568": 133, "356766": 133, "948258": 133, "783612e": 134, "124": 134, "058223e": 134, "837": 134, "437872e": 134, "66": 134, "1083": 134, "785365e": 134, "1183": 134, "124173e": 134, "127": 134, "2786": 134, "899533e": 134, "97": 134, "2093": 134, "684563e": 134, "684": 134, "852532e": 134, "183804e": 134, "249": 134, "5472": 134, "819840e": 134, "783": 134, "75789": 135, "979090": 135, "130443": 135, "950549": 135, "59683": 135, "055316": 135, "125979": 135, "783429": 135, "65726": 135, "669676": 135, "144610": 135, "090013": 135, "65088": 135, "483446": 135, "113094": 135, "833562": 135, "68149": 135, "950516": 135, "116496": 135, "688139": 135, "67305": 135, "277617": 135, "114107": 135, "852666": 135, "53740": 135, "570338": 135, "127062": 135, "942132": 135, "61245": 135, "521047": 135, "094868": 135, "100420": 135, "74349": 135, "939410": 135, "109638": 135, "758700": 135, "62920": 135, "072901": 135, "126608": 135, "775609": 135, "self": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "delete_task": [138, 167], "task_id": [138, 139, 143, 144], "wait": [139, 143, 144, 145, 146, 149, 150], "until": [139, 143, 144, 145, 146, 149, 150], "predict": 140, "anomali": 140, "respons": 140, "_predict": 141, "nlp": [141, 147, 148], "properti": 141, "wait_until_task_don": 143, "done": 143, "load_model": [144, 149, 150, 167], "wait_until_load": [144, 149, 150], "break": [145, 149], "filepath": [145, 149], "expect": [145, 149], "serv": [145, 149], "onnx": [146, 150, 168], "_undeploi": [147, 148], "upload_pretrained_model": [150, 167], "signfic": 151, "stdout": 151, "10000": 151, "2020": 151, "572395": 151, "309031": 151, "pandas_to_opensearch": [151, 164], "os_verify_mapping_compat": 152, "thread_count": 152, "use_pandas_index_for_os_id": 152, "mainli": 152, "destin": 152, "refresh": 152, "field_nam": 152, "es_data_typ": 152, "verifi": 152, "schema": 152, "thread": 152, "destination_index": 152, "141": 152, "foo": 152, "20190102": 152, "h": 152, "if_exist": 152, "sync": 152, "readabl": 152, "empti": [163, 170], "ndim": [163, 170], "sampl": [163, 170], "accur": 163, "approxim": 163, "hyperloglog": 163, "exact": 163, "idxmax": 163, "idxmin": 163, "os_match": [163, 170], "os_queri": 163, "to_csv": 163, "to_html": 163, "to_str": [163, 170], "to_panda": [163, 170], "page": 165, "overview": 165, "public": 165, "expos": 165, "namespac": 165, "constructor": 165, "applic": 165, "groupbi": 165, "reindex": 165, "manipul": 165, "serial": 165, "convers": 165, "embed": 165, "unload": 165, "step": 165, "trace": 168, "few": 168, "fine": 168, "tune": 168, "distilroberta": 168, "mpnet": 168, "multi": 168, "qa": 168, "paraphras": 168, "l3": 168, "multilingu": 168, "load_training_data": 169, "set_up_accelerate_config": 169, "train_model": 169, "zip_model": 169, "multipli": 170, "divid": 170, "radd": 170, "rsub": 170, "rsubtract": 170, "rmul": 170, "rmultipli": 170, "rdiv": 170, "rdivid": 170, "rtruediv": 170, "rfloordiv": 170, "rmod": 170, "rpow": 170, "renam": 170, "isnul": 170, "notnul": 170}, "objects": {"": [[7, 0, 0, "-", "opensearch_py_ml"]], "opensearch_py_ml": [[8, 1, 1, "", "DataFrame"], [57, 1, 1, "", "Index"], [58, 1, 1, "", "Series"]], "opensearch_py_ml.DataFrame": [[9, 2, 1, "", "agg"], [10, 2, 1, "", "aggregate"], [11, 3, 1, "", "columns"], [12, 2, 1, "", "count"], [13, 2, 1, "", "describe"], [14, 2, 1, "", "drop"], [15, 3, 1, "", "dtypes"], [16, 3, 1, "", "empty"], [17, 2, 1, "", "filter"], [18, 2, 1, "", "get"], [19, 2, 1, "", "groupby"], [20, 2, 1, "", "head"], [21, 2, 1, "", "hist"], [22, 2, 1, "", "idxmax"], [23, 2, 1, "", "idxmin"], [24, 3, 1, "", "index"], [25, 2, 1, "", "info"], [26, 2, 1, "", "iterrows"], [27, 2, 1, "", "itertuples"], [28, 2, 1, "", "keys"], [29, 2, 1, "", "mad"], [30, 2, 1, "", "max"], [31, 2, 1, "", "mean"], [32, 2, 1, "", "median"], [33, 2, 1, "", "min"], [34, 2, 1, "", "mode"], [35, 3, 1, "", "ndim"], [36, 2, 1, "", "nunique"], [37, 3, 1, "", "os_dtypes"], [38, 2, 1, "", "os_info"], [39, 2, 1, "", "os_match"], [40, 2, 1, "", "os_query"], [41, 2, 1, "", "quantile"], [42, 2, 1, "", "query"], [43, 2, 1, "", "sample"], [44, 2, 1, "", "select_dtypes"], [45, 3, 1, "", "shape"], [46, 3, 1, "", "size"], [47, 2, 1, "", "std"], [48, 2, 1, "", "sum"], [49, 2, 1, "", "tail"], [50, 2, 1, "", "to_csv"], [51, 2, 1, "", "to_html"], [52, 2, 1, "", "to_numpy"], [53, 2, 1, "", "to_pandas"], [54, 2, 1, "", "to_string"], [55, 3, 1, "", "values"], [56, 2, 1, "", "var"]], "opensearch_py_ml.Series": [[59, 2, 1, "", "add"], [60, 2, 1, "", "describe"], [61, 2, 1, "", "div"], [62, 2, 1, "", "divide"], [63, 3, 1, "", "dtype"], [64, 3, 1, "", "dtypes"], [65, 3, 1, "", "empty"], [66, 2, 1, "", "filter"], [67, 2, 1, "", "floordiv"], [68, 2, 1, "", "head"], [69, 2, 1, "", "hist"], [70, 3, 1, "", "index"], [71, 2, 1, "", "isin"], [72, 2, 1, "", "isna"], [73, 2, 1, "", "isnull"], [74, 2, 1, "", "mad"], [75, 2, 1, "", "max"], [76, 2, 1, "", "mean"], [77, 2, 1, "", "median"], [78, 2, 1, "", "min"], [79, 2, 1, "", "mod"], [80, 2, 1, "", "mode"], [81, 2, 1, "", "mul"], [82, 2, 1, "", "multiply"], [83, 3, 1, "", "name"], [84, 3, 1, "", "ndim"], [85, 2, 1, "", "notna"], [86, 2, 1, "", "notnull"], [87, 2, 1, "", "nunique"], [88, 3, 1, "", "os_dtype"], [89, 3, 1, "", "os_dtypes"], [90, 2, 1, "", "os_info"], [91, 2, 1, "", "os_match"], [92, 2, 1, "", "pow"], [93, 2, 1, "", "quantile"], [94, 2, 1, "", "radd"], [95, 2, 1, "", "rdiv"], [96, 2, 1, "", "rdivide"], [97, 2, 1, "", "rename"], [98, 2, 1, "", "rfloordiv"], [99, 2, 1, "", "rmod"], [100, 2, 1, "", "rmul"], [101, 2, 1, "", "rmultiply"], [102, 2, 1, "", "rpow"], [103, 2, 1, "", "rsub"], [104, 2, 1, "", "rsubtract"], [105, 2, 1, "", "rtruediv"], [106, 2, 1, "", "sample"], [107, 3, 1, "", "shape"], [108, 3, 1, "", "size"], [109, 2, 1, "", "std"], [110, 2, 1, "", "sub"], [111, 2, 1, "", "subtract"], [112, 2, 1, "", "sum"], [113, 2, 1, "", "tail"], [114, 2, 1, "", "to_numpy"], [115, 2, 1, "", "to_pandas"], [116, 2, 1, "", "to_string"], [117, 2, 1, "", "truediv"], [118, 2, 1, "", "unique"], [119, 2, 1, "", "value_counts"], [120, 2, 1, "", "var"]], "opensearch_py_ml.etl": [[121, 4, 1, "", "csv_to_opensearch"], [151, 2, 1, "", "opensearch_to_pandas"], [152, 2, 1, "", "pandas_to_opensearch"]], "opensearch_py_ml.groupby": [[122, 1, 1, "", "DataFrameGroupBy"]], "opensearch_py_ml.groupby.DataFrameGroupBy": [[123, 2, 1, "", "agg"], [124, 2, 1, "", "aggregate"], [125, 2, 1, "", "count"], [126, 2, 1, "", "mad"], [127, 2, 1, "", "max"], [128, 2, 1, "", "mean"], [129, 2, 1, "", "median"], [130, 2, 1, "", "min"], [131, 2, 1, "", "nunique"], [132, 2, 1, "", "quantile"], [133, 2, 1, "", "std"], [134, 2, 1, "", "sum"], [135, 2, 1, "", "var"]], "opensearch_py_ml.ml_commons.MLCommonClient": [[137, 4, 1, "", "delete_model"], [138, 4, 1, "", "delete_task"], [139, 4, 1, "", "deploy_model"], [140, 4, 1, "", "execute"], [141, 4, 1, "", "generate_embedding"], [142, 4, 1, "", "get_model_info"], [143, 4, 1, "", "get_task_info"], [144, 4, 1, "", "load_model"], [145, 4, 1, "", "register_model"], [146, 4, 1, "", "register_pretrained_model"], [147, 4, 1, "", "undeploy_model"], [148, 4, 1, "", "unload_model"], [149, 4, 1, "", "upload_model"], [150, 4, 1, "", "upload_pretrained_model"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"demo": [0, 1, 2, 3, 4, 5, 6], "notebook": [0, 1, 2, 3, 4, 5, 6], "metric": 0, "correl": 0, "model": [0, 1, 3, 4, 5, 137, 139, 142, 144, 145, 146, 147, 148, 149, 150, 167, 168, 169], "test": 0, "download": [0, 1, 2, 3, 4, 6], "introduct": [0, 4], "step": [0, 1, 2, 3, 4, 6, 169], "0": [0, 1, 2, 3, 6], "import": [0, 1, 2, 3, 4, 6], "1": [0, 1, 2, 3, 4, 6], "set": [0, 1, 3, 4], "up": [0, 1, 3, 4], "client": [0, 1, 2, 3, 4, 6], "defin": [0, 4], "helper": [0, 4], "function": [0, 2, 4, 163, 164, 170], "2": [0, 1, 3, 4], "prepar": 0, "data": [0, 2, 4, 5, 6, 163, 170], "3": [0, 1, 3, 4], "4": [0, 1, 3, 4], "result": 0, "visual": 0, "mlcommon": [1, 167], "integr": [1, 5], "packag": [1, 3, 4], "upload": [1, 4, 149, 150, 167], "nlp": 1, "from": 1, "local": 1, "file": [1, 166], "opensearch": [1, 3, 4, 7, 163, 164, 170], "cluster": [1, 4], "load": [1, 4, 144, 167], "get": [1, 2, 6, 7, 18, 142, 143, 167], "task": [1, 138, 143, 167], "5": [1, 3, 4], "gener": [1, 3, 4, 141, 164, 167], "sentenc": [1, 3, 4, 153, 169], "embed": [1, 3, 141, 167], "6": 1, "unload": [1, 148, 167], "7": 1, "delet": [1, 137, 138, 167], "datafram": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 163], "setup": [2, 6], "compar": 2, "similar": 2, "differ": 2, "between": 2, "panda": [2, 4, 5, 164], "v": 2, "opensearch_py_ml": [2, 57], "attribut": [2, 163, 170], "underli": [2, 163, 170], "column": [2, 6, 11], "dtype": [2, 15, 63, 64], "select_dtyp": [2, 44], "empti": [2, 16, 65], "shape": [2, 45, 107], "index": [2, 6, 24, 57, 70, 163, 170], "valu": [2, 55], "iter": [2, 163, 170], "head": [2, 6, 20, 68], "tail": [2, 6, 49, 113], "kei": [2, 28], "queri": [2, 4, 42], "boolean": [2, 6], "applic": [2, 163], "groupbi": [2, 19, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 163], "window": [2, 163], "agg": [2, 9, 123], "comput": [2, 163, 170], "descript": [2, 6, 163, 170], "stat": [2, 163, 170], "count": [2, 12, 125], "describ": [2, 13, 60], "info": [2, 25, 142, 143, 167], "max": [2, 30, 75, 127], "min": [2, 33, 78, 130], "mean": [2, 31, 76, 128], "sum": [2, 48, 112, 134], "trace": [3, 5], "transform": [3, 4, 153, 169], "save": [3, 4], "torchscript": 3, "format": 3, "regist": [3, 145, 146, 167], "onnx": 3, "train": [4, 5, 160, 168, 169], "synthet": 4, "passag": 4, "convert": 4, "list": 4, "string": 4, "instanti": 4, "an": 4, "object": 4, "class": 4, "synthetic_query_gener": 4, "thi": 4, "i": 4, "how": 4, "sampl": [4, 43, 106], "look": 4, "like": [4, 5], "read": 4, "fine": 4, "tune": 4, "hug": 4, "face": 4, "exampl": [5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 52, 56, 58, 59, 60, 61, 62, 64, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "explor": 5, "ml": [5, 7], "common": 5, "plugin": 5, "In": 5, "hous": 5, "python": 5, "base": 5, "onlin": 6, "retail": 6, "analysi": 6, "start": [6, 7], "select": [6, 163, 170], "aggreg": [6, 10, 124], "statist": 6, "arithmet": 6, "oper": [6, 170], "py": 7, "machin": 7, "learn": 7, "back": 7, "instal": 7, "paramet": [8, 9, 10, 14, 17, 18, 19, 20, 22, 23, 26, 27, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 47, 48, 49, 56, 58, 59, 61, 62, 66, 67, 79, 80, 81, 82, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 117, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "see": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 63, 64, 66, 70, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 86, 87, 93, 97, 108, 109, 112, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "also": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 63, 64, 66, 70, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 86, 87, 93, 97, 108, 109, 112, 114, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "return": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 56, 59, 60, 61, 62, 64, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152], "drop": 14, "filter": [17, 66], "note": [17, 21, 25, 45, 58, 66, 69, 107, 121], "hist": [21, 69], "idxmax": 22, "idxmin": 23, "iterrow": 26, "yield": 26, "itertupl": 27, "mad": [29, 74, 126], "median": [32, 77, 129], "mode": [34, 80], "ndim": [35, 84], "nuniqu": [36, 87, 131], "os_dtyp": [37, 88, 89], "os_info": [38, 90], "os_match": [39, 91], "os_queri": 40, "quantil": [41, 93, 132], "size": [46, 108], "std": [47, 109, 133], "to_csv": 50, "to_html": 51, "to_numpi": [52, 114], "to_panda": [53, 115], "to_str": [54, 116], "var": [56, 120, 135], "seri": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 170], "add": 59, "div": 61, "divid": 62, "floordiv": 67, "isin": 71, "isna": 72, "isnul": 73, "mod": 79, "mul": 81, "multipli": 82, "name": 83, "notna": 85, "notnul": 86, "pow": 92, "radd": 94, "rdiv": 95, "rdivid": 96, "renam": 97, "rfloordiv": 98, "rmod": 99, "rmul": 100, "rmultipli": 101, "rpow": 102, "rsub": 103, "rsubtract": 104, "rtruediv": 105, "sub": 110, "subtract": 111, "truediv": 117, "uniqu": 118, "value_count": 119, "csv_to_opensearch": 121, "other": 121, "dataframegroupbi": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "deploi": [139, 167], "execut": [140, 167], "pretrain": [146, 150, 167], "undeploi": [147, 167], "opensearch_to_panda": 151, "pandas_to_opensearch": 152, "sentencetransformermodel": [154, 155, 156, 157, 158, 159, 160, 161, 162], "load_training_data": 154, "make_model_config_json": 155, "read_queri": 156, "save_as_onnx": 157, "save_as_pt": 158, "set_up_accelerate_config": 159, "train_model": 161, "zip_model": 162, "constructor": [163, 169, 170], "reindex": [163, 170], "label": [163, 170], "manipul": [163, 170], "plot": [163, 170], "serial": [163, 170], "io": [163, 170], "convers": [163, 170], "util": 164, "api": 165, "refer": 165, "input": 166, "output": 166, "flat": 166, "support": 167, "pre": 168, "option": 169, "export": 169, "config": 169, "binari": 170}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Demo Notebook for Metrics Correlation Model Testing": [[0, "Demo-Notebook-for-Metrics-Correlation-Model-Testing"]], "Download notebook": [[0, "Download-notebook"], [1, "Download-notebook"], [2, "Download-notebook"], [3, "Download-notebook"], [4, "Download-notebook"]], "Introduction": [[0, "Introduction"], [4, "Introduction"]], "Step 0: Imports": [[0, "Step-0:-Imports"], [2, "Step-0:-Imports"], [6, "Step-0:-Imports"]], "Step 1: Set up clients and define helper functions": [[0, "Step-1:-Set-up-clients-and-define-helper-functions"]], "Step 2: Preparing data": [[0, "Step-2:-Preparing-data"]], "Step 3: Metrics correlation": [[0, "Step-3:-Metrics-correlation"]], "Step 4: Result visualization": [[0, "Step-4:-Result-visualization"]], "Demo Notebook for MLCommons Integration": [[1, "Demo-Notebook-for-MLCommons-Integration"]], "Step 0: Import packages and set up client": [[1, "Step-0:-Import-packages-and-set-up-client"], [3, "Step-0:-Import-packages-and-set-up-client"]], "Step 1: Upload NLP model from local file to Opensearch cluster": [[1, "Step-1:-Upload-NLP-model-from-local-file-to-Opensearch-cluster"]], "Step 2: Load Model": [[1, "Step-2:-Load-Model"]], "Step 3: Get Task": [[1, "Step-3:-Get-Task"]], "Step 4: Get Model": [[1, "Step-4:-Get-Model"]], "Step 5: Generate Sentence Embedding": [[1, "Step-5:-Generate-Sentence-Embedding"], [3, "Step-5:-Generate-Sentence-Embedding"]], "Step 6: Unload Model": [[1, "Step-6:-Unload-Model"]], "Step 7: Delete Model": [[1, "Step-7:-Delete-Model"]], "Demo Notebook for Dataframe": [[2, "Demo-Notebook-for-Dataframe"]], "Step 1: Setup clients": [[2, "Step-1:-Setup-clients"], [6, "Step-1:-Setup-clients"]], "Comparing similarities and differences between panda dataframe vs opensearch_py_ml dataframe": [[2, "Comparing-similarities-and-differences-between-panda-dataframe-vs-opensearch_py_ml-dataframe"]], "Attributes and underlying data": [[2, "Attributes-and-underlying-data"]], "DataFrame.columns": [[2, "DataFrame.columns"], [11, "dataframe-columns"]], "DataFrame.dtypes": [[2, "DataFrame.dtypes"], [15, "dataframe-dtypes"]], "DataFrame.select_dtypes": [[2, "DataFrame.select_dtypes"], [44, "dataframe-select-dtypes"]], "DataFrame.empty": [[2, "DataFrame.empty"], [16, "dataframe-empty"]], "DataFrame.shape": [[2, "DataFrame.shape"], [45, "dataframe-shape"]], "DataFrame.index": [[2, "DataFrame.index"], [24, "dataframe-index"]], "DataFrame.values": [[2, "DataFrame.values"], [55, "dataframe-values"]], "Indexing, iteration": [[2, "Indexing,-iteration"]], "DataFrame.head": [[2, "DataFrame.head"], [20, "dataframe-head"]], "DataFrame.tail": [[2, "DataFrame.tail"], [49, "dataframe-tail"]], "DataFrame.keys": [[2, "DataFrame.keys"], [28, "dataframe-keys"]], "DataFrame.get": [[2, "DataFrame.get"], [18, "dataframe-get"]], "DataFrame.query": [[2, "DataFrame.query"], [42, "dataframe-query"]], "Boolean indexing query": [[2, "Boolean-indexing-query"]], "Function application, GroupBy & window": [[2, "Function-application,-GroupBy-&-window"]], "DataFrame.aggs": [[2, "DataFrame.aggs"]], "Computations / descriptive stats": [[2, "Computations-/-descriptive-stats"]], "DataFrame.count": [[2, "DataFrame.count"], [12, "dataframe-count"]], "DataFrame.describe": [[2, "DataFrame.describe"], [13, "dataframe-describe"]], "DataFrame.info": [[2, "DataFrame.info"], [25, "dataframe-info"]], "DataFrame.max, DataFrame.min, DataFrame.mean, DataFrame.sum": [[2, "DataFrame.max,-DataFrame.min,-DataFrame.mean,-DataFrame.sum"]], "max": [[2, "max"]], "min": [[2, "min"]], "mean": [[2, "mean"]], "sum": [[2, "sum"]], "Demo Notebook to trace Sentence Transformers model": [[3, "Demo-Notebook-to-trace-Sentence-Transformers-model"]], "Step 1: Save model in torchScript format": [[3, "Step-1:-Save-model-in-torchScript-format"]], "Step 2: Register the saved torchScript model in Opensearch": [[3, "Step-2:-Register-the-saved-torchScript-model-in-Opensearch"]], "Step 3: Save model in Onnx format": [[3, "Step-3:-Save-model-in-Onnx-format"]], "Step 4: Register the saved Onnx model in Opensearch": [[3, "Step-4:-Register-the-saved-Onnx-model-in-Opensearch"]], "Demo Notebook for Sentence Transformer Model Training, Saving and Uploading to OpenSearch": [[4, "Demo-Notebook-for-Sentence-Transformer-Model-Training,-Saving-and-Uploading-to-OpenSearch"]], "Synthetic query generation": [[4, "Synthetic-query-generation"]], "Step 1: Import packages, set up client and define helper functions": [[4, "Step-1:-Import-packages,-set-up-client-and-define-helper-functions"]], "Step 2: Import the data/passages for synthetic query generation": [[4, "Step-2:-Import-the-data/passages-for-synthetic-query-generation"]], "2.1) Load the data and convert into a pandas dataframe": [[4, "2.1)-Load-the-data-and-convert-into-a-pandas-dataframe"]], "2.2) Convert the data into a list of strings and instantiate an object of the class Synthetic_Query_Generation": [[4, "2.2)-Convert-the-data-into-a-list-of-strings-and-instantiate-an-object-of-the-class-Synthetic_Query_Generation"]], "Step 3: Generate synthetic queries": [[4, "Step-3:-Generate-synthetic-queries"]], "This is how the sample queries look like,": [[4, "This-is-how-the-sample-queries-look-like,"]], "Step 4: Read synthetic queries and train/fine-tune a hugging face sentence transformer model on synthetic data": [[4, "Step-4:-Read-synthetic-queries-and-train/fine-tune-a-hugging-face-sentence-transformer-model-on-synthetic-data"]], "Step 5: Upload the model to OpenSearch cluster": [[4, "Step-5:-Upload-the-model-to-OpenSearch-cluster"]], "Examples": [[5, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [16, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [44, "examples"], [45, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [52, "examples"], [56, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [64, "examples"], [67, "examples"], [69, "examples"], [70, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [87, "examples"], [89, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [107, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [114, "examples"], [117, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [151, "examples"], [152, "examples"]], "Demo notebooks for Data Exploration Panda like DataFrame": [[5, "demo-notebooks-for-data-exploration-panda-like-dataframe"]], "Demo notebooks for Model Training and Tracing": [[5, "demo-notebooks-for-model-training-and-tracing"]], "Demo notebooks for ML Commons plugin integration": [[5, "demo-notebooks-for-ml-commons-plugin-integration"]], "Demo Notebooks for In-house python based models": [[5, "demo-notebooks-for-in-house-python-based-models"]], "Demo Notebook for Online Retail Analysis": [[6, "Demo-Notebook-for-Online-Retail-Analysis"]], "download notebook": [[6, "download-notebook"]], "Getting Started": [[6, "Getting-Started"], [7, "getting-started"]], "Selecting and Indexing Data": [[6, "Selecting-and-Indexing-Data"]], "head and tail": [[6, "head-and-tail"]], "Selecting columns": [[6, "Selecting-columns"]], "Boolean Indexing": [[6, "Boolean-Indexing"]], "Aggregation and Descriptive Statistics": [[6, "Aggregation-and-Descriptive-Statistics"]], "Arithmetic Operations": [[6, "Arithmetic-Operations"]], "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch": [[7, "opensearch-py-ml-dataframes-and-machine-learning-backed-by-opensearch"]], "Installing Opensearch-py-ml": [[7, "installing-opensearch-py-ml"]], "DataFrame": [[8, "dataframe"], [163, "dataframe"]], "Parameters": [[8, "parameters"], [9, "parameters"], [10, "parameters"], [14, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [22, "parameters"], [23, "parameters"], [26, "parameters"], [27, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [56, "parameters"], [58, "parameters"], [59, "parameters"], [61, "parameters"], [62, "parameters"], [66, "parameters"], [67, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [110, "parameters"], [111, "parameters"], [117, "parameters"], [119, "parameters"], [121, "parameters"], [123, "parameters"], [124, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [151, "parameters"], [152, "parameters"]], "See Also": [[8, "see-also"], [9, "see-also"], [10, "see-also"], [11, "see-also"], [12, "see-also"], [13, "see-also"], [14, "see-also"], [15, "see-also"], [16, "see-also"], [17, "see-also"], [18, "see-also"], [19, "see-also"], [20, "see-also"], [22, "see-also"], [23, "see-also"], [24, "see-also"], [26, "see-also"], [27, "see-also"], [29, "see-also"], [30, "see-also"], [31, "see-also"], [32, "see-also"], [33, "see-also"], [34, "see-also"], [35, "see-also"], [36, "see-also"], [41, "see-also"], [42, "see-also"], [43, "see-also"], [46, "see-also"], [47, "see-also"], [48, "see-also"], [49, "see-also"], [50, "see-also"], [51, "see-also"], [52, "see-also"], [54, "see-also"], [55, "see-also"], [56, "see-also"], [58, "see-also"], [60, "see-also"], [63, "see-also"], [64, "see-also"], [66, "see-also"], [70, "see-also"], [72, "see-also"], [73, "see-also"], [74, "see-also"], [75, "see-also"], [76, "see-also"], [77, "see-also"], [78, "see-also"], [80, "see-also"], [84, "see-also"], [85, "see-also"], [86, "see-also"], [87, "see-also"], [93, "see-also"], [97, "see-also"], [108, "see-also"], [109, "see-also"], [112, "see-also"], [114, "see-also"], [116, "see-also"], [118, "see-also"], [119, "see-also"], [120, "see-also"], [121, "see-also"], [123, "see-also"], [124, "see-also"], [125, "see-also"], [126, "see-also"], [127, "see-also"], [128, "see-also"], [129, "see-also"], [130, "see-also"], [131, "see-also"], [132, "see-also"], [133, "see-also"], [134, "see-also"], [135, "see-also"], [151, "see-also"], [152, "see-also"]], "DataFrame.agg": [[9, "dataframe-agg"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [53, "returns"], [56, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [66, "returns"], [67, "returns"], [70, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [81, "returns"], [82, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [151, "returns"], [152, "returns"]], "DataFrame.aggregate": [[10, "dataframe-aggregate"]], "DataFrame.drop": [[14, "dataframe-drop"]], "DataFrame.filter": [[17, "dataframe-filter"]], "Notes": [[17, "notes"], [21, "notes"], [25, "notes"], [45, "notes"], [58, "notes"], [66, "notes"], [69, "notes"], [107, "notes"], [121, "notes"]], "DataFrame.groupby": [[19, "dataframe-groupby"]], "DataFrame.hist": [[21, "dataframe-hist"]], "DataFrame.idxmax": [[22, "dataframe-idxmax"]], "DataFrame.idxmin": [[23, "dataframe-idxmin"]], "DataFrame.iterrows": [[26, "dataframe-iterrows"]], "Yields": [[26, "yields"]], "DataFrame.itertuples": [[27, "dataframe-itertuples"]], "DataFrame.mad": [[29, "dataframe-mad"]], "DataFrame.max": [[30, "dataframe-max"]], "DataFrame.mean": [[31, "dataframe-mean"]], "DataFrame.median": [[32, "dataframe-median"]], "DataFrame.min": [[33, "dataframe-min"]], "DataFrame.mode": [[34, "dataframe-mode"]], "DataFrame.ndim": [[35, "dataframe-ndim"]], "DataFrame.nunique": [[36, "dataframe-nunique"]], "DataFrame.os_dtypes": [[37, "dataframe-os-dtypes"]], "DataFrame.os_info": [[38, "dataframe-os-info"]], "DataFrame.os_match": [[39, "dataframe-os-match"]], "DataFrame.os_query": [[40, "dataframe-os-query"]], "DataFrame.quantile": [[41, "dataframe-quantile"]], "DataFrame.sample": [[43, "dataframe-sample"]], "DataFrame.size": [[46, "dataframe-size"]], "DataFrame.std": [[47, "dataframe-std"]], "DataFrame.sum": [[48, "dataframe-sum"]], "DataFrame.to_csv": [[50, "dataframe-to-csv"]], "DataFrame.to_html": [[51, "dataframe-to-html"]], "DataFrame.to_numpy": [[52, "dataframe-to-numpy"]], "DataFrame.to_pandas": [[53, "dataframe-to-pandas"]], "DataFrame.to_string": [[54, "dataframe-to-string"]], "DataFrame.var": [[56, "dataframe-var"]], "opensearch_py_ml.Index": [[57, "opensearch-py-ml-index"]], "Series": [[58, "series"], [170, "series"]], "Series.add": [[59, "series-add"]], "Series.describe": [[60, "series-describe"]], "Series.div": [[61, "series-div"]], "Series.divide": [[62, "series-divide"]], "Series.dtype": [[63, "series-dtype"]], "Series.dtypes": [[64, "series-dtypes"]], "Series.empty": [[65, "series-empty"]], "Series.filter": [[66, "series-filter"]], "Series.floordiv": [[67, "series-floordiv"]], "Series.head": [[68, "series-head"]], "Series.hist": [[69, "series-hist"]], "Series.index": [[70, "series-index"]], "Series.isin": [[71, "series-isin"]], "Series.isna": [[72, "series-isna"]], "Series.isnull": [[73, "series-isnull"]], "Series.mad": [[74, "series-mad"]], "Series.max": [[75, "series-max"]], "Series.mean": [[76, "series-mean"]], "Series.median": [[77, "series-median"]], "Series.min": [[78, "series-min"]], "Series.mod": [[79, "series-mod"]], "Series.mode": [[80, "series-mode"]], "Series.mul": [[81, "series-mul"]], "Series.multiply": [[82, "series-multiply"]], "Series.name": [[83, "series-name"]], "Series.ndim": [[84, "series-ndim"]], "Series.notna": [[85, "series-notna"]], "Series.notnull": [[86, "series-notnull"]], "Series.nunique": [[87, "series-nunique"]], "Series.os_dtype": [[88, "series-os-dtype"]], "Series.os_dtypes": [[89, "series-os-dtypes"]], "Series.os_info": [[90, "series-os-info"]], "Series.os_match": [[91, "series-os-match"]], "Series.pow": [[92, "series-pow"]], "Series.quantile": [[93, "series-quantile"]], "Series.radd": [[94, "series-radd"]], "Series.rdiv": [[95, "series-rdiv"]], "Series.rdivide": [[96, "series-rdivide"]], "Series.rename": [[97, "series-rename"]], "Series.rfloordiv": [[98, "series-rfloordiv"]], "Series.rmod": [[99, "series-rmod"]], "Series.rmul": [[100, "series-rmul"]], "Series.rmultiply": [[101, "series-rmultiply"]], "Series.rpow": [[102, "series-rpow"]], "Series.rsub": [[103, "series-rsub"]], "Series.rsubtract": [[104, "series-rsubtract"]], "Series.rtruediv": [[105, "series-rtruediv"]], "Series.sample": [[106, "series-sample"]], "Series.shape": [[107, "series-shape"]], "Series.size": [[108, "series-size"]], "Series.std": [[109, "series-std"]], "Series.sub": [[110, "series-sub"]], "Series.subtract": [[111, "series-subtract"]], "Series.sum": [[112, "series-sum"]], "Series.tail": [[113, "series-tail"]], "Series.to_numpy": [[114, "series-to-numpy"]], "Series.to_pandas": [[115, "series-to-pandas"]], "Series.to_string": [[116, "series-to-string"]], "Series.truediv": [[117, "series-truediv"]], "Series.unique": [[118, "series-unique"]], "Series.value_counts": [[119, "series-value-counts"]], "Series.var": [[120, "series-var"]], "csv_to_opensearch": [[121, "csv-to-opensearch"]], "Other Parameters": [[121, "other-parameters"]], "groupby.DataFrameGroupBy": [[122, "groupby-dataframegroupby"]], "groupby.DataFrameGroupBy.agg": [[123, "groupby-dataframegroupby-agg"]], "groupby.DataFrameGroupBy.aggregate": [[124, "groupby-dataframegroupby-aggregate"]], "groupby.DataFrameGroupBy.count": [[125, "groupby-dataframegroupby-count"]], "groupby.DataFrameGroupBy.mad": [[126, "groupby-dataframegroupby-mad"]], "groupby.DataFrameGroupBy.max": [[127, "groupby-dataframegroupby-max"]], "groupby.DataFrameGroupBy.mean": [[128, "groupby-dataframegroupby-mean"]], "groupby.DataFrameGroupBy.median": [[129, "groupby-dataframegroupby-median"]], "groupby.DataFrameGroupBy.min": [[130, "groupby-dataframegroupby-min"]], "groupby.DataFrameGroupBy.nunique": [[131, "groupby-dataframegroupby-nunique"]], "groupby.DataFrameGroupBy.quantile": [[132, "groupby-dataframegroupby-quantile"]], "groupby.DataFrameGroupBy.std": [[133, "groupby-dataframegroupby-std"]], "groupby.DataFrameGroupBy.sum": [[134, "groupby-dataframegroupby-sum"]], "groupby.DataFrameGroupBy.var": [[135, "groupby-dataframegroupby-var"]], "groupby.GroupBy": [[136, "groupby-groupby"]], "Delete Model": [[137, "delete-model"], [167, "delete-model"]], "Delete Task": [[138, "delete-task"], [167, "delete-task"]], "Deploy Model": [[139, "deploy-model"], [167, "deploy-model"]], "Execute": [[140, "execute"], [167, "execute"]], "Generate Embedding": [[141, "generate-embedding"], [167, "generate-embedding"]], "Get Model Info": [[142, "get-model-info"], [167, "get-model-info"]], "Get Task Info": [[143, "get-task-info"], [167, "get-task-info"]], "Load Model": [[144, "load-model"], [167, "load-model"]], "Register Model": [[145, "register-model"], [167, "register-model"]], "Register Pretrained Model": [[146, "register-pretrained-model"], [167, "register-pretrained-model"]], "Undeploy Model": [[147, "undeploy-model"], [167, "undeploy-model"]], "Unload Model": [[148, "unload-model"], [167, "unload-model"]], "Upload Model": [[149, "upload-model"], [167, "upload-model"]], "Upload Pretrained Model": [[150, "upload-pretrained-model"], [167, "upload-pretrained-model"]], "opensearch_to_pandas": [[151, "opensearch-to-pandas"]], "pandas_to_opensearch": [[152, "pandas-to-opensearch"]], "Sentence Transformer": [[153, "sentence-transformer"], [169, "sentence-transformer"]], "SentenceTransformerModel.load_training_data": [[154, "sentencetransformermodel-load-training-data"]], "SentenceTransformerModel.make_model_config_json": [[155, "sentencetransformermodel-make-model-config-json"]], "SentenceTransformerModel.read_queries": [[156, "sentencetransformermodel-read-queries"]], "SentenceTransformerModel.save_as_onnx": [[157, "sentencetransformermodel-save-as-onnx"]], "SentenceTransformerModel.save_as_pt": [[158, "sentencetransformermodel-save-as-pt"]], "SentenceTransformerModel.set_up_accelerate_config": [[159, "sentencetransformermodel-set-up-accelerate-config"]], "SentenceTransformerModel.train": [[160, "sentencetransformermodel-train"]], "SentenceTransformerModel.train_model": [[161, "sentencetransformermodel-train-model"]], "SentenceTransformerModel.zip_model": [[162, "sentencetransformermodel-zip-model"]], "Constructor": [[163, "constructor"], [169, "constructor"], [170, "constructor"]], "Attributes and Underlying Data": [[163, "attributes-and-underlying-data"], [170, "attributes-and-underlying-data"]], "Indexing, Iteration": [[163, "indexing-iteration"], [170, "indexing-iteration"]], "Function Application, GroupBy & Window": [[163, "function-application-groupby-window"]], "Computations / Descriptive Stats": [[163, "computations-descriptive-stats"], [170, "computations-descriptive-stats"]], "Reindexing / Selection / Label Manipulation": [[163, "reindexing-selection-label-manipulation"], [170, "reindexing-selection-label-manipulation"]], "Plotting": [[163, "plotting"], [170, "plotting"]], "Opensearch Functions": [[163, "opensearch-functions"], [170, "opensearch-functions"]], "Serialization / IO / Conversion": [[163, "serialization-io-conversion"], [170, "serialization-io-conversion"]], "General Utility Functions": [[164, "general-utility-functions"]], "Pandas and Opensearch": [[164, "pandas-and-opensearch"]], "API Reference": [[165, "api-reference"]], "Input/Output": [[166, "input-output"]], "Flat File": [[166, "flat-file"]], "MLCommons Support": [[167, "mlcommons-support"]], "Pre-trained models": [[168, "pre-trained-models"]], "Train Model": [[169, "train-model"]], "(Optional) Step by Step Train Model": [[169, "optional-step-by-step-train-model"]], "Export Model": [[169, "export-model"]], "Config Model": [[169, "config-model"]], "Binary Operator Functions": [[170, "binary-operator-functions"]]}, "indexentries": {"module": [[7, "module-opensearch_py_ml"]], "opensearch_py_ml": [[7, "module-opensearch_py_ml"]], "dataframe (class in opensearch_py_ml)": [[8, "opensearch_py_ml.DataFrame"]], "agg() (opensearch_py_ml.dataframe method)": [[9, "opensearch_py_ml.DataFrame.agg"]], "aggregate() (opensearch_py_ml.dataframe method)": [[10, "opensearch_py_ml.DataFrame.aggregate"]], "columns (opensearch_py_ml.dataframe attribute)": [[11, "opensearch_py_ml.DataFrame.columns"]], "count() (opensearch_py_ml.dataframe method)": [[12, "opensearch_py_ml.DataFrame.count"]], "describe() (opensearch_py_ml.dataframe method)": [[13, "opensearch_py_ml.DataFrame.describe"]], "drop() (opensearch_py_ml.dataframe method)": [[14, "opensearch_py_ml.DataFrame.drop"]], "dtypes (opensearch_py_ml.dataframe attribute)": [[15, "opensearch_py_ml.DataFrame.dtypes"]], "empty (opensearch_py_ml.dataframe attribute)": [[16, "opensearch_py_ml.DataFrame.empty"]], "filter() (opensearch_py_ml.dataframe method)": [[17, "opensearch_py_ml.DataFrame.filter"]], "get() (opensearch_py_ml.dataframe method)": [[18, "opensearch_py_ml.DataFrame.get"]], "groupby() (opensearch_py_ml.dataframe method)": [[19, "opensearch_py_ml.DataFrame.groupby"]], "head() (opensearch_py_ml.dataframe method)": [[20, "opensearch_py_ml.DataFrame.head"]], "hist() (opensearch_py_ml.dataframe method)": [[21, "opensearch_py_ml.DataFrame.hist"]], "idxmax() (opensearch_py_ml.dataframe method)": [[22, "opensearch_py_ml.DataFrame.idxmax"]], "idxmin() (opensearch_py_ml.dataframe method)": [[23, "opensearch_py_ml.DataFrame.idxmin"]], "index (opensearch_py_ml.dataframe attribute)": [[24, "opensearch_py_ml.DataFrame.index"]], "info() (opensearch_py_ml.dataframe method)": [[25, "opensearch_py_ml.DataFrame.info"]], "iterrows() (opensearch_py_ml.dataframe method)": [[26, "opensearch_py_ml.DataFrame.iterrows"]], "itertuples() (opensearch_py_ml.dataframe method)": [[27, "opensearch_py_ml.DataFrame.itertuples"]], "keys() (opensearch_py_ml.dataframe method)": [[28, "opensearch_py_ml.DataFrame.keys"]], "mad() (opensearch_py_ml.dataframe method)": [[29, "opensearch_py_ml.DataFrame.mad"]], "max() (opensearch_py_ml.dataframe method)": [[30, "opensearch_py_ml.DataFrame.max"]], "mean() (opensearch_py_ml.dataframe method)": [[31, "opensearch_py_ml.DataFrame.mean"]], "median() (opensearch_py_ml.dataframe method)": [[32, "opensearch_py_ml.DataFrame.median"]], "min() (opensearch_py_ml.dataframe method)": [[33, "opensearch_py_ml.DataFrame.min"]], "mode() (opensearch_py_ml.dataframe method)": [[34, "opensearch_py_ml.DataFrame.mode"]], "ndim (opensearch_py_ml.dataframe attribute)": [[35, "opensearch_py_ml.DataFrame.ndim"]], "nunique() (opensearch_py_ml.dataframe method)": [[36, "opensearch_py_ml.DataFrame.nunique"]], "os_dtypes (opensearch_py_ml.dataframe attribute)": [[37, "opensearch_py_ml.DataFrame.os_dtypes"]], "os_info() (opensearch_py_ml.dataframe method)": [[38, "opensearch_py_ml.DataFrame.os_info"]], "os_match() (opensearch_py_ml.dataframe method)": [[39, "opensearch_py_ml.DataFrame.os_match"]], "os_query() (opensearch_py_ml.dataframe method)": [[40, "opensearch_py_ml.DataFrame.os_query"]], "quantile() (opensearch_py_ml.dataframe method)": [[41, "opensearch_py_ml.DataFrame.quantile"]], "query() (opensearch_py_ml.dataframe method)": [[42, "opensearch_py_ml.DataFrame.query"]], "sample() (opensearch_py_ml.dataframe method)": [[43, "opensearch_py_ml.DataFrame.sample"]], "select_dtypes() (opensearch_py_ml.dataframe method)": [[44, "opensearch_py_ml.DataFrame.select_dtypes"]], "shape (opensearch_py_ml.dataframe attribute)": [[45, "opensearch_py_ml.DataFrame.shape"]], "size (opensearch_py_ml.dataframe attribute)": [[46, "opensearch_py_ml.DataFrame.size"]], "std() (opensearch_py_ml.dataframe method)": [[47, "opensearch_py_ml.DataFrame.std"]], "sum() (opensearch_py_ml.dataframe method)": [[48, "opensearch_py_ml.DataFrame.sum"]], "tail() (opensearch_py_ml.dataframe method)": [[49, "opensearch_py_ml.DataFrame.tail"]], "to_csv() (opensearch_py_ml.dataframe method)": [[50, "opensearch_py_ml.DataFrame.to_csv"]], "to_html() (opensearch_py_ml.dataframe method)": [[51, "opensearch_py_ml.DataFrame.to_html"]], "to_numpy() (opensearch_py_ml.dataframe method)": [[52, "opensearch_py_ml.DataFrame.to_numpy"]], "to_pandas() (opensearch_py_ml.dataframe method)": [[53, "opensearch_py_ml.DataFrame.to_pandas"]], "to_string() (opensearch_py_ml.dataframe method)": [[54, "opensearch_py_ml.DataFrame.to_string"]], "values (opensearch_py_ml.dataframe attribute)": [[55, "opensearch_py_ml.DataFrame.values"]], "var() (opensearch_py_ml.dataframe method)": [[56, "opensearch_py_ml.DataFrame.var"]], "index (class in opensearch_py_ml)": [[57, "opensearch_py_ml.Index"]], "series (class in opensearch_py_ml)": [[58, "opensearch_py_ml.Series"]], "add() (opensearch_py_ml.series method)": [[59, "opensearch_py_ml.Series.add"]], "describe() (opensearch_py_ml.series method)": [[60, "opensearch_py_ml.Series.describe"]], "div() (opensearch_py_ml.series method)": [[61, "opensearch_py_ml.Series.div"]], "divide() (opensearch_py_ml.series method)": [[62, "opensearch_py_ml.Series.divide"]], "dtype (opensearch_py_ml.series attribute)": [[63, "opensearch_py_ml.Series.dtype"]], "dtypes (opensearch_py_ml.series attribute)": [[64, "opensearch_py_ml.Series.dtypes"]], "empty (opensearch_py_ml.series attribute)": [[65, "opensearch_py_ml.Series.empty"]], "filter() (opensearch_py_ml.series method)": [[66, "opensearch_py_ml.Series.filter"]], "floordiv() (opensearch_py_ml.series method)": [[67, "opensearch_py_ml.Series.floordiv"]], "head() (opensearch_py_ml.series method)": [[68, "opensearch_py_ml.Series.head"]], "hist() (opensearch_py_ml.series method)": [[69, "opensearch_py_ml.Series.hist"]], "index (opensearch_py_ml.series attribute)": [[70, "opensearch_py_ml.Series.index"]], "isin() (opensearch_py_ml.series method)": [[71, "opensearch_py_ml.Series.isin"]], "isna() (opensearch_py_ml.series method)": [[72, "opensearch_py_ml.Series.isna"]], "isnull() (opensearch_py_ml.series method)": [[73, "opensearch_py_ml.Series.isnull"]], "mad() (opensearch_py_ml.series method)": [[74, "opensearch_py_ml.Series.mad"]], "max() (opensearch_py_ml.series method)": [[75, "opensearch_py_ml.Series.max"]], "mean() (opensearch_py_ml.series method)": [[76, "opensearch_py_ml.Series.mean"]], "median() (opensearch_py_ml.series method)": [[77, "opensearch_py_ml.Series.median"]], "min() (opensearch_py_ml.series method)": [[78, "opensearch_py_ml.Series.min"]], "mod() (opensearch_py_ml.series method)": [[79, "opensearch_py_ml.Series.mod"]], "mode() (opensearch_py_ml.series method)": [[80, "opensearch_py_ml.Series.mode"]], "mul() (opensearch_py_ml.series method)": [[81, "opensearch_py_ml.Series.mul"]], "multiply() (opensearch_py_ml.series method)": [[82, "opensearch_py_ml.Series.multiply"]], "name (opensearch_py_ml.series attribute)": [[83, "opensearch_py_ml.Series.name"]], "ndim (opensearch_py_ml.series attribute)": [[84, "opensearch_py_ml.Series.ndim"]], "notna() (opensearch_py_ml.series method)": [[85, "opensearch_py_ml.Series.notna"]], "notnull() (opensearch_py_ml.series method)": [[86, "opensearch_py_ml.Series.notnull"]], "nunique() (opensearch_py_ml.series method)": [[87, "opensearch_py_ml.Series.nunique"]], "os_dtype (opensearch_py_ml.series attribute)": [[88, "opensearch_py_ml.Series.os_dtype"]], "os_dtypes (opensearch_py_ml.series attribute)": [[89, "opensearch_py_ml.Series.os_dtypes"]], "os_info() (opensearch_py_ml.series method)": [[90, "opensearch_py_ml.Series.os_info"]], "os_match() (opensearch_py_ml.series method)": [[91, "opensearch_py_ml.Series.os_match"]], "pow() (opensearch_py_ml.series method)": [[92, "opensearch_py_ml.Series.pow"]], "quantile() (opensearch_py_ml.series method)": [[93, "opensearch_py_ml.Series.quantile"]], "radd() (opensearch_py_ml.series method)": [[94, "opensearch_py_ml.Series.radd"]], "rdiv() (opensearch_py_ml.series method)": [[95, "opensearch_py_ml.Series.rdiv"]], "rdivide() (opensearch_py_ml.series method)": [[96, "opensearch_py_ml.Series.rdivide"]], "rename() (opensearch_py_ml.series method)": [[97, "opensearch_py_ml.Series.rename"]], "rfloordiv() (opensearch_py_ml.series method)": [[98, "opensearch_py_ml.Series.rfloordiv"]], "rmod() (opensearch_py_ml.series method)": [[99, "opensearch_py_ml.Series.rmod"]], "rmul() (opensearch_py_ml.series method)": [[100, "opensearch_py_ml.Series.rmul"]], "rmultiply() (opensearch_py_ml.series method)": [[101, "opensearch_py_ml.Series.rmultiply"]], "rpow() (opensearch_py_ml.series method)": [[102, "opensearch_py_ml.Series.rpow"]], "rsub() (opensearch_py_ml.series method)": [[103, "opensearch_py_ml.Series.rsub"]], "rsubtract() (opensearch_py_ml.series method)": [[104, "opensearch_py_ml.Series.rsubtract"]], "rtruediv() (opensearch_py_ml.series method)": [[105, "opensearch_py_ml.Series.rtruediv"]], "sample() (opensearch_py_ml.series method)": [[106, "opensearch_py_ml.Series.sample"]], "shape (opensearch_py_ml.series attribute)": [[107, "opensearch_py_ml.Series.shape"]], "size (opensearch_py_ml.series attribute)": [[108, "opensearch_py_ml.Series.size"]], "std() (opensearch_py_ml.series method)": [[109, "opensearch_py_ml.Series.std"]], "sub() (opensearch_py_ml.series method)": [[110, "opensearch_py_ml.Series.sub"]], "subtract() (opensearch_py_ml.series method)": [[111, "opensearch_py_ml.Series.subtract"]], "sum() (opensearch_py_ml.series method)": [[112, "opensearch_py_ml.Series.sum"]], "tail() (opensearch_py_ml.series method)": [[113, "opensearch_py_ml.Series.tail"]], "to_numpy() (opensearch_py_ml.series method)": [[114, "opensearch_py_ml.Series.to_numpy"]], "to_pandas() (opensearch_py_ml.series method)": [[115, "opensearch_py_ml.Series.to_pandas"]], "to_string() (opensearch_py_ml.series method)": [[116, "opensearch_py_ml.Series.to_string"]], "truediv() (opensearch_py_ml.series method)": [[117, "opensearch_py_ml.Series.truediv"]], "unique() (opensearch_py_ml.series method)": [[118, "opensearch_py_ml.Series.unique"]], "value_counts() (opensearch_py_ml.series method)": [[119, "opensearch_py_ml.Series.value_counts"]], "var() (opensearch_py_ml.series method)": [[120, "opensearch_py_ml.Series.var"]], "csv_to_opensearch() (in module opensearch_py_ml.etl)": [[121, "opensearch_py_ml.etl.csv_to_opensearch"]], "dataframegroupby (class in opensearch_py_ml.groupby)": [[122, "opensearch_py_ml.groupby.DataFrameGroupBy"]], "agg() (opensearch_py_ml.groupby.dataframegroupby method)": [[123, "opensearch_py_ml.groupby.DataFrameGroupBy.agg"]], "aggregate() (opensearch_py_ml.groupby.dataframegroupby method)": [[124, "opensearch_py_ml.groupby.DataFrameGroupBy.aggregate"]], "count() (opensearch_py_ml.groupby.dataframegroupby method)": [[125, "opensearch_py_ml.groupby.DataFrameGroupBy.count"]], "mad() (opensearch_py_ml.groupby.dataframegroupby method)": [[126, "opensearch_py_ml.groupby.DataFrameGroupBy.mad"]], "max() (opensearch_py_ml.groupby.dataframegroupby method)": [[127, "opensearch_py_ml.groupby.DataFrameGroupBy.max"]], "mean() (opensearch_py_ml.groupby.dataframegroupby method)": [[128, "opensearch_py_ml.groupby.DataFrameGroupBy.mean"]], "median() (opensearch_py_ml.groupby.dataframegroupby method)": [[129, "opensearch_py_ml.groupby.DataFrameGroupBy.median"]], "min() (opensearch_py_ml.groupby.dataframegroupby method)": [[130, "opensearch_py_ml.groupby.DataFrameGroupBy.min"]], "nunique() (opensearch_py_ml.groupby.dataframegroupby method)": [[131, "opensearch_py_ml.groupby.DataFrameGroupBy.nunique"]], "quantile() (opensearch_py_ml.groupby.dataframegroupby method)": [[132, "opensearch_py_ml.groupby.DataFrameGroupBy.quantile"]], "std() (opensearch_py_ml.groupby.dataframegroupby method)": [[133, "opensearch_py_ml.groupby.DataFrameGroupBy.std"]], "sum() (opensearch_py_ml.groupby.dataframegroupby method)": [[134, "opensearch_py_ml.groupby.DataFrameGroupBy.sum"]], "var() (opensearch_py_ml.groupby.dataframegroupby method)": [[135, "opensearch_py_ml.groupby.DataFrameGroupBy.var"]], "delete_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[137, "opensearch_py_ml.ml_commons.MLCommonClient.delete_model"]], "delete_task() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[138, "opensearch_py_ml.ml_commons.MLCommonClient.delete_task"]], "deploy_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[139, "opensearch_py_ml.ml_commons.MLCommonClient.deploy_model"]], "execute() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[140, "opensearch_py_ml.ml_commons.MLCommonClient.execute"]], "generate_embedding() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[141, "opensearch_py_ml.ml_commons.MLCommonClient.generate_embedding"]], "get_model_info() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[142, "opensearch_py_ml.ml_commons.MLCommonClient.get_model_info"]], "get_task_info() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[143, "opensearch_py_ml.ml_commons.MLCommonClient.get_task_info"]], "load_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[144, "opensearch_py_ml.ml_commons.MLCommonClient.load_model"]], "register_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[145, "opensearch_py_ml.ml_commons.MLCommonClient.register_model"]], "register_pretrained_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[146, "opensearch_py_ml.ml_commons.MLCommonClient.register_pretrained_model"]], "undeploy_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[147, "opensearch_py_ml.ml_commons.MLCommonClient.undeploy_model"]], "unload_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[148, "opensearch_py_ml.ml_commons.MLCommonClient.unload_model"]], "upload_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[149, "opensearch_py_ml.ml_commons.MLCommonClient.upload_model"]], "upload_pretrained_model() (in module opensearch_py_ml.ml_commons.mlcommonclient)": [[150, "opensearch_py_ml.ml_commons.MLCommonClient.upload_pretrained_model"]], "opensearch_to_pandas() (opensearch_py_ml.etl method)": [[151, "opensearch_py_ml.etl.opensearch_to_pandas"]], "pandas_to_opensearch() (opensearch_py_ml.etl method)": [[152, "opensearch_py_ml.etl.pandas_to_opensearch"]]}})